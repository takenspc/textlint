{
    "type": "Document",
    "children": [
        {
            "type": "Header",
            "depth": 1,
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown: Syntax",
                    "loc": {
                        "start": {
                            "line": 1,
                            "column": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 16
                        }
                    },
                    "range": [
                        0,
                        16
                    ],
                    "raw": "Markdown: Syntax"
                }
            ],
            "loc": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 2,
                    "column": 16
                }
            },
            "range": [
                0,
                33
            ],
            "raw": "Markdown: Syntax\n================"
        },
        {
            "type": "Html",
            "value": "<ul id=\"ProjectSubmenu\">\n    <li><a href=\"/projects/markdown/\" title=\"Markdown Project Page\">Main</a></li>\n    <li><a href=\"/projects/markdown/basics\" title=\"Markdown Basics\">Basics</a></li>\n    <li><a class=\"selected\" title=\"Markdown Syntax Documentation\">Syntax</a></li>\n    <li><a href=\"/projects/markdown/license\" title=\"Pricing and License Information\">License</a></li>\n    <li><a href=\"/projects/markdown/dingus\" title=\"Online Markdown Web Form\">Dingus</a></li>\n</ul>",
            "loc": {
                "start": {
                    "line": 4,
                    "column": 0
                },
                "end": {
                    "line": 10,
                    "column": 5
                }
            },
            "range": [
                35,
                508
            ],
            "raw": "<ul id=\"ProjectSubmenu\">\n    <li><a href=\"/projects/markdown/\" title=\"Markdown Project Page\">Main</a></li>\n    <li><a href=\"/projects/markdown/basics\" title=\"Markdown Basics\">Basics</a></li>\n    <li><a class=\"selected\" title=\"Markdown Syntax Documentation\">Syntax</a></li>\n    <li><a href=\"/projects/markdown/license\" title=\"Pricing and License Information\">License</a></li>\n    <li><a href=\"/projects/markdown/dingus\" title=\"Online Markdown Web Form\">Dingus</a></li>\n</ul>"
        },
        {
            "type": "List",
            "ordered": false,
            "start": null,
            "spread": false,
            "children": [
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Link",
                                    "title": null,
                                    "url": "#overview",
                                    "children": [
                                        {
                                            "type": "Str",
                                            "value": "Overview",
                                            "loc": {
                                                "start": {
                                                    "line": 13,
                                                    "column": 5
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "column": 13
                                                }
                                            },
                                            "range": [
                                                516,
                                                524
                                            ],
                                            "raw": "Overview"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 13,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 13,
                                            "column": 25
                                        }
                                    },
                                    "range": [
                                        515,
                                        536
                                    ],
                                    "raw": "[Overview](#overview)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 13,
                                    "column": 4
                                },
                                "end": {
                                    "line": 13,
                                    "column": 25
                                }
                            },
                            "range": [
                                515,
                                536
                            ],
                            "raw": "[Overview](#overview)"
                        },
                        {
                            "type": "List",
                            "ordered": false,
                            "start": null,
                            "spread": false,
                            "children": [
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#philosophy",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Philosophy",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 14,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 14,
                                                                    "column": 19
                                                                }
                                                            },
                                                            "range": [
                                                                546,
                                                                556
                                                            ],
                                                            "raw": "Philosophy"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 14,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 14,
                                                            "column": 33
                                                        }
                                                    },
                                                    "range": [
                                                        545,
                                                        570
                                                    ],
                                                    "raw": "[Philosophy](#philosophy)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 14,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 14,
                                                    "column": 33
                                                }
                                            },
                                            "range": [
                                                545,
                                                570
                                            ],
                                            "raw": "[Philosophy](#philosophy)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 14,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 14,
                                            "column": 33
                                        }
                                    },
                                    "range": [
                                        541,
                                        570
                                    ],
                                    "raw": "*   [Philosophy](#philosophy)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#html",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Inline HTML",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 15,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 15,
                                                                    "column": 20
                                                                }
                                                            },
                                                            "range": [
                                                                580,
                                                                591
                                                            ],
                                                            "raw": "Inline HTML"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 15,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 15,
                                                            "column": 28
                                                        }
                                                    },
                                                    "range": [
                                                        579,
                                                        599
                                                    ],
                                                    "raw": "[Inline HTML](#html)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 15,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 15,
                                                    "column": 28
                                                }
                                            },
                                            "range": [
                                                579,
                                                599
                                            ],
                                            "raw": "[Inline HTML](#html)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 15,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 15,
                                            "column": 28
                                        }
                                    },
                                    "range": [
                                        575,
                                        599
                                    ],
                                    "raw": "*   [Inline HTML](#html)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#autoescape",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Automatic Escaping for Special Characters",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 16,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 16,
                                                                    "column": 50
                                                                }
                                                            },
                                                            "range": [
                                                                609,
                                                                650
                                                            ],
                                                            "raw": "Automatic Escaping for Special Characters"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 16,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 16,
                                                            "column": 64
                                                        }
                                                    },
                                                    "range": [
                                                        608,
                                                        664
                                                    ],
                                                    "raw": "[Automatic Escaping for Special Characters](#autoescape)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 16,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 16,
                                                    "column": 64
                                                }
                                            },
                                            "range": [
                                                608,
                                                664
                                            ],
                                            "raw": "[Automatic Escaping for Special Characters](#autoescape)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 16,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 16,
                                            "column": 64
                                        }
                                    },
                                    "range": [
                                        604,
                                        664
                                    ],
                                    "raw": "*   [Automatic Escaping for Special Characters](#autoescape)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 14,
                                    "column": 4
                                },
                                "end": {
                                    "line": 16,
                                    "column": 64
                                }
                            },
                            "range": [
                                541,
                                664
                            ],
                            "raw": "*   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 13,
                            "column": 0
                        },
                        "end": {
                            "line": 16,
                            "column": 64
                        }
                    },
                    "range": [
                        511,
                        664
                    ],
                    "raw": "*   [Overview](#overview)\n    *   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Link",
                                    "title": null,
                                    "url": "#block",
                                    "children": [
                                        {
                                            "type": "Str",
                                            "value": "Block Elements",
                                            "loc": {
                                                "start": {
                                                    "line": 17,
                                                    "column": 5
                                                },
                                                "end": {
                                                    "line": 17,
                                                    "column": 19
                                                }
                                            },
                                            "range": [
                                                670,
                                                684
                                            ],
                                            "raw": "Block Elements"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 17,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 17,
                                            "column": 28
                                        }
                                    },
                                    "range": [
                                        669,
                                        693
                                    ],
                                    "raw": "[Block Elements](#block)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 17,
                                    "column": 4
                                },
                                "end": {
                                    "line": 17,
                                    "column": 28
                                }
                            },
                            "range": [
                                669,
                                693
                            ],
                            "raw": "[Block Elements](#block)"
                        },
                        {
                            "type": "List",
                            "ordered": false,
                            "start": null,
                            "spread": false,
                            "children": [
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#p",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Paragraphs and Line Breaks",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 18,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 18,
                                                                    "column": 35
                                                                }
                                                            },
                                                            "range": [
                                                                703,
                                                                729
                                                            ],
                                                            "raw": "Paragraphs and Line Breaks"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 18,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 18,
                                                            "column": 40
                                                        }
                                                    },
                                                    "range": [
                                                        702,
                                                        734
                                                    ],
                                                    "raw": "[Paragraphs and Line Breaks](#p)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 18,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 18,
                                                    "column": 40
                                                }
                                            },
                                            "range": [
                                                702,
                                                734
                                            ],
                                            "raw": "[Paragraphs and Line Breaks](#p)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 18,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 18,
                                            "column": 40
                                        }
                                    },
                                    "range": [
                                        698,
                                        734
                                    ],
                                    "raw": "*   [Paragraphs and Line Breaks](#p)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#header",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Headers",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 19,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 19,
                                                                    "column": 16
                                                                }
                                                            },
                                                            "range": [
                                                                744,
                                                                751
                                                            ],
                                                            "raw": "Headers"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 19,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 19,
                                                            "column": 26
                                                        }
                                                    },
                                                    "range": [
                                                        743,
                                                        761
                                                    ],
                                                    "raw": "[Headers](#header)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 19,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 19,
                                                    "column": 26
                                                }
                                            },
                                            "range": [
                                                743,
                                                761
                                            ],
                                            "raw": "[Headers](#header)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 19,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 19,
                                            "column": 26
                                        }
                                    },
                                    "range": [
                                        739,
                                        761
                                    ],
                                    "raw": "*   [Headers](#header)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#blockquote",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Blockquotes",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 20,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 20,
                                                                    "column": 20
                                                                }
                                                            },
                                                            "range": [
                                                                771,
                                                                782
                                                            ],
                                                            "raw": "Blockquotes"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 20,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 20,
                                                            "column": 34
                                                        }
                                                    },
                                                    "range": [
                                                        770,
                                                        796
                                                    ],
                                                    "raw": "[Blockquotes](#blockquote)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 20,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 20,
                                                    "column": 34
                                                }
                                            },
                                            "range": [
                                                770,
                                                796
                                            ],
                                            "raw": "[Blockquotes](#blockquote)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 20,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 20,
                                            "column": 34
                                        }
                                    },
                                    "range": [
                                        766,
                                        796
                                    ],
                                    "raw": "*   [Blockquotes](#blockquote)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#list",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Lists",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 21,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 21,
                                                                    "column": 14
                                                                }
                                                            },
                                                            "range": [
                                                                806,
                                                                811
                                                            ],
                                                            "raw": "Lists"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 21,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 21,
                                                            "column": 22
                                                        }
                                                    },
                                                    "range": [
                                                        805,
                                                        819
                                                    ],
                                                    "raw": "[Lists](#list)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 21,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 21,
                                                    "column": 22
                                                }
                                            },
                                            "range": [
                                                805,
                                                819
                                            ],
                                            "raw": "[Lists](#list)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 21,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 21,
                                            "column": 22
                                        }
                                    },
                                    "range": [
                                        801,
                                        819
                                    ],
                                    "raw": "*   [Lists](#list)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#precode",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Code Blocks",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 22,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 22,
                                                                    "column": 20
                                                                }
                                                            },
                                                            "range": [
                                                                829,
                                                                840
                                                            ],
                                                            "raw": "Code Blocks"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 22,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 22,
                                                            "column": 31
                                                        }
                                                    },
                                                    "range": [
                                                        828,
                                                        851
                                                    ],
                                                    "raw": "[Code Blocks](#precode)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 22,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 22,
                                                    "column": 31
                                                }
                                            },
                                            "range": [
                                                828,
                                                851
                                            ],
                                            "raw": "[Code Blocks](#precode)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 22,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 22,
                                            "column": 31
                                        }
                                    },
                                    "range": [
                                        824,
                                        851
                                    ],
                                    "raw": "*   [Code Blocks](#precode)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#hr",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Horizontal Rules",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 23,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 23,
                                                                    "column": 25
                                                                }
                                                            },
                                                            "range": [
                                                                861,
                                                                877
                                                            ],
                                                            "raw": "Horizontal Rules"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 23,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 23,
                                                            "column": 31
                                                        }
                                                    },
                                                    "range": [
                                                        860,
                                                        883
                                                    ],
                                                    "raw": "[Horizontal Rules](#hr)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 23,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 23,
                                                    "column": 31
                                                }
                                            },
                                            "range": [
                                                860,
                                                883
                                            ],
                                            "raw": "[Horizontal Rules](#hr)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 23,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 23,
                                            "column": 31
                                        }
                                    },
                                    "range": [
                                        856,
                                        883
                                    ],
                                    "raw": "*   [Horizontal Rules](#hr)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 18,
                                    "column": 4
                                },
                                "end": {
                                    "line": 23,
                                    "column": 31
                                }
                            },
                            "range": [
                                698,
                                883
                            ],
                            "raw": "*   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 17,
                            "column": 0
                        },
                        "end": {
                            "line": 23,
                            "column": 31
                        }
                    },
                    "range": [
                        665,
                        883
                    ],
                    "raw": "*   [Block Elements](#block)\n    *   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Link",
                                    "title": null,
                                    "url": "#span",
                                    "children": [
                                        {
                                            "type": "Str",
                                            "value": "Span Elements",
                                            "loc": {
                                                "start": {
                                                    "line": 24,
                                                    "column": 5
                                                },
                                                "end": {
                                                    "line": 24,
                                                    "column": 18
                                                }
                                            },
                                            "range": [
                                                889,
                                                902
                                            ],
                                            "raw": "Span Elements"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 24,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 24,
                                            "column": 26
                                        }
                                    },
                                    "range": [
                                        888,
                                        910
                                    ],
                                    "raw": "[Span Elements](#span)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 24,
                                    "column": 4
                                },
                                "end": {
                                    "line": 24,
                                    "column": 26
                                }
                            },
                            "range": [
                                888,
                                910
                            ],
                            "raw": "[Span Elements](#span)"
                        },
                        {
                            "type": "List",
                            "ordered": false,
                            "start": null,
                            "spread": false,
                            "children": [
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#link",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Links",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 25,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 25,
                                                                    "column": 14
                                                                }
                                                            },
                                                            "range": [
                                                                920,
                                                                925
                                                            ],
                                                            "raw": "Links"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 25,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 25,
                                                            "column": 22
                                                        }
                                                    },
                                                    "range": [
                                                        919,
                                                        933
                                                    ],
                                                    "raw": "[Links](#link)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 25,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 25,
                                                    "column": 22
                                                }
                                            },
                                            "range": [
                                                919,
                                                933
                                            ],
                                            "raw": "[Links](#link)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 25,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 25,
                                            "column": 22
                                        }
                                    },
                                    "range": [
                                        915,
                                        933
                                    ],
                                    "raw": "*   [Links](#link)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#em",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Emphasis",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 26,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 26,
                                                                    "column": 17
                                                                }
                                                            },
                                                            "range": [
                                                                943,
                                                                951
                                                            ],
                                                            "raw": "Emphasis"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 26,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 26,
                                                            "column": 23
                                                        }
                                                    },
                                                    "range": [
                                                        942,
                                                        957
                                                    ],
                                                    "raw": "[Emphasis](#em)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 26,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 26,
                                                    "column": 23
                                                }
                                            },
                                            "range": [
                                                942,
                                                957
                                            ],
                                            "raw": "[Emphasis](#em)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 26,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 26,
                                            "column": 23
                                        }
                                    },
                                    "range": [
                                        938,
                                        957
                                    ],
                                    "raw": "*   [Emphasis](#em)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#code",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Code",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 27,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 27,
                                                                    "column": 13
                                                                }
                                                            },
                                                            "range": [
                                                                967,
                                                                971
                                                            ],
                                                            "raw": "Code"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 27,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 27,
                                                            "column": 21
                                                        }
                                                    },
                                                    "range": [
                                                        966,
                                                        979
                                                    ],
                                                    "raw": "[Code](#code)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 27,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 27,
                                                    "column": 21
                                                }
                                            },
                                            "range": [
                                                966,
                                                979
                                            ],
                                            "raw": "[Code](#code)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 27,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 27,
                                            "column": 21
                                        }
                                    },
                                    "range": [
                                        962,
                                        979
                                    ],
                                    "raw": "*   [Code](#code)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#img",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Images",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 28,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 28,
                                                                    "column": 15
                                                                }
                                                            },
                                                            "range": [
                                                                989,
                                                                995
                                                            ],
                                                            "raw": "Images"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 28,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 28,
                                                            "column": 22
                                                        }
                                                    },
                                                    "range": [
                                                        988,
                                                        1002
                                                    ],
                                                    "raw": "[Images](#img)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 28,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 28,
                                                    "column": 22
                                                }
                                            },
                                            "range": [
                                                988,
                                                1002
                                            ],
                                            "raw": "[Images](#img)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 28,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 28,
                                            "column": 22
                                        }
                                    },
                                    "range": [
                                        984,
                                        1002
                                    ],
                                    "raw": "*   [Images](#img)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 25,
                                    "column": 4
                                },
                                "end": {
                                    "line": 28,
                                    "column": 22
                                }
                            },
                            "range": [
                                915,
                                1002
                            ],
                            "raw": "*   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 24,
                            "column": 0
                        },
                        "end": {
                            "line": 28,
                            "column": 22
                        }
                    },
                    "range": [
                        884,
                        1002
                    ],
                    "raw": "*   [Span Elements](#span)\n    *   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Link",
                                    "title": null,
                                    "url": "#misc",
                                    "children": [
                                        {
                                            "type": "Str",
                                            "value": "Miscellaneous",
                                            "loc": {
                                                "start": {
                                                    "line": 29,
                                                    "column": 5
                                                },
                                                "end": {
                                                    "line": 29,
                                                    "column": 18
                                                }
                                            },
                                            "range": [
                                                1008,
                                                1021
                                            ],
                                            "raw": "Miscellaneous"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 29,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 29,
                                            "column": 26
                                        }
                                    },
                                    "range": [
                                        1007,
                                        1029
                                    ],
                                    "raw": "[Miscellaneous](#misc)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 29,
                                    "column": 4
                                },
                                "end": {
                                    "line": 29,
                                    "column": 26
                                }
                            },
                            "range": [
                                1007,
                                1029
                            ],
                            "raw": "[Miscellaneous](#misc)"
                        },
                        {
                            "type": "List",
                            "ordered": false,
                            "start": null,
                            "spread": false,
                            "children": [
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#backslash",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Backslash Escapes",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 30,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 30,
                                                                    "column": 26
                                                                }
                                                            },
                                                            "range": [
                                                                1039,
                                                                1056
                                                            ],
                                                            "raw": "Backslash Escapes"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 30,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 30,
                                                            "column": 39
                                                        }
                                                    },
                                                    "range": [
                                                        1038,
                                                        1069
                                                    ],
                                                    "raw": "[Backslash Escapes](#backslash)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 30,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 30,
                                                    "column": 39
                                                }
                                            },
                                            "range": [
                                                1038,
                                                1069
                                            ],
                                            "raw": "[Backslash Escapes](#backslash)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 30,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 30,
                                            "column": 39
                                        }
                                    },
                                    "range": [
                                        1034,
                                        1069
                                    ],
                                    "raw": "*   [Backslash Escapes](#backslash)"
                                },
                                {
                                    "type": "ListItem",
                                    "spread": false,
                                    "checked": null,
                                    "children": [
                                        {
                                            "type": "Paragraph",
                                            "children": [
                                                {
                                                    "type": "Link",
                                                    "title": null,
                                                    "url": "#autolink",
                                                    "children": [
                                                        {
                                                            "type": "Str",
                                                            "value": "Automatic Links",
                                                            "loc": {
                                                                "start": {
                                                                    "line": 31,
                                                                    "column": 9
                                                                },
                                                                "end": {
                                                                    "line": 31,
                                                                    "column": 24
                                                                }
                                                            },
                                                            "range": [
                                                                1079,
                                                                1094
                                                            ],
                                                            "raw": "Automatic Links"
                                                        }
                                                    ],
                                                    "loc": {
                                                        "start": {
                                                            "line": 31,
                                                            "column": 8
                                                        },
                                                        "end": {
                                                            "line": 31,
                                                            "column": 36
                                                        }
                                                    },
                                                    "range": [
                                                        1078,
                                                        1106
                                                    ],
                                                    "raw": "[Automatic Links](#autolink)"
                                                }
                                            ],
                                            "loc": {
                                                "start": {
                                                    "line": 31,
                                                    "column": 8
                                                },
                                                "end": {
                                                    "line": 31,
                                                    "column": 36
                                                }
                                            },
                                            "range": [
                                                1078,
                                                1106
                                            ],
                                            "raw": "[Automatic Links](#autolink)"
                                        }
                                    ],
                                    "loc": {
                                        "start": {
                                            "line": 31,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 31,
                                            "column": 36
                                        }
                                    },
                                    "range": [
                                        1074,
                                        1106
                                    ],
                                    "raw": "*   [Automatic Links](#autolink)"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 30,
                                    "column": 4
                                },
                                "end": {
                                    "line": 31,
                                    "column": 36
                                }
                            },
                            "range": [
                                1034,
                                1106
                            ],
                            "raw": "*   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 29,
                            "column": 0
                        },
                        "end": {
                            "line": 31,
                            "column": 36
                        }
                    },
                    "range": [
                        1003,
                        1106
                    ],
                    "raw": "*   [Miscellaneous](#misc)\n    *   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)"
                }
            ],
            "loc": {
                "start": {
                    "line": 13,
                    "column": 0
                },
                "end": {
                    "line": 31,
                    "column": 36
                }
            },
            "range": [
                511,
                1106
            ],
            "raw": "*   [Overview](#overview)\n    *   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)\n*   [Block Elements](#block)\n    *   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)\n*   [Span Elements](#span)\n    *   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)\n*   [Miscellaneous](#misc)\n    *   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Strong",
                    "children": [
                        {
                            "type": "Str",
                            "value": "Note:",
                            "loc": {
                                "start": {
                                    "line": 34,
                                    "column": 2
                                },
                                "end": {
                                    "line": 34,
                                    "column": 7
                                }
                            },
                            "range": [
                                1111,
                                1116
                            ],
                            "raw": "Note:"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 34,
                            "column": 0
                        },
                        "end": {
                            "line": 34,
                            "column": 9
                        }
                    },
                    "range": [
                        1109,
                        1118
                    ],
                    "raw": "**Note:**"
                },
                {
                    "type": "Str",
                    "value": " This document is itself written using Markdown; you\ncan ",
                    "loc": {
                        "start": {
                            "line": 34,
                            "column": 9
                        },
                        "end": {
                            "line": 35,
                            "column": 4
                        }
                    },
                    "range": [
                        1118,
                        1175
                    ],
                    "raw": " This document is itself written using Markdown; you\ncan "
                },
                {
                    "type": "LinkReference",
                    "identifier": "src",
                    "label": "src",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "see the source for it by adding '.text' to the URL",
                            "loc": {
                                "start": {
                                    "line": 35,
                                    "column": 5
                                },
                                "end": {
                                    "line": 35,
                                    "column": 55
                                }
                            },
                            "range": [
                                1176,
                                1226
                            ],
                            "raw": "see the source for it by adding '.text' to the URL"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 35,
                            "column": 4
                        },
                        "end": {
                            "line": 35,
                            "column": 61
                        }
                    },
                    "range": [
                        1175,
                        1232
                    ],
                    "raw": "[see the source for it by adding '.text' to the URL][src]"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 35,
                            "column": 61
                        },
                        "end": {
                            "line": 35,
                            "column": 62
                        }
                    },
                    "range": [
                        1232,
                        1233
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 34,
                    "column": 0
                },
                "end": {
                    "line": 35,
                    "column": 62
                }
            },
            "range": [
                1109,
                1233
            ],
            "raw": "**Note:** This document is itself written using Markdown; you\ncan [see the source for it by adding '.text' to the URL][src]."
        },
        {
            "type": "Definition",
            "identifier": "src",
            "label": "src",
            "title": null,
            "url": "/projects/markdown/syntax.text",
            "loc": {
                "start": {
                    "line": 37,
                    "column": 0
                },
                "end": {
                    "line": 37,
                    "column": 39
                }
            },
            "range": [
                1235,
                1274
            ],
            "raw": "  [src]: /projects/markdown/syntax.text"
        },
        {
            "type": "HorizontalRule",
            "loc": {
                "start": {
                    "line": 39,
                    "column": 0
                },
                "end": {
                    "line": 39,
                    "column": 5
                }
            },
            "range": [
                1276,
                1281
            ],
            "raw": "* * *"
        },
        {
            "type": "Html",
            "value": "<h2 id=\"overview\">Overview</h2>",
            "loc": {
                "start": {
                    "line": 41,
                    "column": 0
                },
                "end": {
                    "line": 41,
                    "column": 31
                }
            },
            "range": [
                1283,
                1314
            ],
            "raw": "<h2 id=\"overview\">Overview</h2>"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"philosophy\">Philosophy</h3>",
            "loc": {
                "start": {
                    "line": 43,
                    "column": 0
                },
                "end": {
                    "line": 43,
                    "column": 35
                }
            },
            "range": [
                1316,
                1351
            ],
            "raw": "<h3 id=\"philosophy\">Philosophy</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown is intended to be as easy-to-read and easy-to-write as is feasible.",
                    "loc": {
                        "start": {
                            "line": 45,
                            "column": 0
                        },
                        "end": {
                            "line": 45,
                            "column": 76
                        }
                    },
                    "range": [
                        1353,
                        1429
                    ],
                    "raw": "Markdown is intended to be as easy-to-read and easy-to-write as is feasible."
                }
            ],
            "loc": {
                "start": {
                    "line": 45,
                    "column": 0
                },
                "end": {
                    "line": 45,
                    "column": 76
                }
            },
            "range": [
                1353,
                1429
            ],
            "raw": "Markdown is intended to be as easy-to-read and easy-to-write as is feasible."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Readability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it's been marked up with tags or formatting instructions. While\nMarkdown's syntax has been influenced by several existing text-to-HTML\nfilters -- including ",
                    "loc": {
                        "start": {
                            "line": 47,
                            "column": 0
                        },
                        "end": {
                            "line": 51,
                            "column": 21
                        }
                    },
                    "range": [
                        1431,
                        1734
                    ],
                    "raw": "Readability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it's been marked up with tags or formatting instructions. While\nMarkdown's syntax has been influenced by several existing text-to-HTML\nfilters -- including "
                },
                {
                    "type": "LinkReference",
                    "identifier": "1",
                    "label": "1",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "Setext",
                            "loc": {
                                "start": {
                                    "line": 51,
                                    "column": 22
                                },
                                "end": {
                                    "line": 51,
                                    "column": 28
                                }
                            },
                            "range": [
                                1735,
                                1741
                            ],
                            "raw": "Setext"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 21
                        },
                        "end": {
                            "line": 51,
                            "column": 33
                        }
                    },
                    "range": [
                        1734,
                        1746
                    ],
                    "raw": "[Setext] [1]"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 33
                        },
                        "end": {
                            "line": 51,
                            "column": 35
                        }
                    },
                    "range": [
                        1746,
                        1748
                    ],
                    "raw": ", "
                },
                {
                    "type": "LinkReference",
                    "identifier": "2",
                    "label": "2",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "atx",
                            "loc": {
                                "start": {
                                    "line": 51,
                                    "column": 36
                                },
                                "end": {
                                    "line": 51,
                                    "column": 39
                                }
                            },
                            "range": [
                                1749,
                                1752
                            ],
                            "raw": "atx"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 35
                        },
                        "end": {
                            "line": 51,
                            "column": 44
                        }
                    },
                    "range": [
                        1748,
                        1757
                    ],
                    "raw": "[atx] [2]"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 44
                        },
                        "end": {
                            "line": 51,
                            "column": 46
                        }
                    },
                    "range": [
                        1757,
                        1759
                    ],
                    "raw": ", "
                },
                {
                    "type": "LinkReference",
                    "identifier": "3",
                    "label": "3",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "Textile",
                            "loc": {
                                "start": {
                                    "line": 51,
                                    "column": 47
                                },
                                "end": {
                                    "line": 51,
                                    "column": 54
                                }
                            },
                            "range": [
                                1760,
                                1767
                            ],
                            "raw": "Textile"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 46
                        },
                        "end": {
                            "line": 51,
                            "column": 59
                        }
                    },
                    "range": [
                        1759,
                        1772
                    ],
                    "raw": "[Textile] [3]"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 59
                        },
                        "end": {
                            "line": 51,
                            "column": 61
                        }
                    },
                    "range": [
                        1772,
                        1774
                    ],
                    "raw": ", "
                },
                {
                    "type": "LinkReference",
                    "identifier": "4",
                    "label": "4",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "reStructuredText",
                            "loc": {
                                "start": {
                                    "line": 51,
                                    "column": 62
                                },
                                "end": {
                                    "line": 51,
                                    "column": 78
                                }
                            },
                            "range": [
                                1775,
                                1791
                            ],
                            "raw": "reStructuredText"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 61
                        },
                        "end": {
                            "line": 51,
                            "column": 83
                        }
                    },
                    "range": [
                        1774,
                        1796
                    ],
                    "raw": "[reStructuredText] [4]"
                },
                {
                    "type": "Str",
                    "value": ",\n",
                    "loc": {
                        "start": {
                            "line": 51,
                            "column": 83
                        },
                        "end": {
                            "line": 52,
                            "column": 0
                        }
                    },
                    "range": [
                        1796,
                        1798
                    ],
                    "raw": ",\n"
                },
                {
                    "type": "LinkReference",
                    "identifier": "5",
                    "label": "5",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "Grutatext",
                            "loc": {
                                "start": {
                                    "line": 52,
                                    "column": 1
                                },
                                "end": {
                                    "line": 52,
                                    "column": 10
                                }
                            },
                            "range": [
                                1799,
                                1808
                            ],
                            "raw": "Grutatext"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 52,
                            "column": 0
                        },
                        "end": {
                            "line": 52,
                            "column": 15
                        }
                    },
                    "range": [
                        1798,
                        1813
                    ],
                    "raw": "[Grutatext] [5]"
                },
                {
                    "type": "Str",
                    "value": ", and ",
                    "loc": {
                        "start": {
                            "line": 52,
                            "column": 15
                        },
                        "end": {
                            "line": 52,
                            "column": 21
                        }
                    },
                    "range": [
                        1813,
                        1819
                    ],
                    "raw": ", and "
                },
                {
                    "type": "LinkReference",
                    "identifier": "6",
                    "label": "6",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "EtText",
                            "loc": {
                                "start": {
                                    "line": 52,
                                    "column": 22
                                },
                                "end": {
                                    "line": 52,
                                    "column": 28
                                }
                            },
                            "range": [
                                1820,
                                1826
                            ],
                            "raw": "EtText"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 52,
                            "column": 21
                        },
                        "end": {
                            "line": 52,
                            "column": 33
                        }
                    },
                    "range": [
                        1819,
                        1831
                    ],
                    "raw": "[EtText] [6]"
                },
                {
                    "type": "Str",
                    "value": " -- the single biggest source of\ninspiration for Markdown's syntax is the format of plain text email.",
                    "loc": {
                        "start": {
                            "line": 52,
                            "column": 33
                        },
                        "end": {
                            "line": 53,
                            "column": 68
                        }
                    },
                    "range": [
                        1831,
                        1932
                    ],
                    "raw": " -- the single biggest source of\ninspiration for Markdown's syntax is the format of plain text email."
                }
            ],
            "loc": {
                "start": {
                    "line": 47,
                    "column": 0
                },
                "end": {
                    "line": 53,
                    "column": 68
                }
            },
            "range": [
                1431,
                1932
            ],
            "raw": "Readability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it's been marked up with tags or formatting instructions. While\nMarkdown's syntax has been influenced by several existing text-to-HTML\nfilters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4],\n[Grutatext] [5], and [EtText] [6] -- the single biggest source of\ninspiration for Markdown's syntax is the format of plain text email."
        },
        {
            "type": "Definition",
            "identifier": "1",
            "label": "1",
            "title": null,
            "url": "http://docutils.sourceforge.net/mirror/setext.html",
            "loc": {
                "start": {
                    "line": 55,
                    "column": 0
                },
                "end": {
                    "line": 55,
                    "column": 57
                }
            },
            "range": [
                1934,
                1991
            ],
            "raw": "  [1]: http://docutils.sourceforge.net/mirror/setext.html"
        },
        {
            "type": "Definition",
            "identifier": "2",
            "label": "2",
            "title": null,
            "url": "http://www.aaronsw.com/2002/atx/",
            "loc": {
                "start": {
                    "line": 56,
                    "column": 0
                },
                "end": {
                    "line": 56,
                    "column": 39
                }
            },
            "range": [
                1992,
                2031
            ],
            "raw": "  [2]: http://www.aaronsw.com/2002/atx/"
        },
        {
            "type": "Definition",
            "identifier": "3",
            "label": "3",
            "title": null,
            "url": "http://textism.com/tools/textile/",
            "loc": {
                "start": {
                    "line": 57,
                    "column": 0
                },
                "end": {
                    "line": 57,
                    "column": 40
                }
            },
            "range": [
                2032,
                2072
            ],
            "raw": "  [3]: http://textism.com/tools/textile/"
        },
        {
            "type": "Definition",
            "identifier": "4",
            "label": "4",
            "title": null,
            "url": "http://docutils.sourceforge.net/rst.html",
            "loc": {
                "start": {
                    "line": 58,
                    "column": 0
                },
                "end": {
                    "line": 58,
                    "column": 47
                }
            },
            "range": [
                2073,
                2120
            ],
            "raw": "  [4]: http://docutils.sourceforge.net/rst.html"
        },
        {
            "type": "Definition",
            "identifier": "5",
            "label": "5",
            "title": null,
            "url": "http://www.triptico.com/software/grutatxt.html",
            "loc": {
                "start": {
                    "line": 59,
                    "column": 0
                },
                "end": {
                    "line": 59,
                    "column": 53
                }
            },
            "range": [
                2121,
                2174
            ],
            "raw": "  [5]: http://www.triptico.com/software/grutatxt.html"
        },
        {
            "type": "Definition",
            "identifier": "6",
            "label": "6",
            "title": null,
            "url": "http://ettext.taint.org/doc/",
            "loc": {
                "start": {
                    "line": 60,
                    "column": 0
                },
                "end": {
                    "line": 60,
                    "column": 35
                }
            },
            "range": [
                2175,
                2210
            ],
            "raw": "  [6]: http://ettext.taint.org/doc/"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To this end, Markdown's syntax is comprised entirely of punctuation\ncharacters, which punctuation characters have been carefully chosen so\nas to look like what they mean. E.g., asterisks around a word actually\nlook like ",
                    "loc": {
                        "start": {
                            "line": 62,
                            "column": 0
                        },
                        "end": {
                            "line": 65,
                            "column": 10
                        }
                    },
                    "range": [
                        2212,
                        2432
                    ],
                    "raw": "To this end, Markdown's syntax is comprised entirely of punctuation\ncharacters, which punctuation characters have been carefully chosen so\nas to look like what they mean. E.g., asterisks around a word actually\nlook like "
                },
                {
                    "type": "Str",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 65,
                            "column": 10
                        },
                        "end": {
                            "line": 65,
                            "column": 12
                        }
                    },
                    "range": [
                        2432,
                        2434
                    ],
                    "raw": "\\*"
                },
                {
                    "type": "Str",
                    "value": "emphasis",
                    "loc": {
                        "start": {
                            "line": 65,
                            "column": 12
                        },
                        "end": {
                            "line": 65,
                            "column": 20
                        }
                    },
                    "range": [
                        2434,
                        2442
                    ],
                    "raw": "emphasis"
                },
                {
                    "type": "Str",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 65,
                            "column": 20
                        },
                        "end": {
                            "line": 65,
                            "column": 22
                        }
                    },
                    "range": [
                        2442,
                        2444
                    ],
                    "raw": "\\*"
                },
                {
                    "type": "Str",
                    "value": ". Markdown lists look like, well, lists. Even\nblockquotes look like quoted passages of text, assuming you've ever\nused email.",
                    "loc": {
                        "start": {
                            "line": 65,
                            "column": 22
                        },
                        "end": {
                            "line": 67,
                            "column": 11
                        }
                    },
                    "range": [
                        2444,
                        2569
                    ],
                    "raw": ". Markdown lists look like, well, lists. Even\nblockquotes look like quoted passages of text, assuming you've ever\nused email."
                }
            ],
            "loc": {
                "start": {
                    "line": 62,
                    "column": 0
                },
                "end": {
                    "line": 67,
                    "column": 11
                }
            },
            "range": [
                2212,
                2569
            ],
            "raw": "To this end, Markdown's syntax is comprised entirely of punctuation\ncharacters, which punctuation characters have been carefully chosen so\nas to look like what they mean. E.g., asterisks around a word actually\nlook like \\*emphasis\\*. Markdown lists look like, well, lists. Even\nblockquotes look like quoted passages of text, assuming you've ever\nused email."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"html\">Inline HTML</h3>",
            "loc": {
                "start": {
                    "line": 71,
                    "column": 0
                },
                "end": {
                    "line": 71,
                    "column": 30
                }
            },
            "range": [
                2573,
                2603
            ],
            "raw": "<h3 id=\"html\">Inline HTML</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown's syntax is intended for one purpose: to be used as a\nformat for ",
                    "loc": {
                        "start": {
                            "line": 73,
                            "column": 0
                        },
                        "end": {
                            "line": 74,
                            "column": 11
                        }
                    },
                    "range": [
                        2605,
                        2679
                    ],
                    "raw": "Markdown's syntax is intended for one purpose: to be used as a\nformat for "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "writing",
                            "loc": {
                                "start": {
                                    "line": 74,
                                    "column": 12
                                },
                                "end": {
                                    "line": 74,
                                    "column": 19
                                }
                            },
                            "range": [
                                2680,
                                2687
                            ],
                            "raw": "writing"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 74,
                            "column": 11
                        },
                        "end": {
                            "line": 74,
                            "column": 20
                        }
                    },
                    "range": [
                        2679,
                        2688
                    ],
                    "raw": "*writing*"
                },
                {
                    "type": "Str",
                    "value": " for the web.",
                    "loc": {
                        "start": {
                            "line": 74,
                            "column": 20
                        },
                        "end": {
                            "line": 74,
                            "column": 33
                        }
                    },
                    "range": [
                        2688,
                        2701
                    ],
                    "raw": " for the web."
                }
            ],
            "loc": {
                "start": {
                    "line": 73,
                    "column": 0
                },
                "end": {
                    "line": 74,
                    "column": 33
                }
            },
            "range": [
                2605,
                2701
            ],
            "raw": "Markdown's syntax is intended for one purpose: to be used as a\nformat for *writing* for the web."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown is not a replacement for HTML, or even close to it. Its\nsyntax is very small, corresponding only to a very small subset of\nHTML tags. The idea is ",
                    "loc": {
                        "start": {
                            "line": 76,
                            "column": 0
                        },
                        "end": {
                            "line": 78,
                            "column": 23
                        }
                    },
                    "range": [
                        2703,
                        2858
                    ],
                    "raw": "Markdown is not a replacement for HTML, or even close to it. Its\nsyntax is very small, corresponding only to a very small subset of\nHTML tags. The idea is "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "not",
                            "loc": {
                                "start": {
                                    "line": 78,
                                    "column": 24
                                },
                                "end": {
                                    "line": 78,
                                    "column": 27
                                }
                            },
                            "range": [
                                2859,
                                2862
                            ],
                            "raw": "not"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 78,
                            "column": 23
                        },
                        "end": {
                            "line": 78,
                            "column": 28
                        }
                    },
                    "range": [
                        2858,
                        2863
                    ],
                    "raw": "*not*"
                },
                {
                    "type": "Str",
                    "value": " to create a syntax that makes it easier\nto insert HTML tags. In my opinion, HTML tags are already easy to\ninsert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a ",
                    "loc": {
                        "start": {
                            "line": 78,
                            "column": 28
                        },
                        "end": {
                            "line": 81,
                            "column": 22
                        }
                    },
                    "range": [
                        2863,
                        3061
                    ],
                    "raw": " to create a syntax that makes it easier\nto insert HTML tags. In my opinion, HTML tags are already easy to\ninsert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "publishing",
                            "loc": {
                                "start": {
                                    "line": 81,
                                    "column": 23
                                },
                                "end": {
                                    "line": 81,
                                    "column": 33
                                }
                            },
                            "range": [
                                3062,
                                3072
                            ],
                            "raw": "publishing"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 81,
                            "column": 22
                        },
                        "end": {
                            "line": 81,
                            "column": 34
                        }
                    },
                    "range": [
                        3061,
                        3073
                    ],
                    "raw": "*publishing*"
                },
                {
                    "type": "Str",
                    "value": " format; Markdown is a ",
                    "loc": {
                        "start": {
                            "line": 81,
                            "column": 34
                        },
                        "end": {
                            "line": 81,
                            "column": 57
                        }
                    },
                    "range": [
                        3073,
                        3096
                    ],
                    "raw": " format; Markdown is a "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "writing",
                            "loc": {
                                "start": {
                                    "line": 81,
                                    "column": 58
                                },
                                "end": {
                                    "line": 81,
                                    "column": 65
                                }
                            },
                            "range": [
                                3097,
                                3104
                            ],
                            "raw": "writing"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 81,
                            "column": 57
                        },
                        "end": {
                            "line": 81,
                            "column": 66
                        }
                    },
                    "range": [
                        3096,
                        3105
                    ],
                    "raw": "*writing*"
                },
                {
                    "type": "Str",
                    "value": "\nformat. Thus, Markdown's formatting syntax only addresses issues that\ncan be conveyed in plain text.",
                    "loc": {
                        "start": {
                            "line": 81,
                            "column": 66
                        },
                        "end": {
                            "line": 83,
                            "column": 30
                        }
                    },
                    "range": [
                        3105,
                        3206
                    ],
                    "raw": "\nformat. Thus, Markdown's formatting syntax only addresses issues that\ncan be conveyed in plain text."
                }
            ],
            "loc": {
                "start": {
                    "line": 76,
                    "column": 0
                },
                "end": {
                    "line": 83,
                    "column": 30
                }
            },
            "range": [
                2703,
                3206
            ],
            "raw": "Markdown is not a replacement for HTML, or even close to it. Its\nsyntax is very small, corresponding only to a very small subset of\nHTML tags. The idea is *not* to create a syntax that makes it easier\nto insert HTML tags. In my opinion, HTML tags are already easy to\ninsert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a *publishing* format; Markdown is a *writing*\nformat. Thus, Markdown's formatting syntax only addresses issues that\ncan be conveyed in plain text."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "For any markup that is not covered by Markdown's syntax, you simply\nuse HTML itself. There's no need to preface it or delimit it to\nindicate that you're switching from Markdown to HTML; you just use\nthe tags.",
                    "loc": {
                        "start": {
                            "line": 85,
                            "column": 0
                        },
                        "end": {
                            "line": 88,
                            "column": 9
                        }
                    },
                    "range": [
                        3208,
                        3416
                    ],
                    "raw": "For any markup that is not covered by Markdown's syntax, you simply\nuse HTML itself. There's no need to preface it or delimit it to\nindicate that you're switching from Markdown to HTML; you just use\nthe tags."
                }
            ],
            "loc": {
                "start": {
                    "line": 85,
                    "column": 0
                },
                "end": {
                    "line": 88,
                    "column": 9
                }
            },
            "range": [
                3208,
                3416
            ],
            "raw": "For any markup that is not covered by Markdown's syntax, you simply\nuse HTML itself. There's no need to preface it or delimit it to\nindicate that you're switching from Markdown to HTML; you just use\nthe tags."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The only restrictions are that block-level HTML elements -- e.g. ",
                    "loc": {
                        "start": {
                            "line": 90,
                            "column": 0
                        },
                        "end": {
                            "line": 90,
                            "column": 65
                        }
                    },
                    "range": [
                        3418,
                        3483
                    ],
                    "raw": "The only restrictions are that block-level HTML elements -- e.g. "
                },
                {
                    "type": "Code",
                    "value": "<div>",
                    "loc": {
                        "start": {
                            "line": 90,
                            "column": 65
                        },
                        "end": {
                            "line": 90,
                            "column": 72
                        }
                    },
                    "range": [
                        3483,
                        3490
                    ],
                    "raw": "`<div>`"
                },
                {
                    "type": "Str",
                    "value": ",\n",
                    "loc": {
                        "start": {
                            "line": 90,
                            "column": 72
                        },
                        "end": {
                            "line": 91,
                            "column": 0
                        }
                    },
                    "range": [
                        3490,
                        3492
                    ],
                    "raw": ",\n"
                },
                {
                    "type": "Code",
                    "value": "<table>",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 0
                        },
                        "end": {
                            "line": 91,
                            "column": 9
                        }
                    },
                    "range": [
                        3492,
                        3501
                    ],
                    "raw": "`<table>`"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 9
                        },
                        "end": {
                            "line": 91,
                            "column": 11
                        }
                    },
                    "range": [
                        3501,
                        3503
                    ],
                    "raw": ", "
                },
                {
                    "type": "Code",
                    "value": "<pre>",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 11
                        },
                        "end": {
                            "line": 91,
                            "column": 18
                        }
                    },
                    "range": [
                        3503,
                        3510
                    ],
                    "raw": "`<pre>`"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 18
                        },
                        "end": {
                            "line": 91,
                            "column": 20
                        }
                    },
                    "range": [
                        3510,
                        3512
                    ],
                    "raw": ", "
                },
                {
                    "type": "Code",
                    "value": "<p>",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 20
                        },
                        "end": {
                            "line": 91,
                            "column": 25
                        }
                    },
                    "range": [
                        3512,
                        3517
                    ],
                    "raw": "`<p>`"
                },
                {
                    "type": "Str",
                    "value": ", etc. -- must be separated from surrounding\ncontent by blank lines, and the start and end tags of the block should\nnot be indented with tabs or spaces. Markdown is smart enough not\nto add extra (unwanted) ",
                    "loc": {
                        "start": {
                            "line": 91,
                            "column": 25
                        },
                        "end": {
                            "line": 94,
                            "column": 24
                        }
                    },
                    "range": [
                        3517,
                        3723
                    ],
                    "raw": ", etc. -- must be separated from surrounding\ncontent by blank lines, and the start and end tags of the block should\nnot be indented with tabs or spaces. Markdown is smart enough not\nto add extra (unwanted) "
                },
                {
                    "type": "Code",
                    "value": "<p>",
                    "loc": {
                        "start": {
                            "line": 94,
                            "column": 24
                        },
                        "end": {
                            "line": 94,
                            "column": 29
                        }
                    },
                    "range": [
                        3723,
                        3728
                    ],
                    "raw": "`<p>`"
                },
                {
                    "type": "Str",
                    "value": " tags around HTML block-level tags.",
                    "loc": {
                        "start": {
                            "line": 94,
                            "column": 29
                        },
                        "end": {
                            "line": 94,
                            "column": 64
                        }
                    },
                    "range": [
                        3728,
                        3763
                    ],
                    "raw": " tags around HTML block-level tags."
                }
            ],
            "loc": {
                "start": {
                    "line": 90,
                    "column": 0
                },
                "end": {
                    "line": 94,
                    "column": 64
                }
            },
            "range": [
                3418,
                3763
            ],
            "raw": "The only restrictions are that block-level HTML elements -- e.g. `<div>`,\n`<table>`, `<pre>`, `<p>`, etc. -- must be separated from surrounding\ncontent by blank lines, and the start and end tags of the block should\nnot be indented with tabs or spaces. Markdown is smart enough not\nto add extra (unwanted) `<p>` tags around HTML block-level tags."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "For example, to add an HTML table to a Markdown article:",
                    "loc": {
                        "start": {
                            "line": 96,
                            "column": 0
                        },
                        "end": {
                            "line": 96,
                            "column": 56
                        }
                    },
                    "range": [
                        3765,
                        3821
                    ],
                    "raw": "For example, to add an HTML table to a Markdown article:"
                }
            ],
            "loc": {
                "start": {
                    "line": 96,
                    "column": 0
                },
                "end": {
                    "line": 96,
                    "column": 56
                }
            },
            "range": [
                3765,
                3821
            ],
            "raw": "For example, to add an HTML table to a Markdown article:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.",
            "loc": {
                "start": {
                    "line": 98,
                    "column": 0
                },
                "end": {
                    "line": 106,
                    "column": 38
                }
            },
            "range": [
                3823,
                3973
            ],
            "raw": "    This is a regular paragraph.\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    This is another regular paragraph."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Note that Markdown formatting syntax is not processed within block-level\nHTML tags. E.g., you can't use Markdown-style ",
                    "loc": {
                        "start": {
                            "line": 108,
                            "column": 0
                        },
                        "end": {
                            "line": 109,
                            "column": 46
                        }
                    },
                    "range": [
                        3975,
                        4094
                    ],
                    "raw": "Note that Markdown formatting syntax is not processed within block-level\nHTML tags. E.g., you can't use Markdown-style "
                },
                {
                    "type": "Code",
                    "value": "*emphasis*",
                    "loc": {
                        "start": {
                            "line": 109,
                            "column": 46
                        },
                        "end": {
                            "line": 109,
                            "column": 58
                        }
                    },
                    "range": [
                        4094,
                        4106
                    ],
                    "raw": "`*emphasis*`"
                },
                {
                    "type": "Str",
                    "value": " inside an\nHTML block.",
                    "loc": {
                        "start": {
                            "line": 109,
                            "column": 58
                        },
                        "end": {
                            "line": 110,
                            "column": 11
                        }
                    },
                    "range": [
                        4106,
                        4128
                    ],
                    "raw": " inside an\nHTML block."
                }
            ],
            "loc": {
                "start": {
                    "line": 108,
                    "column": 0
                },
                "end": {
                    "line": 110,
                    "column": 11
                }
            },
            "range": [
                3975,
                4128
            ],
            "raw": "Note that Markdown formatting syntax is not processed within block-level\nHTML tags. E.g., you can't use Markdown-style `*emphasis*` inside an\nHTML block."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Span-level HTML tags -- e.g. ",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 0
                        },
                        "end": {
                            "line": 112,
                            "column": 29
                        }
                    },
                    "range": [
                        4130,
                        4159
                    ],
                    "raw": "Span-level HTML tags -- e.g. "
                },
                {
                    "type": "Code",
                    "value": "<span>",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 29
                        },
                        "end": {
                            "line": 112,
                            "column": 37
                        }
                    },
                    "range": [
                        4159,
                        4167
                    ],
                    "raw": "`<span>`"
                },
                {
                    "type": "Str",
                    "value": ", ",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 37
                        },
                        "end": {
                            "line": 112,
                            "column": 39
                        }
                    },
                    "range": [
                        4167,
                        4169
                    ],
                    "raw": ", "
                },
                {
                    "type": "Code",
                    "value": "<cite>",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 39
                        },
                        "end": {
                            "line": 112,
                            "column": 47
                        }
                    },
                    "range": [
                        4169,
                        4177
                    ],
                    "raw": "`<cite>`"
                },
                {
                    "type": "Str",
                    "value": ", or ",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 47
                        },
                        "end": {
                            "line": 112,
                            "column": 52
                        }
                    },
                    "range": [
                        4177,
                        4182
                    ],
                    "raw": ", or "
                },
                {
                    "type": "Code",
                    "value": "<del>",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 52
                        },
                        "end": {
                            "line": 112,
                            "column": 59
                        }
                    },
                    "range": [
                        4182,
                        4189
                    ],
                    "raw": "`<del>`"
                },
                {
                    "type": "Str",
                    "value": " -- can be\nused anywhere in a Markdown paragraph, list item, or header. If you\nwant, you can even use HTML tags instead of Markdown formatting; e.g. if\nyou'd prefer to use HTML ",
                    "loc": {
                        "start": {
                            "line": 112,
                            "column": 59
                        },
                        "end": {
                            "line": 115,
                            "column": 25
                        }
                    },
                    "range": [
                        4189,
                        4366
                    ],
                    "raw": " -- can be\nused anywhere in a Markdown paragraph, list item, or header. If you\nwant, you can even use HTML tags instead of Markdown formatting; e.g. if\nyou'd prefer to use HTML "
                },
                {
                    "type": "Code",
                    "value": "<a>",
                    "loc": {
                        "start": {
                            "line": 115,
                            "column": 25
                        },
                        "end": {
                            "line": 115,
                            "column": 30
                        }
                    },
                    "range": [
                        4366,
                        4371
                    ],
                    "raw": "`<a>`"
                },
                {
                    "type": "Str",
                    "value": " or ",
                    "loc": {
                        "start": {
                            "line": 115,
                            "column": 30
                        },
                        "end": {
                            "line": 115,
                            "column": 34
                        }
                    },
                    "range": [
                        4371,
                        4375
                    ],
                    "raw": " or "
                },
                {
                    "type": "Code",
                    "value": "<img>",
                    "loc": {
                        "start": {
                            "line": 115,
                            "column": 34
                        },
                        "end": {
                            "line": 115,
                            "column": 41
                        }
                    },
                    "range": [
                        4375,
                        4382
                    ],
                    "raw": "`<img>`"
                },
                {
                    "type": "Str",
                    "value": " tags instead of Markdown's\nlink or image syntax, go right ahead.",
                    "loc": {
                        "start": {
                            "line": 115,
                            "column": 41
                        },
                        "end": {
                            "line": 116,
                            "column": 37
                        }
                    },
                    "range": [
                        4382,
                        4447
                    ],
                    "raw": " tags instead of Markdown's\nlink or image syntax, go right ahead."
                }
            ],
            "loc": {
                "start": {
                    "line": 112,
                    "column": 0
                },
                "end": {
                    "line": 116,
                    "column": 37
                }
            },
            "range": [
                4130,
                4447
            ],
            "raw": "Span-level HTML tags -- e.g. `<span>`, `<cite>`, or `<del>` -- can be\nused anywhere in a Markdown paragraph, list item, or header. If you\nwant, you can even use HTML tags instead of Markdown formatting; e.g. if\nyou'd prefer to use HTML `<a>` or `<img>` tags instead of Markdown's\nlink or image syntax, go right ahead."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Unlike block-level HTML tags, Markdown syntax ",
                    "loc": {
                        "start": {
                            "line": 118,
                            "column": 0
                        },
                        "end": {
                            "line": 118,
                            "column": 46
                        }
                    },
                    "range": [
                        4449,
                        4495
                    ],
                    "raw": "Unlike block-level HTML tags, Markdown syntax "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "is",
                            "loc": {
                                "start": {
                                    "line": 118,
                                    "column": 47
                                },
                                "end": {
                                    "line": 118,
                                    "column": 49
                                }
                            },
                            "range": [
                                4496,
                                4498
                            ],
                            "raw": "is"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 118,
                            "column": 46
                        },
                        "end": {
                            "line": 118,
                            "column": 50
                        }
                    },
                    "range": [
                        4495,
                        4499
                    ],
                    "raw": "*is*"
                },
                {
                    "type": "Str",
                    "value": " processed within\nspan-level tags.",
                    "loc": {
                        "start": {
                            "line": 118,
                            "column": 50
                        },
                        "end": {
                            "line": 119,
                            "column": 16
                        }
                    },
                    "range": [
                        4499,
                        4533
                    ],
                    "raw": " processed within\nspan-level tags."
                }
            ],
            "loc": {
                "start": {
                    "line": 118,
                    "column": 0
                },
                "end": {
                    "line": 119,
                    "column": 16
                }
            },
            "range": [
                4449,
                4533
            ],
            "raw": "Unlike block-level HTML tags, Markdown syntax *is* processed within\nspan-level tags."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>",
            "loc": {
                "start": {
                    "line": 122,
                    "column": 0
                },
                "end": {
                    "line": 122,
                    "column": 66
                }
            },
            "range": [
                4536,
                4602
            ],
            "raw": "<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "In HTML, there are two characters that demand special treatment: ",
                    "loc": {
                        "start": {
                            "line": 124,
                            "column": 0
                        },
                        "end": {
                            "line": 124,
                            "column": 65
                        }
                    },
                    "range": [
                        4604,
                        4669
                    ],
                    "raw": "In HTML, there are two characters that demand special treatment: "
                },
                {
                    "type": "Code",
                    "value": "<",
                    "loc": {
                        "start": {
                            "line": 124,
                            "column": 65
                        },
                        "end": {
                            "line": 124,
                            "column": 68
                        }
                    },
                    "range": [
                        4669,
                        4672
                    ],
                    "raw": "`<`"
                },
                {
                    "type": "Str",
                    "value": "\nand ",
                    "loc": {
                        "start": {
                            "line": 124,
                            "column": 68
                        },
                        "end": {
                            "line": 125,
                            "column": 4
                        }
                    },
                    "range": [
                        4672,
                        4677
                    ],
                    "raw": "\nand "
                },
                {
                    "type": "Code",
                    "value": "&",
                    "loc": {
                        "start": {
                            "line": 125,
                            "column": 4
                        },
                        "end": {
                            "line": 125,
                            "column": 7
                        }
                    },
                    "range": [
                        4677,
                        4680
                    ],
                    "raw": "`&`"
                },
                {
                    "type": "Str",
                    "value": ". Left angle brackets are used to start tags; ampersands are\nused to denote HTML entities. If you want to use them as literal\ncharacters, you must escape them as entities, e.g. ",
                    "loc": {
                        "start": {
                            "line": 125,
                            "column": 7
                        },
                        "end": {
                            "line": 127,
                            "column": 51
                        }
                    },
                    "range": [
                        4680,
                        4857
                    ],
                    "raw": ". Left angle brackets are used to start tags; ampersands are\nused to denote HTML entities. If you want to use them as literal\ncharacters, you must escape them as entities, e.g. "
                },
                {
                    "type": "Code",
                    "value": "&lt;",
                    "loc": {
                        "start": {
                            "line": 127,
                            "column": 51
                        },
                        "end": {
                            "line": 127,
                            "column": 57
                        }
                    },
                    "range": [
                        4857,
                        4863
                    ],
                    "raw": "`&lt;`"
                },
                {
                    "type": "Str",
                    "value": ", and\n",
                    "loc": {
                        "start": {
                            "line": 127,
                            "column": 57
                        },
                        "end": {
                            "line": 128,
                            "column": 0
                        }
                    },
                    "range": [
                        4863,
                        4869
                    ],
                    "raw": ", and\n"
                },
                {
                    "type": "Code",
                    "value": "&amp;",
                    "loc": {
                        "start": {
                            "line": 128,
                            "column": 0
                        },
                        "end": {
                            "line": 128,
                            "column": 7
                        }
                    },
                    "range": [
                        4869,
                        4876
                    ],
                    "raw": "`&amp;`"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 128,
                            "column": 7
                        },
                        "end": {
                            "line": 128,
                            "column": 8
                        }
                    },
                    "range": [
                        4876,
                        4877
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 124,
                    "column": 0
                },
                "end": {
                    "line": 128,
                    "column": 8
                }
            },
            "range": [
                4604,
                4877
            ],
            "raw": "In HTML, there are two characters that demand special treatment: `<`\nand `&`. Left angle brackets are used to start tags; ampersands are\nused to denote HTML entities. If you want to use them as literal\ncharacters, you must escape them as entities, e.g. `&lt;`, and\n`&amp;`."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Ampersands in particular are bedeviling for web writers. If you want to\nwrite about 'AT&T', you need to write '",
                    "loc": {
                        "start": {
                            "line": 130,
                            "column": 0
                        },
                        "end": {
                            "line": 131,
                            "column": 39
                        }
                    },
                    "range": [
                        4879,
                        4990
                    ],
                    "raw": "Ampersands in particular are bedeviling for web writers. If you want to\nwrite about 'AT&T', you need to write '"
                },
                {
                    "type": "Code",
                    "value": "AT&amp;T",
                    "loc": {
                        "start": {
                            "line": 131,
                            "column": 39
                        },
                        "end": {
                            "line": 131,
                            "column": 49
                        }
                    },
                    "range": [
                        4990,
                        5000
                    ],
                    "raw": "`AT&amp;T`"
                },
                {
                    "type": "Str",
                    "value": "'. You even need to\nescape ampersands within URLs. Thus, if you want to link to:",
                    "loc": {
                        "start": {
                            "line": 131,
                            "column": 49
                        },
                        "end": {
                            "line": 132,
                            "column": 60
                        }
                    },
                    "range": [
                        5000,
                        5080
                    ],
                    "raw": "'. You even need to\nescape ampersands within URLs. Thus, if you want to link to:"
                }
            ],
            "loc": {
                "start": {
                    "line": 130,
                    "column": 0
                },
                "end": {
                    "line": 132,
                    "column": 60
                }
            },
            "range": [
                4879,
                5080
            ],
            "raw": "Ampersands in particular are bedeviling for web writers. If you want to\nwrite about 'AT&T', you need to write '`AT&amp;T`'. You even need to\nescape ampersands within URLs. Thus, if you want to link to:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "http://images.google.com/images?num=30&q=larry+bird",
            "loc": {
                "start": {
                    "line": 134,
                    "column": 0
                },
                "end": {
                    "line": 134,
                    "column": 55
                }
            },
            "range": [
                5082,
                5137
            ],
            "raw": "    http://images.google.com/images?num=30&q=larry+bird"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "you need to encode the URL as:",
                    "loc": {
                        "start": {
                            "line": 136,
                            "column": 0
                        },
                        "end": {
                            "line": 136,
                            "column": 30
                        }
                    },
                    "range": [
                        5139,
                        5169
                    ],
                    "raw": "you need to encode the URL as:"
                }
            ],
            "loc": {
                "start": {
                    "line": 136,
                    "column": 0
                },
                "end": {
                    "line": 136,
                    "column": 30
                }
            },
            "range": [
                5139,
                5169
            ],
            "raw": "you need to encode the URL as:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "http://images.google.com/images?num=30&amp;q=larry+bird",
            "loc": {
                "start": {
                    "line": 138,
                    "column": 0
                },
                "end": {
                    "line": 138,
                    "column": 59
                }
            },
            "range": [
                5171,
                5230
            ],
            "raw": "    http://images.google.com/images?num=30&amp;q=larry+bird"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "in your anchor tag ",
                    "loc": {
                        "start": {
                            "line": 140,
                            "column": 0
                        },
                        "end": {
                            "line": 140,
                            "column": 19
                        }
                    },
                    "range": [
                        5232,
                        5251
                    ],
                    "raw": "in your anchor tag "
                },
                {
                    "type": "Code",
                    "value": "href",
                    "loc": {
                        "start": {
                            "line": 140,
                            "column": 19
                        },
                        "end": {
                            "line": 140,
                            "column": 25
                        }
                    },
                    "range": [
                        5251,
                        5257
                    ],
                    "raw": "`href`"
                },
                {
                    "type": "Str",
                    "value": " attribute. Needless to say, this is easy to\nforget, and is probably the single most common source of HTML validation\nerrors in otherwise well-marked-up web sites.",
                    "loc": {
                        "start": {
                            "line": 140,
                            "column": 25
                        },
                        "end": {
                            "line": 142,
                            "column": 45
                        }
                    },
                    "range": [
                        5257,
                        5420
                    ],
                    "raw": " attribute. Needless to say, this is easy to\nforget, and is probably the single most common source of HTML validation\nerrors in otherwise well-marked-up web sites."
                }
            ],
            "loc": {
                "start": {
                    "line": 140,
                    "column": 0
                },
                "end": {
                    "line": 142,
                    "column": 45
                }
            },
            "range": [
                5232,
                5420
            ],
            "raw": "in your anchor tag `href` attribute. Needless to say, this is easy to\nforget, and is probably the single most common source of HTML validation\nerrors in otherwise well-marked-up web sites."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown allows you to use these characters naturally, taking care of\nall the necessary escaping for you. If you use an ampersand as part of\nan HTML entity, it remains unchanged; otherwise it will be translated\ninto ",
                    "loc": {
                        "start": {
                            "line": 144,
                            "column": 0
                        },
                        "end": {
                            "line": 147,
                            "column": 5
                        }
                    },
                    "range": [
                        5422,
                        5638
                    ],
                    "raw": "Markdown allows you to use these characters naturally, taking care of\nall the necessary escaping for you. If you use an ampersand as part of\nan HTML entity, it remains unchanged; otherwise it will be translated\ninto "
                },
                {
                    "type": "Code",
                    "value": "&amp;",
                    "loc": {
                        "start": {
                            "line": 147,
                            "column": 5
                        },
                        "end": {
                            "line": 147,
                            "column": 12
                        }
                    },
                    "range": [
                        5638,
                        5645
                    ],
                    "raw": "`&amp;`"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 147,
                            "column": 12
                        },
                        "end": {
                            "line": 147,
                            "column": 13
                        }
                    },
                    "range": [
                        5645,
                        5646
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 144,
                    "column": 0
                },
                "end": {
                    "line": 147,
                    "column": 13
                }
            },
            "range": [
                5422,
                5646
            ],
            "raw": "Markdown allows you to use these characters naturally, taking care of\nall the necessary escaping for you. If you use an ampersand as part of\nan HTML entity, it remains unchanged; otherwise it will be translated\ninto `&amp;`."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "So, if you want to include a copyright symbol in your article, you can write:",
                    "loc": {
                        "start": {
                            "line": 149,
                            "column": 0
                        },
                        "end": {
                            "line": 149,
                            "column": 77
                        }
                    },
                    "range": [
                        5648,
                        5725
                    ],
                    "raw": "So, if you want to include a copyright symbol in your article, you can write:"
                }
            ],
            "loc": {
                "start": {
                    "line": 149,
                    "column": 0
                },
                "end": {
                    "line": 149,
                    "column": 77
                }
            },
            "range": [
                5648,
                5725
            ],
            "raw": "So, if you want to include a copyright symbol in your article, you can write:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "&copy;",
            "loc": {
                "start": {
                    "line": 151,
                    "column": 0
                },
                "end": {
                    "line": 151,
                    "column": 10
                }
            },
            "range": [
                5727,
                5737
            ],
            "raw": "    &copy;"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "and Markdown will leave it alone. But if you write:",
                    "loc": {
                        "start": {
                            "line": 153,
                            "column": 0
                        },
                        "end": {
                            "line": 153,
                            "column": 51
                        }
                    },
                    "range": [
                        5739,
                        5790
                    ],
                    "raw": "and Markdown will leave it alone. But if you write:"
                }
            ],
            "loc": {
                "start": {
                    "line": 153,
                    "column": 0
                },
                "end": {
                    "line": 153,
                    "column": 51
                }
            },
            "range": [
                5739,
                5790
            ],
            "raw": "and Markdown will leave it alone. But if you write:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "AT&T",
            "loc": {
                "start": {
                    "line": 155,
                    "column": 0
                },
                "end": {
                    "line": 155,
                    "column": 8
                }
            },
            "range": [
                5792,
                5800
            ],
            "raw": "    AT&T"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown will translate it to:",
                    "loc": {
                        "start": {
                            "line": 157,
                            "column": 0
                        },
                        "end": {
                            "line": 157,
                            "column": 30
                        }
                    },
                    "range": [
                        5802,
                        5832
                    ],
                    "raw": "Markdown will translate it to:"
                }
            ],
            "loc": {
                "start": {
                    "line": 157,
                    "column": 0
                },
                "end": {
                    "line": 157,
                    "column": 30
                }
            },
            "range": [
                5802,
                5832
            ],
            "raw": "Markdown will translate it to:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "AT&amp;T",
            "loc": {
                "start": {
                    "line": 159,
                    "column": 0
                },
                "end": {
                    "line": 159,
                    "column": 12
                }
            },
            "range": [
                5834,
                5846
            ],
            "raw": "    AT&amp;T"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Similarly, because Markdown supports ",
                    "loc": {
                        "start": {
                            "line": 161,
                            "column": 0
                        },
                        "end": {
                            "line": 161,
                            "column": 37
                        }
                    },
                    "range": [
                        5848,
                        5885
                    ],
                    "raw": "Similarly, because Markdown supports "
                },
                {
                    "type": "Link",
                    "title": null,
                    "url": "#html",
                    "children": [
                        {
                            "type": "Str",
                            "value": "inline HTML",
                            "loc": {
                                "start": {
                                    "line": 161,
                                    "column": 38
                                },
                                "end": {
                                    "line": 161,
                                    "column": 49
                                }
                            },
                            "range": [
                                5886,
                                5897
                            ],
                            "raw": "inline HTML"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 161,
                            "column": 37
                        },
                        "end": {
                            "line": 161,
                            "column": 57
                        }
                    },
                    "range": [
                        5885,
                        5905
                    ],
                    "raw": "[inline HTML](#html)"
                },
                {
                    "type": "Str",
                    "value": ", if you use\nangle brackets as delimiters for HTML tags, Markdown will treat them as\nsuch. But if you write:",
                    "loc": {
                        "start": {
                            "line": 161,
                            "column": 57
                        },
                        "end": {
                            "line": 163,
                            "column": 23
                        }
                    },
                    "range": [
                        5905,
                        6013
                    ],
                    "raw": ", if you use\nangle brackets as delimiters for HTML tags, Markdown will treat them as\nsuch. But if you write:"
                }
            ],
            "loc": {
                "start": {
                    "line": 161,
                    "column": 0
                },
                "end": {
                    "line": 163,
                    "column": 23
                }
            },
            "range": [
                5848,
                6013
            ],
            "raw": "Similarly, because Markdown supports [inline HTML](#html), if you use\nangle brackets as delimiters for HTML tags, Markdown will treat them as\nsuch. But if you write:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "4 < 5",
            "loc": {
                "start": {
                    "line": 165,
                    "column": 0
                },
                "end": {
                    "line": 165,
                    "column": 9
                }
            },
            "range": [
                6015,
                6024
            ],
            "raw": "    4 < 5"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown will translate it to:",
                    "loc": {
                        "start": {
                            "line": 167,
                            "column": 0
                        },
                        "end": {
                            "line": 167,
                            "column": 30
                        }
                    },
                    "range": [
                        6026,
                        6056
                    ],
                    "raw": "Markdown will translate it to:"
                }
            ],
            "loc": {
                "start": {
                    "line": 167,
                    "column": 0
                },
                "end": {
                    "line": 167,
                    "column": 30
                }
            },
            "range": [
                6026,
                6056
            ],
            "raw": "Markdown will translate it to:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "4 &lt; 5",
            "loc": {
                "start": {
                    "line": 169,
                    "column": 0
                },
                "end": {
                    "line": 169,
                    "column": 12
                }
            },
            "range": [
                6058,
                6070
            ],
            "raw": "    4 &lt; 5"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "However, inside Markdown code spans and blocks, angle brackets and\nampersands are ",
                    "loc": {
                        "start": {
                            "line": 171,
                            "column": 0
                        },
                        "end": {
                            "line": 172,
                            "column": 15
                        }
                    },
                    "range": [
                        6072,
                        6154
                    ],
                    "raw": "However, inside Markdown code spans and blocks, angle brackets and\nampersands are "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "always",
                            "loc": {
                                "start": {
                                    "line": 172,
                                    "column": 16
                                },
                                "end": {
                                    "line": 172,
                                    "column": 22
                                }
                            },
                            "range": [
                                6155,
                                6161
                            ],
                            "raw": "always"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 172,
                            "column": 15
                        },
                        "end": {
                            "line": 172,
                            "column": 23
                        }
                    },
                    "range": [
                        6154,
                        6162
                    ],
                    "raw": "*always*"
                },
                {
                    "type": "Str",
                    "value": " encoded automatically. This makes it easy to use\nMarkdown to write about HTML code. (As opposed to raw HTML, which is a\nterrible format for writing about HTML syntax, because every single ",
                    "loc": {
                        "start": {
                            "line": 172,
                            "column": 23
                        },
                        "end": {
                            "line": 174,
                            "column": 68
                        }
                    },
                    "range": [
                        6162,
                        6351
                    ],
                    "raw": " encoded automatically. This makes it easy to use\nMarkdown to write about HTML code. (As opposed to raw HTML, which is a\nterrible format for writing about HTML syntax, because every single "
                },
                {
                    "type": "Code",
                    "value": "<",
                    "loc": {
                        "start": {
                            "line": 174,
                            "column": 68
                        },
                        "end": {
                            "line": 174,
                            "column": 71
                        }
                    },
                    "range": [
                        6351,
                        6354
                    ],
                    "raw": "`<`"
                },
                {
                    "type": "Str",
                    "value": "\nand ",
                    "loc": {
                        "start": {
                            "line": 174,
                            "column": 71
                        },
                        "end": {
                            "line": 175,
                            "column": 4
                        }
                    },
                    "range": [
                        6354,
                        6359
                    ],
                    "raw": "\nand "
                },
                {
                    "type": "Code",
                    "value": "&",
                    "loc": {
                        "start": {
                            "line": 175,
                            "column": 4
                        },
                        "end": {
                            "line": 175,
                            "column": 7
                        }
                    },
                    "range": [
                        6359,
                        6362
                    ],
                    "raw": "`&`"
                },
                {
                    "type": "Str",
                    "value": " in your example code needs to be escaped.)",
                    "loc": {
                        "start": {
                            "line": 175,
                            "column": 7
                        },
                        "end": {
                            "line": 175,
                            "column": 50
                        }
                    },
                    "range": [
                        6362,
                        6405
                    ],
                    "raw": " in your example code needs to be escaped.)"
                }
            ],
            "loc": {
                "start": {
                    "line": 171,
                    "column": 0
                },
                "end": {
                    "line": 175,
                    "column": 50
                }
            },
            "range": [
                6072,
                6405
            ],
            "raw": "However, inside Markdown code spans and blocks, angle brackets and\nampersands are *always* encoded automatically. This makes it easy to use\nMarkdown to write about HTML code. (As opposed to raw HTML, which is a\nterrible format for writing about HTML syntax, because every single `<`\nand `&` in your example code needs to be escaped.)"
        },
        {
            "type": "HorizontalRule",
            "loc": {
                "start": {
                    "line": 178,
                    "column": 0
                },
                "end": {
                    "line": 178,
                    "column": 5
                }
            },
            "range": [
                6408,
                6413
            ],
            "raw": "* * *"
        },
        {
            "type": "Html",
            "value": "<h2 id=\"block\">Block Elements</h2>",
            "loc": {
                "start": {
                    "line": 181,
                    "column": 0
                },
                "end": {
                    "line": 181,
                    "column": 34
                }
            },
            "range": [
                6416,
                6450
            ],
            "raw": "<h2 id=\"block\">Block Elements</h2>"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"p\">Paragraphs and Line Breaks</h3>",
            "loc": {
                "start": {
                    "line": 183,
                    "column": 0
                },
                "end": {
                    "line": 183,
                    "column": 42
                }
            },
            "range": [
                6452,
                6494
            ],
            "raw": "<h3 id=\"p\">Paragraphs and Line Breaks</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "A paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be intended with spaces or tabs.",
                    "loc": {
                        "start": {
                            "line": 185,
                            "column": 0
                        },
                        "end": {
                            "line": 188,
                            "column": 69
                        }
                    },
                    "range": [
                        6496,
                        6781
                    ],
                    "raw": "A paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be intended with spaces or tabs."
                }
            ],
            "loc": {
                "start": {
                    "line": 185,
                    "column": 0
                },
                "end": {
                    "line": 188,
                    "column": 69
                }
            },
            "range": [
                6496,
                6781
            ],
            "raw": "A paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be intended with spaces or tabs."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The implication of the \"one or more consecutive lines of text\" rule is\nthat Markdown supports \"hard-wrapped\" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType's \"Convert Line Breaks\" option) which translate every line break\ncharacter in a paragraph into a ",
                    "loc": {
                        "start": {
                            "line": 190,
                            "column": 0
                        },
                        "end": {
                            "line": 194,
                            "column": 32
                        }
                    },
                    "range": [
                        6783,
                        7097
                    ],
                    "raw": "The implication of the \"one or more consecutive lines of text\" rule is\nthat Markdown supports \"hard-wrapped\" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType's \"Convert Line Breaks\" option) which translate every line break\ncharacter in a paragraph into a "
                },
                {
                    "type": "Code",
                    "value": "<br />",
                    "loc": {
                        "start": {
                            "line": 194,
                            "column": 32
                        },
                        "end": {
                            "line": 194,
                            "column": 40
                        }
                    },
                    "range": [
                        7097,
                        7105
                    ],
                    "raw": "`<br />`"
                },
                {
                    "type": "Str",
                    "value": " tag.",
                    "loc": {
                        "start": {
                            "line": 194,
                            "column": 40
                        },
                        "end": {
                            "line": 194,
                            "column": 45
                        }
                    },
                    "range": [
                        7105,
                        7110
                    ],
                    "raw": " tag."
                }
            ],
            "loc": {
                "start": {
                    "line": 190,
                    "column": 0
                },
                "end": {
                    "line": 194,
                    "column": 45
                }
            },
            "range": [
                6783,
                7110
            ],
            "raw": "The implication of the \"one or more consecutive lines of text\" rule is\nthat Markdown supports \"hard-wrapped\" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType's \"Convert Line Breaks\" option) which translate every line break\ncharacter in a paragraph into a `<br />` tag."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "When you ",
                    "loc": {
                        "start": {
                            "line": 196,
                            "column": 0
                        },
                        "end": {
                            "line": 196,
                            "column": 9
                        }
                    },
                    "range": [
                        7112,
                        7121
                    ],
                    "raw": "When you "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "do",
                            "loc": {
                                "start": {
                                    "line": 196,
                                    "column": 10
                                },
                                "end": {
                                    "line": 196,
                                    "column": 12
                                }
                            },
                            "range": [
                                7122,
                                7124
                            ],
                            "raw": "do"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 196,
                            "column": 9
                        },
                        "end": {
                            "line": 196,
                            "column": 13
                        }
                    },
                    "range": [
                        7121,
                        7125
                    ],
                    "raw": "*do*"
                },
                {
                    "type": "Str",
                    "value": " want to insert a ",
                    "loc": {
                        "start": {
                            "line": 196,
                            "column": 13
                        },
                        "end": {
                            "line": 196,
                            "column": 31
                        }
                    },
                    "range": [
                        7125,
                        7143
                    ],
                    "raw": " want to insert a "
                },
                {
                    "type": "Code",
                    "value": "<br />",
                    "loc": {
                        "start": {
                            "line": 196,
                            "column": 31
                        },
                        "end": {
                            "line": 196,
                            "column": 39
                        }
                    },
                    "range": [
                        7143,
                        7151
                    ],
                    "raw": "`<br />`"
                },
                {
                    "type": "Str",
                    "value": " break tag using Markdown, you\nend a line with two or more spaces, then type return.",
                    "loc": {
                        "start": {
                            "line": 196,
                            "column": 39
                        },
                        "end": {
                            "line": 197,
                            "column": 53
                        }
                    },
                    "range": [
                        7151,
                        7235
                    ],
                    "raw": " break tag using Markdown, you\nend a line with two or more spaces, then type return."
                }
            ],
            "loc": {
                "start": {
                    "line": 196,
                    "column": 0
                },
                "end": {
                    "line": 197,
                    "column": 53
                }
            },
            "range": [
                7112,
                7235
            ],
            "raw": "When you *do* want to insert a `<br />` break tag using Markdown, you\nend a line with two or more spaces, then type return."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Yes, this takes a tad more effort to create a ",
                    "loc": {
                        "start": {
                            "line": 199,
                            "column": 0
                        },
                        "end": {
                            "line": 199,
                            "column": 46
                        }
                    },
                    "range": [
                        7237,
                        7283
                    ],
                    "raw": "Yes, this takes a tad more effort to create a "
                },
                {
                    "type": "Code",
                    "value": "<br />",
                    "loc": {
                        "start": {
                            "line": 199,
                            "column": 46
                        },
                        "end": {
                            "line": 199,
                            "column": 54
                        }
                    },
                    "range": [
                        7283,
                        7291
                    ],
                    "raw": "`<br />`"
                },
                {
                    "type": "Str",
                    "value": ", but a simplistic\n\"every line break is a ",
                    "loc": {
                        "start": {
                            "line": 199,
                            "column": 54
                        },
                        "end": {
                            "line": 200,
                            "column": 23
                        }
                    },
                    "range": [
                        7291,
                        7333
                    ],
                    "raw": ", but a simplistic\n\"every line break is a "
                },
                {
                    "type": "Code",
                    "value": "<br />",
                    "loc": {
                        "start": {
                            "line": 200,
                            "column": 23
                        },
                        "end": {
                            "line": 200,
                            "column": 31
                        }
                    },
                    "range": [
                        7333,
                        7341
                    ],
                    "raw": "`<br />`"
                },
                {
                    "type": "Str",
                    "value": "\" rule wouldn't work for Markdown.\nMarkdown's email-style ",
                    "loc": {
                        "start": {
                            "line": 200,
                            "column": 31
                        },
                        "end": {
                            "line": 201,
                            "column": 23
                        }
                    },
                    "range": [
                        7341,
                        7399
                    ],
                    "raw": "\" rule wouldn't work for Markdown.\nMarkdown's email-style "
                },
                {
                    "type": "LinkReference",
                    "identifier": "bq",
                    "label": "bq",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "blockquoting",
                            "loc": {
                                "start": {
                                    "line": 201,
                                    "column": 24
                                },
                                "end": {
                                    "line": 201,
                                    "column": 36
                                }
                            },
                            "range": [
                                7400,
                                7412
                            ],
                            "raw": "blockquoting"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 201,
                            "column": 23
                        },
                        "end": {
                            "line": 201,
                            "column": 41
                        }
                    },
                    "range": [
                        7399,
                        7417
                    ],
                    "raw": "[blockquoting][bq]"
                },
                {
                    "type": "Str",
                    "value": " and multi-paragraph ",
                    "loc": {
                        "start": {
                            "line": 201,
                            "column": 41
                        },
                        "end": {
                            "line": 201,
                            "column": 62
                        }
                    },
                    "range": [
                        7417,
                        7438
                    ],
                    "raw": " and multi-paragraph "
                },
                {
                    "type": "LinkReference",
                    "identifier": "l",
                    "label": "l",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "list items",
                            "loc": {
                                "start": {
                                    "line": 201,
                                    "column": 63
                                },
                                "end": {
                                    "line": 201,
                                    "column": 73
                                }
                            },
                            "range": [
                                7439,
                                7449
                            ],
                            "raw": "list items"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 201,
                            "column": 62
                        },
                        "end": {
                            "line": 201,
                            "column": 77
                        }
                    },
                    "range": [
                        7438,
                        7453
                    ],
                    "raw": "[list items][l]"
                },
                {
                    "type": "Str",
                    "value": "\nwork best -- and look better -- when you format them with hard breaks.",
                    "loc": {
                        "start": {
                            "line": 201,
                            "column": 77
                        },
                        "end": {
                            "line": 202,
                            "column": 70
                        }
                    },
                    "range": [
                        7453,
                        7524
                    ],
                    "raw": "\nwork best -- and look better -- when you format them with hard breaks."
                }
            ],
            "loc": {
                "start": {
                    "line": 199,
                    "column": 0
                },
                "end": {
                    "line": 202,
                    "column": 70
                }
            },
            "range": [
                7237,
                7524
            ],
            "raw": "Yes, this takes a tad more effort to create a `<br />`, but a simplistic\n\"every line break is a `<br />`\" rule wouldn't work for Markdown.\nMarkdown's email-style [blockquoting][bq] and multi-paragraph [list items][l]\nwork best -- and look better -- when you format them with hard breaks."
        },
        {
            "type": "Definition",
            "identifier": "bq",
            "label": "bq",
            "title": null,
            "url": "#blockquote",
            "loc": {
                "start": {
                    "line": 204,
                    "column": 0
                },
                "end": {
                    "line": 204,
                    "column": 19
                }
            },
            "range": [
                7526,
                7545
            ],
            "raw": "  [bq]: #blockquote"
        },
        {
            "type": "Definition",
            "identifier": "l",
            "label": "l",
            "title": null,
            "url": "#list",
            "loc": {
                "start": {
                    "line": 205,
                    "column": 0
                },
                "end": {
                    "line": 205,
                    "column": 13
                }
            },
            "range": [
                7546,
                7559
            ],
            "raw": "  [l]:  #list"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"header\">Headers</h3>",
            "loc": {
                "start": {
                    "line": 209,
                    "column": 0
                },
                "end": {
                    "line": 209,
                    "column": 28
                }
            },
            "range": [
                7563,
                7591
            ],
            "raw": "<h3 id=\"header\">Headers</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown supports two styles of headers, ",
                    "loc": {
                        "start": {
                            "line": 211,
                            "column": 0
                        },
                        "end": {
                            "line": 211,
                            "column": 41
                        }
                    },
                    "range": [
                        7593,
                        7634
                    ],
                    "raw": "Markdown supports two styles of headers, "
                },
                {
                    "type": "LinkReference",
                    "identifier": "1",
                    "label": "1",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "Setext",
                            "loc": {
                                "start": {
                                    "line": 211,
                                    "column": 42
                                },
                                "end": {
                                    "line": 211,
                                    "column": 48
                                }
                            },
                            "range": [
                                7635,
                                7641
                            ],
                            "raw": "Setext"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 211,
                            "column": 41
                        },
                        "end": {
                            "line": 211,
                            "column": 53
                        }
                    },
                    "range": [
                        7634,
                        7646
                    ],
                    "raw": "[Setext] [1]"
                },
                {
                    "type": "Str",
                    "value": " and ",
                    "loc": {
                        "start": {
                            "line": 211,
                            "column": 53
                        },
                        "end": {
                            "line": 211,
                            "column": 58
                        }
                    },
                    "range": [
                        7646,
                        7651
                    ],
                    "raw": " and "
                },
                {
                    "type": "LinkReference",
                    "identifier": "2",
                    "label": "2",
                    "referenceType": "full",
                    "children": [
                        {
                            "type": "Str",
                            "value": "atx",
                            "loc": {
                                "start": {
                                    "line": 211,
                                    "column": 59
                                },
                                "end": {
                                    "line": 211,
                                    "column": 62
                                }
                            },
                            "range": [
                                7652,
                                7655
                            ],
                            "raw": "atx"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 211,
                            "column": 58
                        },
                        "end": {
                            "line": 211,
                            "column": 67
                        }
                    },
                    "range": [
                        7651,
                        7660
                    ],
                    "raw": "[atx] [2]"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 211,
                            "column": 67
                        },
                        "end": {
                            "line": 211,
                            "column": 68
                        }
                    },
                    "range": [
                        7660,
                        7661
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 211,
                    "column": 0
                },
                "end": {
                    "line": 211,
                    "column": 68
                }
            },
            "range": [
                7593,
                7661
            ],
            "raw": "Markdown supports two styles of headers, [Setext] [1] and [atx] [2]."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Setext-style headers are \"underlined\" using equal signs (for first-level\nheaders) and dashes (for second-level headers). For example:",
                    "loc": {
                        "start": {
                            "line": 213,
                            "column": 0
                        },
                        "end": {
                            "line": 214,
                            "column": 60
                        }
                    },
                    "range": [
                        7663,
                        7796
                    ],
                    "raw": "Setext-style headers are \"underlined\" using equal signs (for first-level\nheaders) and dashes (for second-level headers). For example:"
                }
            ],
            "loc": {
                "start": {
                    "line": 213,
                    "column": 0
                },
                "end": {
                    "line": 214,
                    "column": 60
                }
            },
            "range": [
                7663,
                7796
            ],
            "raw": "Setext-style headers are \"underlined\" using equal signs (for first-level\nheaders) and dashes (for second-level headers). For example:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is an H1\n=============\n\nThis is an H2\n-------------",
            "loc": {
                "start": {
                    "line": 216,
                    "column": 0
                },
                "end": {
                    "line": 220,
                    "column": 17
                }
            },
            "range": [
                7798,
                7870
            ],
            "raw": "    This is an H1\n    =============\n\n    This is an H2\n    -------------"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Any number of underlining ",
                    "loc": {
                        "start": {
                            "line": 222,
                            "column": 0
                        },
                        "end": {
                            "line": 222,
                            "column": 26
                        }
                    },
                    "range": [
                        7872,
                        7898
                    ],
                    "raw": "Any number of underlining "
                },
                {
                    "type": "Code",
                    "value": "=",
                    "loc": {
                        "start": {
                            "line": 222,
                            "column": 26
                        },
                        "end": {
                            "line": 222,
                            "column": 29
                        }
                    },
                    "range": [
                        7898,
                        7901
                    ],
                    "raw": "`=`"
                },
                {
                    "type": "Str",
                    "value": "'s or ",
                    "loc": {
                        "start": {
                            "line": 222,
                            "column": 29
                        },
                        "end": {
                            "line": 222,
                            "column": 35
                        }
                    },
                    "range": [
                        7901,
                        7907
                    ],
                    "raw": "'s or "
                },
                {
                    "type": "Code",
                    "value": "-",
                    "loc": {
                        "start": {
                            "line": 222,
                            "column": 35
                        },
                        "end": {
                            "line": 222,
                            "column": 38
                        }
                    },
                    "range": [
                        7907,
                        7910
                    ],
                    "raw": "`-`"
                },
                {
                    "type": "Str",
                    "value": "'s will work.",
                    "loc": {
                        "start": {
                            "line": 222,
                            "column": 38
                        },
                        "end": {
                            "line": 222,
                            "column": 51
                        }
                    },
                    "range": [
                        7910,
                        7923
                    ],
                    "raw": "'s will work."
                }
            ],
            "loc": {
                "start": {
                    "line": 222,
                    "column": 0
                },
                "end": {
                    "line": 222,
                    "column": 51
                }
            },
            "range": [
                7872,
                7923
            ],
            "raw": "Any number of underlining `=`'s or `-`'s will work."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Atx-style headers use 1-6 hash characters at the start of the line,\ncorresponding to header levels 1-6. For example:",
                    "loc": {
                        "start": {
                            "line": 224,
                            "column": 0
                        },
                        "end": {
                            "line": 225,
                            "column": 48
                        }
                    },
                    "range": [
                        7925,
                        8041
                    ],
                    "raw": "Atx-style headers use 1-6 hash characters at the start of the line,\ncorresponding to header levels 1-6. For example:"
                }
            ],
            "loc": {
                "start": {
                    "line": 224,
                    "column": 0
                },
                "end": {
                    "line": 225,
                    "column": 48
                }
            },
            "range": [
                7925,
                8041
            ],
            "raw": "Atx-style headers use 1-6 hash characters at the start of the line,\ncorresponding to header levels 1-6. For example:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "# This is an H1\n\n## This is an H2\n\n###### This is an H6",
            "loc": {
                "start": {
                    "line": 227,
                    "column": 0
                },
                "end": {
                    "line": 231,
                    "column": 24
                }
            },
            "range": [
                8043,
                8110
            ],
            "raw": "    # This is an H1\n\n    ## This is an H2\n\n    ###### This is an H6"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Optionally, you may \"close\" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don't even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.) :",
                    "loc": {
                        "start": {
                            "line": 233,
                            "column": 0
                        },
                        "end": {
                            "line": 237,
                            "column": 31
                        }
                    },
                    "range": [
                        8112,
                        8384
                    ],
                    "raw": "Optionally, you may \"close\" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don't even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.) :"
                }
            ],
            "loc": {
                "start": {
                    "line": 233,
                    "column": 0
                },
                "end": {
                    "line": 237,
                    "column": 31
                }
            },
            "range": [
                8112,
                8384
            ],
            "raw": "Optionally, you may \"close\" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don't even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.) :"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "# This is an H1 #\n\n## This is an H2 ##\n\n### This is an H3 ######",
            "loc": {
                "start": {
                    "line": 239,
                    "column": 0
                },
                "end": {
                    "line": 243,
                    "column": 28
                }
            },
            "range": [
                8386,
                8462
            ],
            "raw": "    # This is an H1 #\n\n    ## This is an H2 ##\n\n    ### This is an H3 ######"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"blockquote\">Blockquotes</h3>",
            "loc": {
                "start": {
                    "line": 246,
                    "column": 0
                },
                "end": {
                    "line": 246,
                    "column": 36
                }
            },
            "range": [
                8465,
                8501
            ],
            "raw": "<h3 id=\"blockquote\">Blockquotes</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown uses email-style ",
                    "loc": {
                        "start": {
                            "line": 248,
                            "column": 0
                        },
                        "end": {
                            "line": 248,
                            "column": 26
                        }
                    },
                    "range": [
                        8503,
                        8529
                    ],
                    "raw": "Markdown uses email-style "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 248,
                            "column": 26
                        },
                        "end": {
                            "line": 248,
                            "column": 29
                        }
                    },
                    "range": [
                        8529,
                        8532
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": " characters for blockquoting. If you're\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a ",
                    "loc": {
                        "start": {
                            "line": 248,
                            "column": 29
                        },
                        "end": {
                            "line": 251,
                            "column": 24
                        }
                    },
                    "range": [
                        8532,
                        8736
                    ],
                    "raw": " characters for blockquoting. If you're\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 251,
                            "column": 24
                        },
                        "end": {
                            "line": 251,
                            "column": 27
                        }
                    },
                    "range": [
                        8736,
                        8739
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": " before every line:",
                    "loc": {
                        "start": {
                            "line": 251,
                            "column": 27
                        },
                        "end": {
                            "line": 251,
                            "column": 46
                        }
                    },
                    "range": [
                        8739,
                        8758
                    ],
                    "raw": " before every line:"
                }
            ],
            "loc": {
                "start": {
                    "line": 248,
                    "column": 0
                },
                "end": {
                    "line": 251,
                    "column": 46
                }
            },
            "range": [
                8503,
                8758
            ],
            "raw": "Markdown uses email-style `>` characters for blockquoting. If you're\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a `>` before every line:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n> \n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.",
            "loc": {
                "start": {
                    "line": 253,
                    "column": 0
                },
                "end": {
                    "line": 258,
                    "column": 51
                }
            },
            "range": [
                8760,
                9120
            ],
            "raw": "    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n    > \n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown allows you to be lazy and only put the ",
                    "loc": {
                        "start": {
                            "line": 260,
                            "column": 0
                        },
                        "end": {
                            "line": 260,
                            "column": 48
                        }
                    },
                    "range": [
                        9122,
                        9170
                    ],
                    "raw": "Markdown allows you to be lazy and only put the "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 260,
                            "column": 48
                        },
                        "end": {
                            "line": 260,
                            "column": 51
                        }
                    },
                    "range": [
                        9170,
                        9173
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": " before the first\nline of a hard-wrapped paragraph:",
                    "loc": {
                        "start": {
                            "line": 260,
                            "column": 51
                        },
                        "end": {
                            "line": 261,
                            "column": 33
                        }
                    },
                    "range": [
                        9173,
                        9224
                    ],
                    "raw": " before the first\nline of a hard-wrapped paragraph:"
                }
            ],
            "loc": {
                "start": {
                    "line": 260,
                    "column": 0
                },
                "end": {
                    "line": 261,
                    "column": 33
                }
            },
            "range": [
                9122,
                9224
            ],
            "raw": "Markdown allows you to be lazy and only put the `>` before the first\nline of a hard-wrapped paragraph:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.",
            "loc": {
                "start": {
                    "line": 263,
                    "column": 0
                },
                "end": {
                    "line": 268,
                    "column": 49
                }
            },
            "range": [
                9226,
                9574
            ],
            "raw": "    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    id sem consectetuer libero luctus adipiscing."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of ",
                    "loc": {
                        "start": {
                            "line": 270,
                            "column": 0
                        },
                        "end": {
                            "line": 271,
                            "column": 28
                        }
                    },
                    "range": [
                        9576,
                        9669
                    ],
                    "raw": "Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 271,
                            "column": 28
                        },
                        "end": {
                            "line": 271,
                            "column": 31
                        }
                    },
                    "range": [
                        9669,
                        9672
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": ":",
                    "loc": {
                        "start": {
                            "line": 271,
                            "column": 31
                        },
                        "end": {
                            "line": 271,
                            "column": 32
                        }
                    },
                    "range": [
                        9672,
                        9673
                    ],
                    "raw": ":"
                }
            ],
            "loc": {
                "start": {
                    "line": 270,
                    "column": 0
                },
                "end": {
                    "line": 271,
                    "column": 32
                }
            },
            "range": [
                9576,
                9673
            ],
            "raw": "Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of `>`:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.",
            "loc": {
                "start": {
                    "line": 273,
                    "column": 0
                },
                "end": {
                    "line": 277,
                    "column": 30
                }
            },
            "range": [
                9675,
                9794
            ],
            "raw": "    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Blockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:",
                    "loc": {
                        "start": {
                            "line": 279,
                            "column": 0
                        },
                        "end": {
                            "line": 280,
                            "column": 16
                        }
                    },
                    "range": [
                        9796,
                        9887
                    ],
                    "raw": "Blockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:"
                }
            ],
            "loc": {
                "start": {
                    "line": 279,
                    "column": 0
                },
                "end": {
                    "line": 280,
                    "column": 16
                }
            },
            "range": [
                9796,
                9887
            ],
            "raw": "Blockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "> ## This is a header.\n> \n> 1.   This is the first list item.\n> 2.   This is the second list item.\n> \n> Here's some example code:\n> \n>     return shell_exec(\"echo $input | $markdown_script\");",
            "loc": {
                "start": {
                    "line": 282,
                    "column": 0
                },
                "end": {
                    "line": 289,
                    "column": 59
                }
            },
            "range": [
                9889,
                10088
            ],
            "raw": "\t> ## This is a header.\n\t> \n\t> 1.   This is the first list item.\n\t> 2.   This is the second list item.\n\t> \n\t> Here's some example code:\n\t> \n\t>     return shell_exec(\"echo $input | $markdown_script\");"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Any decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu.",
                    "loc": {
                        "start": {
                            "line": 291,
                            "column": 0
                        },
                        "end": {
                            "line": 293,
                            "column": 31
                        }
                    },
                    "range": [
                        10090,
                        10253
                    ],
                    "raw": "Any decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu."
                }
            ],
            "loc": {
                "start": {
                    "line": 291,
                    "column": 0
                },
                "end": {
                    "line": 293,
                    "column": 31
                }
            },
            "range": [
                10090,
                10253
            ],
            "raw": "Any decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"list\">Lists</h3>",
            "loc": {
                "start": {
                    "line": 296,
                    "column": 0
                },
                "end": {
                    "line": 296,
                    "column": 24
                }
            },
            "range": [
                10256,
                10280
            ],
            "raw": "<h3 id=\"list\">Lists</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown supports ordered (numbered) and unordered (bulleted) lists.",
                    "loc": {
                        "start": {
                            "line": 298,
                            "column": 0
                        },
                        "end": {
                            "line": 298,
                            "column": 68
                        }
                    },
                    "range": [
                        10282,
                        10350
                    ],
                    "raw": "Markdown supports ordered (numbered) and unordered (bulleted) lists."
                }
            ],
            "loc": {
                "start": {
                    "line": 298,
                    "column": 0
                },
                "end": {
                    "line": 298,
                    "column": 68
                }
            },
            "range": [
                10282,
                10350
            ],
            "raw": "Markdown supports ordered (numbered) and unordered (bulleted) lists."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Unordered lists use asterisks, pluses, and hyphens -- interchangably\n-- a/packages/markdown-to-asts list markers:",
                    "loc": {
                        "start": {
                            "line": 300,
                            "column": 0
                        },
                        "end": {
                            "line": 301,
                            "column": 44
                        }
                    },
                    "range": [
                        10352,
                        10465
                    ],
                    "raw": "Unordered lists use asterisks, pluses, and hyphens -- interchangably\n-- a/packages/markdown-to-asts list markers:"
                }
            ],
            "loc": {
                "start": {
                    "line": 300,
                    "column": 0
                },
                "end": {
                    "line": 301,
                    "column": 44
                }
            },
            "range": [
                10352,
                10465
            ],
            "raw": "Unordered lists use asterisks, pluses, and hyphens -- interchangably\n-- a/packages/markdown-to-asts list markers:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   Red\n*   Green\n*   Blue",
            "loc": {
                "start": {
                    "line": 303,
                    "column": 0
                },
                "end": {
                    "line": 305,
                    "column": 12
                }
            },
            "range": [
                10467,
                10505
            ],
            "raw": "    *   Red\n    *   Green\n    *   Blue"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "is equivalent to:",
                    "loc": {
                        "start": {
                            "line": 307,
                            "column": 0
                        },
                        "end": {
                            "line": 307,
                            "column": 17
                        }
                    },
                    "range": [
                        10507,
                        10524
                    ],
                    "raw": "is equivalent to:"
                }
            ],
            "loc": {
                "start": {
                    "line": 307,
                    "column": 0
                },
                "end": {
                    "line": 307,
                    "column": 17
                }
            },
            "range": [
                10507,
                10524
            ],
            "raw": "is equivalent to:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "+   Red\n+   Green\n+   Blue",
            "loc": {
                "start": {
                    "line": 309,
                    "column": 0
                },
                "end": {
                    "line": 311,
                    "column": 12
                }
            },
            "range": [
                10526,
                10564
            ],
            "raw": "    +   Red\n    +   Green\n    +   Blue"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "and:",
                    "loc": {
                        "start": {
                            "line": 313,
                            "column": 0
                        },
                        "end": {
                            "line": 313,
                            "column": 4
                        }
                    },
                    "range": [
                        10566,
                        10570
                    ],
                    "raw": "and:"
                }
            ],
            "loc": {
                "start": {
                    "line": 313,
                    "column": 0
                },
                "end": {
                    "line": 313,
                    "column": 4
                }
            },
            "range": [
                10566,
                10570
            ],
            "raw": "and:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "-   Red\n-   Green\n-   Blue",
            "loc": {
                "start": {
                    "line": 315,
                    "column": 0
                },
                "end": {
                    "line": 317,
                    "column": 12
                }
            },
            "range": [
                10572,
                10610
            ],
            "raw": "    -   Red\n    -   Green\n    -   Blue"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Ordered lists use numbers followed by periods:",
                    "loc": {
                        "start": {
                            "line": 319,
                            "column": 0
                        },
                        "end": {
                            "line": 319,
                            "column": 46
                        }
                    },
                    "range": [
                        10612,
                        10658
                    ],
                    "raw": "Ordered lists use numbers followed by periods:"
                }
            ],
            "loc": {
                "start": {
                    "line": 319,
                    "column": 0
                },
                "end": {
                    "line": 319,
                    "column": 46
                }
            },
            "range": [
                10612,
                10658
            ],
            "raw": "Ordered lists use numbers followed by periods:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "1.  Bird\n2.  McHale\n3.  Parish",
            "loc": {
                "start": {
                    "line": 321,
                    "column": 0
                },
                "end": {
                    "line": 323,
                    "column": 14
                }
            },
            "range": [
                10660,
                10702
            ],
            "raw": "    1.  Bird\n    2.  McHale\n    3.  Parish"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "It's important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:",
                    "loc": {
                        "start": {
                            "line": 325,
                            "column": 0
                        },
                        "end": {
                            "line": 327,
                            "column": 41
                        }
                    },
                    "range": [
                        10704,
                        10879
                    ],
                    "raw": "It's important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:"
                }
            ],
            "loc": {
                "start": {
                    "line": 325,
                    "column": 0
                },
                "end": {
                    "line": 327,
                    "column": 41
                }
            },
            "range": [
                10704,
                10879
            ],
            "raw": "It's important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<ol>\n<li>Bird</li>\n<li>McHale</li>\n<li>Parish</li>\n</ol>",
            "loc": {
                "start": {
                    "line": 329,
                    "column": 0
                },
                "end": {
                    "line": 333,
                    "column": 9
                }
            },
            "range": [
                10881,
                10957
            ],
            "raw": "    <ol>\n    <li>Bird</li>\n    <li>McHale</li>\n    <li>Parish</li>\n    </ol>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "If you instead wrote the list in Markdown like this:",
                    "loc": {
                        "start": {
                            "line": 335,
                            "column": 0
                        },
                        "end": {
                            "line": 335,
                            "column": 52
                        }
                    },
                    "range": [
                        10959,
                        11011
                    ],
                    "raw": "If you instead wrote the list in Markdown like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 335,
                    "column": 0
                },
                "end": {
                    "line": 335,
                    "column": 52
                }
            },
            "range": [
                10959,
                11011
            ],
            "raw": "If you instead wrote the list in Markdown like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "1.  Bird\n1.  McHale\n1.  Parish",
            "loc": {
                "start": {
                    "line": 337,
                    "column": 0
                },
                "end": {
                    "line": 339,
                    "column": 14
                }
            },
            "range": [
                11013,
                11055
            ],
            "raw": "    1.  Bird\n    1.  McHale\n    1.  Parish"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "or even:",
                    "loc": {
                        "start": {
                            "line": 341,
                            "column": 0
                        },
                        "end": {
                            "line": 341,
                            "column": 8
                        }
                    },
                    "range": [
                        11057,
                        11065
                    ],
                    "raw": "or even:"
                }
            ],
            "loc": {
                "start": {
                    "line": 341,
                    "column": 0
                },
                "end": {
                    "line": 341,
                    "column": 8
                }
            },
            "range": [
                11057,
                11065
            ],
            "raw": "or even:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "3. Bird\n1. McHale\n8. Parish",
            "loc": {
                "start": {
                    "line": 343,
                    "column": 0
                },
                "end": {
                    "line": 345,
                    "column": 13
                }
            },
            "range": [
                11067,
                11106
            ],
            "raw": "    3. Bird\n    1. McHale\n    8. Parish"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "you'd get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don't have to.",
                    "loc": {
                        "start": {
                            "line": 347,
                            "column": 0
                        },
                        "end": {
                            "line": 350,
                            "column": 46
                        }
                    },
                    "range": [
                        11108,
                        11359
                    ],
                    "raw": "you'd get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don't have to."
                }
            ],
            "loc": {
                "start": {
                    "line": 347,
                    "column": 0
                },
                "end": {
                    "line": 350,
                    "column": 46
                }
            },
            "range": [
                11108,
                11359
            ],
            "raw": "you'd get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don't have to."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "If you do use lazy list numbering, however, you should still start the\nlist with the number 1. At some point in the future, Markdown may support\nstarting ordered lists at an arbitrary number.",
                    "loc": {
                        "start": {
                            "line": 352,
                            "column": 0
                        },
                        "end": {
                            "line": 354,
                            "column": 46
                        }
                    },
                    "range": [
                        11361,
                        11552
                    ],
                    "raw": "If you do use lazy list numbering, however, you should still start the\nlist with the number 1. At some point in the future, Markdown may support\nstarting ordered lists at an arbitrary number."
                }
            ],
            "loc": {
                "start": {
                    "line": 352,
                    "column": 0
                },
                "end": {
                    "line": 354,
                    "column": 46
                }
            },
            "range": [
                11361,
                11552
            ],
            "raw": "If you do use lazy list numbering, however, you should still start the\nlist with the number 1. At some point in the future, Markdown may support\nstarting ordered lists at an arbitrary number."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "List markers typically start at the left margin, but may be indented by\nup to three spaces. List markers must be followed by one or more spaces\nor a tab.",
                    "loc": {
                        "start": {
                            "line": 356,
                            "column": 0
                        },
                        "end": {
                            "line": 358,
                            "column": 9
                        }
                    },
                    "range": [
                        11554,
                        11707
                    ],
                    "raw": "List markers typically start at the left margin, but may be indented by\nup to three spaces. List markers must be followed by one or more spaces\nor a tab."
                }
            ],
            "loc": {
                "start": {
                    "line": 356,
                    "column": 0
                },
                "end": {
                    "line": 358,
                    "column": 9
                }
            },
            "range": [
                11554,
                11707
            ],
            "raw": "List markers typically start at the left margin, but may be indented by\nup to three spaces. List markers must be followed by one or more spaces\nor a tab."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To make lists look nice, you can wrap items with hanging indents:",
                    "loc": {
                        "start": {
                            "line": 360,
                            "column": 0
                        },
                        "end": {
                            "line": 360,
                            "column": 65
                        }
                    },
                    "range": [
                        11709,
                        11774
                    ],
                    "raw": "To make lists look nice, you can wrap items with hanging indents:"
                }
            ],
            "loc": {
                "start": {
                    "line": 360,
                    "column": 0
                },
                "end": {
                    "line": 360,
                    "column": 65
                }
            },
            "range": [
                11709,
                11774
            ],
            "raw": "To make lists look nice, you can wrap items with hanging indents:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.",
            "loc": {
                "start": {
                    "line": 362,
                    "column": 0
                },
                "end": {
                    "line": 366,
                    "column": 65
                }
            },
            "range": [
                11776,
                12097
            ],
            "raw": "    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n        Suspendisse id sem consectetuer libero luctus adipiscing."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "But if you want to be lazy, you don't have to:",
                    "loc": {
                        "start": {
                            "line": 368,
                            "column": 0
                        },
                        "end": {
                            "line": 368,
                            "column": 46
                        }
                    },
                    "range": [
                        12099,
                        12145
                    ],
                    "raw": "But if you want to be lazy, you don't have to:"
                }
            ],
            "loc": {
                "start": {
                    "line": 368,
                    "column": 0
                },
                "end": {
                    "line": 368,
                    "column": 46
                }
            },
            "range": [
                12099,
                12145
            ],
            "raw": "But if you want to be lazy, you don't have to:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.",
            "loc": {
                "start": {
                    "line": 370,
                    "column": 0
                },
                "end": {
                    "line": 374,
                    "column": 61
                }
            },
            "range": [
                12147,
                12456
            ],
            "raw": "    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "If list items are separated by blank lines, Markdown will wrap the\nitems in ",
                    "loc": {
                        "start": {
                            "line": 376,
                            "column": 0
                        },
                        "end": {
                            "line": 377,
                            "column": 9
                        }
                    },
                    "range": [
                        12458,
                        12534
                    ],
                    "raw": "If list items are separated by blank lines, Markdown will wrap the\nitems in "
                },
                {
                    "type": "Code",
                    "value": "<p>",
                    "loc": {
                        "start": {
                            "line": 377,
                            "column": 9
                        },
                        "end": {
                            "line": 377,
                            "column": 14
                        }
                    },
                    "range": [
                        12534,
                        12539
                    ],
                    "raw": "`<p>`"
                },
                {
                    "type": "Str",
                    "value": " tags in the HTML output. For example, this input:",
                    "loc": {
                        "start": {
                            "line": 377,
                            "column": 14
                        },
                        "end": {
                            "line": 377,
                            "column": 64
                        }
                    },
                    "range": [
                        12539,
                        12589
                    ],
                    "raw": " tags in the HTML output. For example, this input:"
                }
            ],
            "loc": {
                "start": {
                    "line": 376,
                    "column": 0
                },
                "end": {
                    "line": 377,
                    "column": 64
                }
            },
            "range": [
                12458,
                12589
            ],
            "raw": "If list items are separated by blank lines, Markdown will wrap the\nitems in `<p>` tags in the HTML output. For example, this input:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   Bird\n*   Magic",
            "loc": {
                "start": {
                    "line": 379,
                    "column": 0
                },
                "end": {
                    "line": 380,
                    "column": 13
                }
            },
            "range": [
                12591,
                12617
            ],
            "raw": "    *   Bird\n    *   Magic"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will turn into:",
                    "loc": {
                        "start": {
                            "line": 382,
                            "column": 0
                        },
                        "end": {
                            "line": 382,
                            "column": 15
                        }
                    },
                    "range": [
                        12619,
                        12634
                    ],
                    "raw": "will turn into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 382,
                    "column": 0
                },
                "end": {
                    "line": 382,
                    "column": 15
                }
            },
            "range": [
                12619,
                12634
            ],
            "raw": "will turn into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<ul>\n<li>Bird</li>\n<li>Magic</li>\n</ul>",
            "loc": {
                "start": {
                    "line": 384,
                    "column": 0
                },
                "end": {
                    "line": 387,
                    "column": 9
                }
            },
            "range": [
                12636,
                12691
            ],
            "raw": "    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "But this:",
                    "loc": {
                        "start": {
                            "line": 389,
                            "column": 0
                        },
                        "end": {
                            "line": 389,
                            "column": 9
                        }
                    },
                    "range": [
                        12693,
                        12702
                    ],
                    "raw": "But this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 389,
                    "column": 0
                },
                "end": {
                    "line": 389,
                    "column": 9
                }
            },
            "range": [
                12693,
                12702
            ],
            "raw": "But this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   Bird\n\n*   Magic",
            "loc": {
                "start": {
                    "line": 391,
                    "column": 0
                },
                "end": {
                    "line": 393,
                    "column": 13
                }
            },
            "range": [
                12704,
                12731
            ],
            "raw": "    *   Bird\n\n    *   Magic"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will turn into:",
                    "loc": {
                        "start": {
                            "line": 395,
                            "column": 0
                        },
                        "end": {
                            "line": 395,
                            "column": 15
                        }
                    },
                    "range": [
                        12733,
                        12748
                    ],
                    "raw": "will turn into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 395,
                    "column": 0
                },
                "end": {
                    "line": 395,
                    "column": 15
                }
            },
            "range": [
                12733,
                12748
            ],
            "raw": "will turn into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<ul>\n<li><p>Bird</p></li>\n<li><p>Magic</p></li>\n</ul>",
            "loc": {
                "start": {
                    "line": 397,
                    "column": 0
                },
                "end": {
                    "line": 400,
                    "column": 9
                }
            },
            "range": [
                12750,
                12819
            ],
            "raw": "    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "List items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be intended by either 4 spaces\nor one tab:",
                    "loc": {
                        "start": {
                            "line": 402,
                            "column": 0
                        },
                        "end": {
                            "line": 404,
                            "column": 11
                        }
                    },
                    "range": [
                        12821,
                        12956
                    ],
                    "raw": "List items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be intended by either 4 spaces\nor one tab:"
                }
            ],
            "loc": {
                "start": {
                    "line": 402,
                    "column": 0
                },
                "end": {
                    "line": 404,
                    "column": 11
                }
            },
            "range": [
                12821,
                12956
            ],
            "raw": "List items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be intended by either 4 spaces\nor one tab:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.",
            "loc": {
                "start": {
                    "line": 406,
                    "column": 0
                },
                "end": {
                    "line": 414,
                    "column": 65
                }
            },
            "range": [
                12958,
                13338
            ],
            "raw": "    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "It looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:",
                    "loc": {
                        "start": {
                            "line": 416,
                            "column": 0
                        },
                        "end": {
                            "line": 418,
                            "column": 5
                        }
                    },
                    "range": [
                        13340,
                        13460
                    ],
                    "raw": "It looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:"
                }
            ],
            "loc": {
                "start": {
                    "line": 416,
                    "column": 0
                },
                "end": {
                    "line": 418,
                    "column": 5
                }
            },
            "range": [
                13340,
                13460
            ],
            "raw": "It looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   This is a list item with two paragraphs.\n\n    This is the second paragraph in the list item. You're\nonly required to indent the first line. Lorem ipsum dolor\nsit amet, consectetuer adipiscing elit.\n\n*   Another item in the same list.",
            "loc": {
                "start": {
                    "line": 420,
                    "column": 0
                },
                "end": {
                    "line": 426,
                    "column": 38
                }
            },
            "range": [
                13462,
                13719
            ],
            "raw": "    *   This is a list item with two paragraphs.\n\n        This is the second paragraph in the list item. You're\n    only required to indent the first line. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit.\n\n    *   Another item in the same list."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To put a blockquote within a list item, the blockquote's ",
                    "loc": {
                        "start": {
                            "line": 428,
                            "column": 0
                        },
                        "end": {
                            "line": 428,
                            "column": 57
                        }
                    },
                    "range": [
                        13721,
                        13778
                    ],
                    "raw": "To put a blockquote within a list item, the blockquote's "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 428,
                            "column": 57
                        },
                        "end": {
                            "line": 428,
                            "column": 60
                        }
                    },
                    "range": [
                        13778,
                        13781
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": "\ndelimiters need to be indented:",
                    "loc": {
                        "start": {
                            "line": 428,
                            "column": 60
                        },
                        "end": {
                            "line": 429,
                            "column": 31
                        }
                    },
                    "range": [
                        13781,
                        13813
                    ],
                    "raw": "\ndelimiters need to be indented:"
                }
            ],
            "loc": {
                "start": {
                    "line": 428,
                    "column": 0
                },
                "end": {
                    "line": 429,
                    "column": 31
                }
            },
            "range": [
                13721,
                13813
            ],
            "raw": "To put a blockquote within a list item, the blockquote's `>`\ndelimiters need to be indented:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   A list item with a blockquote:\n\n    > This is a blockquote\n    > inside a list item.",
            "loc": {
                "start": {
                    "line": 431,
                    "column": 0
                },
                "end": {
                    "line": 434,
                    "column": 29
                }
            },
            "range": [
                13815,
                13915
            ],
            "raw": "    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To put a code block within a list item, the code block needs\nto be indented ",
                    "loc": {
                        "start": {
                            "line": 436,
                            "column": 0
                        },
                        "end": {
                            "line": 437,
                            "column": 15
                        }
                    },
                    "range": [
                        13917,
                        13993
                    ],
                    "raw": "To put a code block within a list item, the code block needs\nto be indented "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "twice",
                            "loc": {
                                "start": {
                                    "line": 437,
                                    "column": 16
                                },
                                "end": {
                                    "line": 437,
                                    "column": 21
                                }
                            },
                            "range": [
                                13994,
                                13999
                            ],
                            "raw": "twice"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 437,
                            "column": 15
                        },
                        "end": {
                            "line": 437,
                            "column": 22
                        }
                    },
                    "range": [
                        13993,
                        14000
                    ],
                    "raw": "*twice*"
                },
                {
                    "type": "Str",
                    "value": " -- 8 spaces or two tabs:",
                    "loc": {
                        "start": {
                            "line": 437,
                            "column": 22
                        },
                        "end": {
                            "line": 437,
                            "column": 47
                        }
                    },
                    "range": [
                        14000,
                        14025
                    ],
                    "raw": " -- 8 spaces or two tabs:"
                }
            ],
            "loc": {
                "start": {
                    "line": 436,
                    "column": 0
                },
                "end": {
                    "line": 437,
                    "column": 47
                }
            },
            "range": [
                13917,
                14025
            ],
            "raw": "To put a code block within a list item, the code block needs\nto be indented *twice* -- 8 spaces or two tabs:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*   A list item with a code block:\n\n        <code goes here>",
            "loc": {
                "start": {
                    "line": 439,
                    "column": 0
                },
                "end": {
                    "line": 441,
                    "column": 28
                }
            },
            "range": [
                14027,
                14095
            ],
            "raw": "    *   A list item with a code block:\n\n            <code goes here>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "It's worth noting that it's possible to trigger an ordered list by\naccident, by writing something like this:",
                    "loc": {
                        "start": {
                            "line": 444,
                            "column": 0
                        },
                        "end": {
                            "line": 445,
                            "column": 41
                        }
                    },
                    "range": [
                        14098,
                        14206
                    ],
                    "raw": "It's worth noting that it's possible to trigger an ordered list by\naccident, by writing something like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 444,
                    "column": 0
                },
                "end": {
                    "line": 445,
                    "column": 41
                }
            },
            "range": [
                14098,
                14206
            ],
            "raw": "It's worth noting that it's possible to trigger an ordered list by\naccident, by writing something like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "1986. What a great season.",
            "loc": {
                "start": {
                    "line": 447,
                    "column": 0
                },
                "end": {
                    "line": 447,
                    "column": 30
                }
            },
            "range": [
                14208,
                14238
            ],
            "raw": "    1986. What a great season."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "In other words, a ",
                    "loc": {
                        "start": {
                            "line": 449,
                            "column": 0
                        },
                        "end": {
                            "line": 449,
                            "column": 18
                        }
                    },
                    "range": [
                        14240,
                        14258
                    ],
                    "raw": "In other words, a "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "number-period-space",
                            "loc": {
                                "start": {
                                    "line": 449,
                                    "column": 19
                                },
                                "end": {
                                    "line": 449,
                                    "column": 38
                                }
                            },
                            "range": [
                                14259,
                                14278
                            ],
                            "raw": "number-period-space"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 449,
                            "column": 18
                        },
                        "end": {
                            "line": 449,
                            "column": 39
                        }
                    },
                    "range": [
                        14258,
                        14279
                    ],
                    "raw": "*number-period-space*"
                },
                {
                    "type": "Str",
                    "value": " sequence at the beginning of a\nline. To avoid this, you can backslash-escape the period:",
                    "loc": {
                        "start": {
                            "line": 449,
                            "column": 39
                        },
                        "end": {
                            "line": 450,
                            "column": 57
                        }
                    },
                    "range": [
                        14279,
                        14368
                    ],
                    "raw": " sequence at the beginning of a\nline. To avoid this, you can backslash-escape the period:"
                }
            ],
            "loc": {
                "start": {
                    "line": 449,
                    "column": 0
                },
                "end": {
                    "line": 450,
                    "column": 57
                }
            },
            "range": [
                14240,
                14368
            ],
            "raw": "In other words, a *number-period-space* sequence at the beginning of a\nline. To avoid this, you can backslash-escape the period:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "1986\\. What a great season.",
            "loc": {
                "start": {
                    "line": 452,
                    "column": 0
                },
                "end": {
                    "line": 452,
                    "column": 31
                }
            },
            "range": [
                14370,
                14401
            ],
            "raw": "    1986\\. What a great season."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"precode\">Code Blocks</h3>",
            "loc": {
                "start": {
                    "line": 456,
                    "column": 0
                },
                "end": {
                    "line": 456,
                    "column": 33
                }
            },
            "range": [
                14405,
                14438
            ],
            "raw": "<h3 id=\"precode\">Code Blocks</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Pre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both ",
                    "loc": {
                        "start": {
                            "line": 458,
                            "column": 0
                        },
                        "end": {
                            "line": 461,
                            "column": 8
                        }
                    },
                    "range": [
                        14440,
                        14656
                    ],
                    "raw": "Pre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both "
                },
                {
                    "type": "Code",
                    "value": "<pre>",
                    "loc": {
                        "start": {
                            "line": 461,
                            "column": 8
                        },
                        "end": {
                            "line": 461,
                            "column": 15
                        }
                    },
                    "range": [
                        14656,
                        14663
                    ],
                    "raw": "`<pre>`"
                },
                {
                    "type": "Str",
                    "value": " and ",
                    "loc": {
                        "start": {
                            "line": 461,
                            "column": 15
                        },
                        "end": {
                            "line": 461,
                            "column": 20
                        }
                    },
                    "range": [
                        14663,
                        14668
                    ],
                    "raw": " and "
                },
                {
                    "type": "Code",
                    "value": "<code>",
                    "loc": {
                        "start": {
                            "line": 461,
                            "column": 20
                        },
                        "end": {
                            "line": 461,
                            "column": 28
                        }
                    },
                    "range": [
                        14668,
                        14676
                    ],
                    "raw": "`<code>`"
                },
                {
                    "type": "Str",
                    "value": " tags.",
                    "loc": {
                        "start": {
                            "line": 461,
                            "column": 28
                        },
                        "end": {
                            "line": 461,
                            "column": 34
                        }
                    },
                    "range": [
                        14676,
                        14682
                    ],
                    "raw": " tags."
                }
            ],
            "loc": {
                "start": {
                    "line": 458,
                    "column": 0
                },
                "end": {
                    "line": 461,
                    "column": 34
                }
            },
            "range": [
                14440,
                14682
            ],
            "raw": "Pre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both `<pre>` and `<code>` tags."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab. For example, given this input:",
                    "loc": {
                        "start": {
                            "line": 463,
                            "column": 0
                        },
                        "end": {
                            "line": 464,
                            "column": 67
                        }
                    },
                    "range": [
                        14684,
                        14820
                    ],
                    "raw": "To produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab. For example, given this input:"
                }
            ],
            "loc": {
                "start": {
                    "line": 463,
                    "column": 0
                },
                "end": {
                    "line": 464,
                    "column": 67
                }
            },
            "range": [
                14684,
                14820
            ],
            "raw": "To produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab. For example, given this input:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is a normal paragraph:\n\n    This is a code block.",
            "loc": {
                "start": {
                    "line": 466,
                    "column": 0
                },
                "end": {
                    "line": 468,
                    "column": 29
                }
            },
            "range": [
                14822,
                14884
            ],
            "raw": "    This is a normal paragraph:\n\n        This is a code block."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown will generate:",
                    "loc": {
                        "start": {
                            "line": 470,
                            "column": 0
                        },
                        "end": {
                            "line": 470,
                            "column": 23
                        }
                    },
                    "range": [
                        14886,
                        14909
                    ],
                    "raw": "Markdown will generate:"
                }
            ],
            "loc": {
                "start": {
                    "line": 470,
                    "column": 0
                },
                "end": {
                    "line": 470,
                    "column": 23
                }
            },
            "range": [
                14886,
                14909
            ],
            "raw": "Markdown will generate:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>This is a normal paragraph:</p>\n\n<pre><code>This is a code block.\n</code></pre>",
            "loc": {
                "start": {
                    "line": 472,
                    "column": 0
                },
                "end": {
                    "line": 475,
                    "column": 17
                }
            },
            "range": [
                14911,
                15005
            ],
            "raw": "    <p>This is a normal paragraph:</p>\n\n    <pre><code>This is a code block.\n    </code></pre>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "One level of indentation -- 4 spaces or 1 tab -- is removed from each\nline of the code block. For example, this:",
                    "loc": {
                        "start": {
                            "line": 477,
                            "column": 0
                        },
                        "end": {
                            "line": 478,
                            "column": 42
                        }
                    },
                    "range": [
                        15007,
                        15119
                    ],
                    "raw": "One level of indentation -- 4 spaces or 1 tab -- is removed from each\nline of the code block. For example, this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 477,
                    "column": 0
                },
                "end": {
                    "line": 478,
                    "column": 42
                }
            },
            "range": [
                15007,
                15119
            ],
            "raw": "One level of indentation -- 4 spaces or 1 tab -- is removed from each\nline of the code block. For example, this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "Here is an example of AppleScript:\n\n    tell application \"Foo\"\n        beep\n    end tell",
            "loc": {
                "start": {
                    "line": 480,
                    "column": 0
                },
                "end": {
                    "line": 484,
                    "column": 16
                }
            },
            "range": [
                15121,
                15225
            ],
            "raw": "    Here is an example of AppleScript:\n\n        tell application \"Foo\"\n            beep\n        end tell"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will turn into:",
                    "loc": {
                        "start": {
                            "line": 486,
                            "column": 0
                        },
                        "end": {
                            "line": 486,
                            "column": 15
                        }
                    },
                    "range": [
                        15227,
                        15242
                    ],
                    "raw": "will turn into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 486,
                    "column": 0
                },
                "end": {
                    "line": 486,
                    "column": 15
                }
            },
            "range": [
                15227,
                15242
            ],
            "raw": "will turn into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>Here is an example of AppleScript:</p>\n\n<pre><code>tell application \"Foo\"\n    beep\nend tell\n</code></pre>",
            "loc": {
                "start": {
                    "line": 488,
                    "column": 0
                },
                "end": {
                    "line": 493,
                    "column": 17
                }
            },
            "range": [
                15244,
                15372
            ],
            "raw": "    <p>Here is an example of AppleScript:</p>\n\n    <pre><code>tell application \"Foo\"\n        beep\n    end tell\n    </code></pre>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "A code block continues until it reaches a line that is not indented\n(or the end of the article).",
                    "loc": {
                        "start": {
                            "line": 495,
                            "column": 0
                        },
                        "end": {
                            "line": 496,
                            "column": 28
                        }
                    },
                    "range": [
                        15374,
                        15470
                    ],
                    "raw": "A code block continues until it reaches a line that is not indented\n(or the end of the article)."
                }
            ],
            "loc": {
                "start": {
                    "line": 495,
                    "column": 0
                },
                "end": {
                    "line": 496,
                    "column": 28
                }
            },
            "range": [
                15374,
                15470
            ],
            "raw": "A code block continues until it reaches a line that is not indented\n(or the end of the article)."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Within a code block, ampersands (",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 0
                        },
                        "end": {
                            "line": 498,
                            "column": 33
                        }
                    },
                    "range": [
                        15472,
                        15505
                    ],
                    "raw": "Within a code block, ampersands ("
                },
                {
                    "type": "Code",
                    "value": "&",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 33
                        },
                        "end": {
                            "line": 498,
                            "column": 36
                        }
                    },
                    "range": [
                        15505,
                        15508
                    ],
                    "raw": "`&`"
                },
                {
                    "type": "Str",
                    "value": ") and angle brackets (",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 36
                        },
                        "end": {
                            "line": 498,
                            "column": 58
                        }
                    },
                    "range": [
                        15508,
                        15530
                    ],
                    "raw": ") and angle brackets ("
                },
                {
                    "type": "Code",
                    "value": "<",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 58
                        },
                        "end": {
                            "line": 498,
                            "column": 61
                        }
                    },
                    "range": [
                        15530,
                        15533
                    ],
                    "raw": "`<`"
                },
                {
                    "type": "Str",
                    "value": " and ",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 61
                        },
                        "end": {
                            "line": 498,
                            "column": 66
                        }
                    },
                    "range": [
                        15533,
                        15538
                    ],
                    "raw": " and "
                },
                {
                    "type": "Code",
                    "value": ">",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 66
                        },
                        "end": {
                            "line": 498,
                            "column": 69
                        }
                    },
                    "range": [
                        15538,
                        15541
                    ],
                    "raw": "`>`"
                },
                {
                    "type": "Str",
                    "value": ")\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:",
                    "loc": {
                        "start": {
                            "line": 498,
                            "column": 69
                        },
                        "end": {
                            "line": 502,
                            "column": 49
                        }
                    },
                    "range": [
                        15541,
                        15799
                    ],
                    "raw": ")\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 498,
                    "column": 0
                },
                "end": {
                    "line": 502,
                    "column": 49
                }
            },
            "range": [
                15472,
                15799
            ],
            "raw": "Within a code block, ampersands (`&`) and angle brackets (`<` and `>`)\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "    <div class=\"footer\">\n        &copy; 2004 Foo Corporation\n    </div>",
            "loc": {
                "start": {
                    "line": 504,
                    "column": 0
                },
                "end": {
                    "line": 506,
                    "column": 14
                }
            },
            "range": [
                15801,
                15884
            ],
            "raw": "        <div class=\"footer\">\n            &copy; 2004 Foo Corporation\n        </div>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will turn into:",
                    "loc": {
                        "start": {
                            "line": 508,
                            "column": 0
                        },
                        "end": {
                            "line": 508,
                            "column": 15
                        }
                    },
                    "range": [
                        15886,
                        15901
                    ],
                    "raw": "will turn into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 508,
                    "column": 0
                },
                "end": {
                    "line": 508,
                    "column": 15
                }
            },
            "range": [
                15886,
                15901
            ],
            "raw": "will turn into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<pre><code>&lt;div class=\"footer\"&gt;\n    &amp;copy; 2004 Foo Corporation\n&lt;/div&gt;\n</code></pre>",
            "loc": {
                "start": {
                    "line": 510,
                    "column": 0
                },
                "end": {
                    "line": 513,
                    "column": 17
                }
            },
            "range": [
                15903,
                16019
            ],
            "raw": "    <pre><code>&lt;div class=\"footer\"&gt;\n        &amp;copy; 2004 Foo Corporation\n    &lt;/div&gt;\n    </code></pre>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Regular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit's also easy to use Markdown to write about Markdown's own syntax.",
                    "loc": {
                        "start": {
                            "line": 515,
                            "column": 0
                        },
                        "end": {
                            "line": 517,
                            "column": 68
                        }
                    },
                    "range": [
                        16021,
                        16225
                    ],
                    "raw": "Regular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit's also easy to use Markdown to write about Markdown's own syntax."
                }
            ],
            "loc": {
                "start": {
                    "line": 515,
                    "column": 0
                },
                "end": {
                    "line": 517,
                    "column": 68
                }
            },
            "range": [
                16021,
                16225
            ],
            "raw": "Regular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit's also easy to use Markdown to write about Markdown's own syntax."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"hr\">Horizontal Rules</h3>",
            "loc": {
                "start": {
                    "line": 521,
                    "column": 0
                },
                "end": {
                    "line": 521,
                    "column": 33
                }
            },
            "range": [
                16229,
                16262
            ],
            "raw": "<h3 id=\"hr\">Horizontal Rules</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "You can produce a horizontal rule tag (",
                    "loc": {
                        "start": {
                            "line": 523,
                            "column": 0
                        },
                        "end": {
                            "line": 523,
                            "column": 39
                        }
                    },
                    "range": [
                        16264,
                        16303
                    ],
                    "raw": "You can produce a horizontal rule tag ("
                },
                {
                    "type": "Code",
                    "value": "<hr>",
                    "loc": {
                        "start": {
                            "line": 523,
                            "column": 39
                        },
                        "end": {
                            "line": 523,
                            "column": 45
                        }
                    },
                    "range": [
                        16303,
                        16309
                    ],
                    "raw": "`<hr>`"
                },
                {
                    "type": "Str",
                    "value": ") by placing three or\nmore hyphens, asterisks, or underscores on a line by themselves. If you\nwish, you may use spaces between the hyphens or asterisks. Each of the\nfollowing lines will produce a horizontal rule:",
                    "loc": {
                        "start": {
                            "line": 523,
                            "column": 45
                        },
                        "end": {
                            "line": 526,
                            "column": 47
                        }
                    },
                    "range": [
                        16309,
                        16521
                    ],
                    "raw": ") by placing three or\nmore hyphens, asterisks, or underscores on a line by themselves. If you\nwish, you may use spaces between the hyphens or asterisks. Each of the\nfollowing lines will produce a horizontal rule:"
                }
            ],
            "loc": {
                "start": {
                    "line": 523,
                    "column": 0
                },
                "end": {
                    "line": 526,
                    "column": 47
                }
            },
            "range": [
                16264,
                16521
            ],
            "raw": "You can produce a horizontal rule tag (`<hr>`) by placing three or\nmore hyphens, asterisks, or underscores on a line by themselves. If you\nwish, you may use spaces between the hyphens or asterisks. Each of the\nfollowing lines will produce a horizontal rule:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n\n_ _ _",
            "loc": {
                "start": {
                    "line": 528,
                    "column": 0
                },
                "end": {
                    "line": 538,
                    "column": 6
                }
            },
            "range": [
                16523,
                16617
            ],
            "raw": "    * * *\n\n    ***\n\n    *****\n\t\n    - - -\n\n    ---------------------------------------\n\n\t_ _ _"
        },
        {
            "type": "HorizontalRule",
            "loc": {
                "start": {
                    "line": 541,
                    "column": 0
                },
                "end": {
                    "line": 541,
                    "column": 5
                }
            },
            "range": [
                16620,
                16625
            ],
            "raw": "* * *"
        },
        {
            "type": "Html",
            "value": "<h2 id=\"span\">Span Elements</h2>",
            "loc": {
                "start": {
                    "line": 543,
                    "column": 0
                },
                "end": {
                    "line": 543,
                    "column": 32
                }
            },
            "range": [
                16627,
                16659
            ],
            "raw": "<h2 id=\"span\">Span Elements</h2>"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"link\">Links</h3>",
            "loc": {
                "start": {
                    "line": 545,
                    "column": 0
                },
                "end": {
                    "line": 545,
                    "column": 24
                }
            },
            "range": [
                16661,
                16685
            ],
            "raw": "<h3 id=\"link\">Links</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown supports two style of links: ",
                    "loc": {
                        "start": {
                            "line": 547,
                            "column": 0
                        },
                        "end": {
                            "line": 547,
                            "column": 38
                        }
                    },
                    "range": [
                        16687,
                        16725
                    ],
                    "raw": "Markdown supports two style of links: "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "inline",
                            "loc": {
                                "start": {
                                    "line": 547,
                                    "column": 39
                                },
                                "end": {
                                    "line": 547,
                                    "column": 45
                                }
                            },
                            "range": [
                                16726,
                                16732
                            ],
                            "raw": "inline"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 547,
                            "column": 38
                        },
                        "end": {
                            "line": 547,
                            "column": 46
                        }
                    },
                    "range": [
                        16725,
                        16733
                    ],
                    "raw": "*inline*"
                },
                {
                    "type": "Str",
                    "value": " and ",
                    "loc": {
                        "start": {
                            "line": 547,
                            "column": 46
                        },
                        "end": {
                            "line": 547,
                            "column": 51
                        }
                    },
                    "range": [
                        16733,
                        16738
                    ],
                    "raw": " and "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "reference",
                            "loc": {
                                "start": {
                                    "line": 547,
                                    "column": 52
                                },
                                "end": {
                                    "line": 547,
                                    "column": 61
                                }
                            },
                            "range": [
                                16739,
                                16748
                            ],
                            "raw": "reference"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 547,
                            "column": 51
                        },
                        "end": {
                            "line": 547,
                            "column": 62
                        }
                    },
                    "range": [
                        16738,
                        16749
                    ],
                    "raw": "*reference*"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 547,
                            "column": 62
                        },
                        "end": {
                            "line": 547,
                            "column": 63
                        }
                    },
                    "range": [
                        16749,
                        16750
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 547,
                    "column": 0
                },
                "end": {
                    "line": 547,
                    "column": 63
                }
            },
            "range": [
                16687,
                16750
            ],
            "raw": "Markdown supports two style of links: *inline* and *reference*."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "In both styles, the link text is delimited by ",
                    "loc": {
                        "start": {
                            "line": 549,
                            "column": 0
                        },
                        "end": {
                            "line": 549,
                            "column": 46
                        }
                    },
                    "range": [
                        16752,
                        16798
                    ],
                    "raw": "In both styles, the link text is delimited by "
                },
                {
                    "type": "LinkReference",
                    "identifier": "square brackets",
                    "label": "square brackets",
                    "referenceType": "shortcut",
                    "children": [
                        {
                            "type": "Str",
                            "value": "square brackets",
                            "loc": {
                                "start": {
                                    "line": 549,
                                    "column": 47
                                },
                                "end": {
                                    "line": 549,
                                    "column": 62
                                }
                            },
                            "range": [
                                16799,
                                16814
                            ],
                            "raw": "square brackets"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 549,
                            "column": 46
                        },
                        "end": {
                            "line": 549,
                            "column": 63
                        }
                    },
                    "range": [
                        16798,
                        16815
                    ],
                    "raw": "[square brackets]"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 549,
                            "column": 63
                        },
                        "end": {
                            "line": 549,
                            "column": 64
                        }
                    },
                    "range": [
                        16815,
                        16816
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 549,
                    "column": 0
                },
                "end": {
                    "line": 549,
                    "column": 64
                }
            },
            "range": [
                16752,
                16816
            ],
            "raw": "In both styles, the link text is delimited by [square brackets]."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To create an inline link, use a set of regular parentheses immediately\nafter the link text's closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an ",
                    "loc": {
                        "start": {
                            "line": 551,
                            "column": 0
                        },
                        "end": {
                            "line": 553,
                            "column": 60
                        }
                    },
                    "range": [
                        16818,
                        17019
                    ],
                    "raw": "To create an inline link, use a set of regular parentheses immediately\nafter the link text's closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "optional",
                            "loc": {
                                "start": {
                                    "line": 553,
                                    "column": 61
                                },
                                "end": {
                                    "line": 553,
                                    "column": 69
                                }
                            },
                            "range": [
                                17020,
                                17028
                            ],
                            "raw": "optional"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 553,
                            "column": 60
                        },
                        "end": {
                            "line": 553,
                            "column": 70
                        }
                    },
                    "range": [
                        17019,
                        17029
                    ],
                    "raw": "*optional*"
                },
                {
                    "type": "Str",
                    "value": "\ntitle for the link, surrounded in quotes. For example:",
                    "loc": {
                        "start": {
                            "line": 553,
                            "column": 70
                        },
                        "end": {
                            "line": 554,
                            "column": 54
                        }
                    },
                    "range": [
                        17029,
                        17084
                    ],
                    "raw": "\ntitle for the link, surrounded in quotes. For example:"
                }
            ],
            "loc": {
                "start": {
                    "line": 551,
                    "column": 0
                },
                "end": {
                    "line": 554,
                    "column": 54
                }
            },
            "range": [
                16818,
                17084
            ],
            "raw": "To create an inline link, use a set of regular parentheses immediately\nafter the link text's closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an *optional*\ntitle for the link, surrounded in quotes. For example:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is [an example](http://example.com/ \"Title\") inline link.\n\n[This link](http://example.net/) has no title attribute.",
            "loc": {
                "start": {
                    "line": 556,
                    "column": 0
                },
                "end": {
                    "line": 558,
                    "column": 60
                }
            },
            "range": [
                17086,
                17214
            ],
            "raw": "    This is [an example](http://example.com/ \"Title\") inline link.\n\n    [This link](http://example.net/) has no title attribute."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Will produce:",
                    "loc": {
                        "start": {
                            "line": 560,
                            "column": 0
                        },
                        "end": {
                            "line": 560,
                            "column": 13
                        }
                    },
                    "range": [
                        17216,
                        17229
                    ],
                    "raw": "Will produce:"
                }
            ],
            "loc": {
                "start": {
                    "line": 560,
                    "column": 0
                },
                "end": {
                    "line": 560,
                    "column": 13
                }
            },
            "range": [
                17216,
                17229
            ],
            "raw": "Will produce:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>This is <a href=\"http://example.com/\" title=\"Title\">\nan example</a> inline link.</p>\n\n<p><a href=\"http://example.net/\">This link</a> has no\ntitle attribute.</p>",
            "loc": {
                "start": {
                    "line": 562,
                    "column": 0
                },
                "end": {
                    "line": 566,
                    "column": 24
                }
            },
            "range": [
                17231,
                17410
            ],
            "raw": "    <p>This is <a href=\"http://example.com/\" title=\"Title\">\n    an example</a> inline link.</p>\n\n    <p><a href=\"http://example.net/\">This link</a> has no\n    title attribute.</p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "If you're referring to a local resource on the same server, you can\nuse relative paths:",
                    "loc": {
                        "start": {
                            "line": 568,
                            "column": 0
                        },
                        "end": {
                            "line": 569,
                            "column": 19
                        }
                    },
                    "range": [
                        17412,
                        17499
                    ],
                    "raw": "If you're referring to a local resource on the same server, you can\nuse relative paths:"
                }
            ],
            "loc": {
                "start": {
                    "line": 568,
                    "column": 0
                },
                "end": {
                    "line": 569,
                    "column": 19
                }
            },
            "range": [
                17412,
                17499
            ],
            "raw": "If you're referring to a local resource on the same server, you can\nuse relative paths:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "See my [About](/about/) page for details.",
            "loc": {
                "start": {
                    "line": 571,
                    "column": 0
                },
                "end": {
                    "line": 571,
                    "column": 45
                }
            },
            "range": [
                17501,
                17546
            ],
            "raw": "    See my [About](/about/) page for details."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Reference-style links use a second set of square brackets, inside\nwhich you place a label of your choosing to identify the link:",
                    "loc": {
                        "start": {
                            "line": 573,
                            "column": 0
                        },
                        "end": {
                            "line": 574,
                            "column": 62
                        }
                    },
                    "range": [
                        17548,
                        17676
                    ],
                    "raw": "Reference-style links use a second set of square brackets, inside\nwhich you place a label of your choosing to identify the link:"
                }
            ],
            "loc": {
                "start": {
                    "line": 573,
                    "column": 0
                },
                "end": {
                    "line": 574,
                    "column": 62
                }
            },
            "range": [
                17548,
                17676
            ],
            "raw": "Reference-style links use a second set of square brackets, inside\nwhich you place a label of your choosing to identify the link:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is [an example][id] reference-style link.",
            "loc": {
                "start": {
                    "line": 576,
                    "column": 0
                },
                "end": {
                    "line": 576,
                    "column": 50
                }
            },
            "range": [
                17678,
                17728
            ],
            "raw": "    This is [an example][id] reference-style link."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "You can optionally use a space to separate the sets of brackets:",
                    "loc": {
                        "start": {
                            "line": 578,
                            "column": 0
                        },
                        "end": {
                            "line": 578,
                            "column": 64
                        }
                    },
                    "range": [
                        17730,
                        17794
                    ],
                    "raw": "You can optionally use a space to separate the sets of brackets:"
                }
            ],
            "loc": {
                "start": {
                    "line": 578,
                    "column": 0
                },
                "end": {
                    "line": 578,
                    "column": 64
                }
            },
            "range": [
                17730,
                17794
            ],
            "raw": "You can optionally use a space to separate the sets of brackets:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "This is [an example] [id] reference-style link.",
            "loc": {
                "start": {
                    "line": 580,
                    "column": 0
                },
                "end": {
                    "line": 580,
                    "column": 51
                }
            },
            "range": [
                17796,
                17847
            ],
            "raw": "    This is [an example] [id] reference-style link."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Then, anywhere in the document, you define your link label like this,\non a line by itself:",
                    "loc": {
                        "start": {
                            "line": 582,
                            "column": 0
                        },
                        "end": {
                            "line": 583,
                            "column": 20
                        }
                    },
                    "range": [
                        17849,
                        17939
                    ],
                    "raw": "Then, anywhere in the document, you define your link label like this,\non a line by itself:"
                }
            ],
            "loc": {
                "start": {
                    "line": 582,
                    "column": 0
                },
                "end": {
                    "line": 583,
                    "column": 20
                }
            },
            "range": [
                17849,
                17939
            ],
            "raw": "Then, anywhere in the document, you define your link label like this,\non a line by itself:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[id]: http://example.com/  \"Optional Title Here\"",
            "loc": {
                "start": {
                    "line": 585,
                    "column": 0
                },
                "end": {
                    "line": 585,
                    "column": 52
                }
            },
            "range": [
                17941,
                17993
            ],
            "raw": "    [id]: http://example.com/  \"Optional Title Here\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "That is:",
                    "loc": {
                        "start": {
                            "line": 587,
                            "column": 0
                        },
                        "end": {
                            "line": 587,
                            "column": 8
                        }
                    },
                    "range": [
                        17995,
                        18003
                    ],
                    "raw": "That is:"
                }
            ],
            "loc": {
                "start": {
                    "line": 587,
                    "column": 0
                },
                "end": {
                    "line": 587,
                    "column": 8
                }
            },
            "range": [
                17995,
                18003
            ],
            "raw": "That is:"
        },
        {
            "type": "List",
            "ordered": false,
            "start": null,
            "spread": false,
            "children": [
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "Square brackets containing the link identifier (optionally\nindented from the left margin using up to three spaces);",
                                    "loc": {
                                        "start": {
                                            "line": 589,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 590,
                                            "column": 60
                                        }
                                    },
                                    "range": [
                                        18009,
                                        18128
                                    ],
                                    "raw": "Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 589,
                                    "column": 4
                                },
                                "end": {
                                    "line": 590,
                                    "column": 60
                                }
                            },
                            "range": [
                                18009,
                                18128
                            ],
                            "raw": "Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 589,
                            "column": 0
                        },
                        "end": {
                            "line": 590,
                            "column": 60
                        }
                    },
                    "range": [
                        18005,
                        18128
                    ],
                    "raw": "*   Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "followed by a colon;",
                                    "loc": {
                                        "start": {
                                            "line": 591,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 591,
                                            "column": 24
                                        }
                                    },
                                    "range": [
                                        18133,
                                        18153
                                    ],
                                    "raw": "followed by a colon;"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 591,
                                    "column": 4
                                },
                                "end": {
                                    "line": 591,
                                    "column": 24
                                }
                            },
                            "range": [
                                18133,
                                18153
                            ],
                            "raw": "followed by a colon;"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 591,
                            "column": 0
                        },
                        "end": {
                            "line": 591,
                            "column": 24
                        }
                    },
                    "range": [
                        18129,
                        18153
                    ],
                    "raw": "*   followed by a colon;"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "followed by one or more spaces (or tabs);",
                                    "loc": {
                                        "start": {
                                            "line": 592,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 592,
                                            "column": 45
                                        }
                                    },
                                    "range": [
                                        18158,
                                        18199
                                    ],
                                    "raw": "followed by one or more spaces (or tabs);"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 592,
                                    "column": 4
                                },
                                "end": {
                                    "line": 592,
                                    "column": 45
                                }
                            },
                            "range": [
                                18158,
                                18199
                            ],
                            "raw": "followed by one or more spaces (or tabs);"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 592,
                            "column": 0
                        },
                        "end": {
                            "line": 592,
                            "column": 45
                        }
                    },
                    "range": [
                        18154,
                        18199
                    ],
                    "raw": "*   followed by one or more spaces (or tabs);"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "followed by the URL for the link;",
                                    "loc": {
                                        "start": {
                                            "line": 593,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 593,
                                            "column": 37
                                        }
                                    },
                                    "range": [
                                        18204,
                                        18237
                                    ],
                                    "raw": "followed by the URL for the link;"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 593,
                                    "column": 4
                                },
                                "end": {
                                    "line": 593,
                                    "column": 37
                                }
                            },
                            "range": [
                                18204,
                                18237
                            ],
                            "raw": "followed by the URL for the link;"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 593,
                            "column": 0
                        },
                        "end": {
                            "line": 593,
                            "column": 37
                        }
                    },
                    "range": [
                        18200,
                        18237
                    ],
                    "raw": "*   followed by the URL for the link;"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "optionally followed by a title attribute for the link, enclosed\nin double or single quotes.",
                                    "loc": {
                                        "start": {
                                            "line": 594,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 595,
                                            "column": 31
                                        }
                                    },
                                    "range": [
                                        18242,
                                        18337
                                    ],
                                    "raw": "optionally followed by a title attribute for the link, enclosed\n    in double or single quotes."
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 594,
                                    "column": 4
                                },
                                "end": {
                                    "line": 595,
                                    "column": 31
                                }
                            },
                            "range": [
                                18242,
                                18337
                            ],
                            "raw": "optionally followed by a title attribute for the link, enclosed\n    in double or single quotes."
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 594,
                            "column": 0
                        },
                        "end": {
                            "line": 595,
                            "column": 31
                        }
                    },
                    "range": [
                        18238,
                        18337
                    ],
                    "raw": "*   optionally followed by a title attribute for the link, enclosed\n    in double or single quotes."
                }
            ],
            "loc": {
                "start": {
                    "line": 589,
                    "column": 0
                },
                "end": {
                    "line": 595,
                    "column": 31
                }
            },
            "range": [
                18005,
                18337
            ],
            "raw": "*   Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);\n*   followed by a colon;\n*   followed by one or more spaces (or tabs);\n*   followed by the URL for the link;\n*   optionally followed by a title attribute for the link, enclosed\n    in double or single quotes."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The link URL may, optionally, be surrounded by angle brackets:",
                    "loc": {
                        "start": {
                            "line": 597,
                            "column": 0
                        },
                        "end": {
                            "line": 597,
                            "column": 62
                        }
                    },
                    "range": [
                        18339,
                        18401
                    ],
                    "raw": "The link URL may, optionally, be surrounded by angle brackets:"
                }
            ],
            "loc": {
                "start": {
                    "line": 597,
                    "column": 0
                },
                "end": {
                    "line": 597,
                    "column": 62
                }
            },
            "range": [
                18339,
                18401
            ],
            "raw": "The link URL may, optionally, be surrounded by angle brackets:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[id]: <http://example.com/>  \"Optional Title Here\"",
            "loc": {
                "start": {
                    "line": 599,
                    "column": 0
                },
                "end": {
                    "line": 599,
                    "column": 54
                }
            },
            "range": [
                18403,
                18457
            ],
            "raw": "    [id]: <http://example.com/>  \"Optional Title Here\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "You can put the title attribute on the next line and use extra spaces\nor tabs for padding, which tends to look better with longer URLs:",
                    "loc": {
                        "start": {
                            "line": 601,
                            "column": 0
                        },
                        "end": {
                            "line": 602,
                            "column": 65
                        }
                    },
                    "range": [
                        18459,
                        18594
                    ],
                    "raw": "You can put the title attribute on the next line and use extra spaces\nor tabs for padding, which tends to look better with longer URLs:"
                }
            ],
            "loc": {
                "start": {
                    "line": 601,
                    "column": 0
                },
                "end": {
                    "line": 602,
                    "column": 65
                }
            },
            "range": [
                18459,
                18594
            ],
            "raw": "You can put the title attribute on the next line and use extra spaces\nor tabs for padding, which tends to look better with longer URLs:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[id]: http://example.com/longish/path/to/resource/here\n    \"Optional Title Here\"",
            "loc": {
                "start": {
                    "line": 604,
                    "column": 0
                },
                "end": {
                    "line": 605,
                    "column": 29
                }
            },
            "range": [
                18596,
                18684
            ],
            "raw": "    [id]: http://example.com/longish/path/to/resource/here\n        \"Optional Title Here\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Link definitions are only used for creating links during Markdown\nprocessing, and are stripped from your document in the HTML output.",
                    "loc": {
                        "start": {
                            "line": 607,
                            "column": 0
                        },
                        "end": {
                            "line": 608,
                            "column": 67
                        }
                    },
                    "range": [
                        18686,
                        18819
                    ],
                    "raw": "Link definitions are only used for creating links during Markdown\nprocessing, and are stripped from your document in the HTML output."
                }
            ],
            "loc": {
                "start": {
                    "line": 607,
                    "column": 0
                },
                "end": {
                    "line": 608,
                    "column": 67
                }
            },
            "range": [
                18686,
                18819
            ],
            "raw": "Link definitions are only used for creating links during Markdown\nprocessing, and are stripped from your document in the HTML output."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are ",
                    "loc": {
                        "start": {
                            "line": 610,
                            "column": 0
                        },
                        "end": {
                            "line": 610,
                            "column": 96
                        }
                    },
                    "range": [
                        18821,
                        18917
                    ],
                    "raw": "Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "not",
                            "loc": {
                                "start": {
                                    "line": 610,
                                    "column": 97
                                },
                                "end": {
                                    "line": 610,
                                    "column": 100
                                }
                            },
                            "range": [
                                18918,
                                18921
                            ],
                            "raw": "not"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 610,
                            "column": 96
                        },
                        "end": {
                            "line": 610,
                            "column": 101
                        }
                    },
                    "range": [
                        18917,
                        18922
                    ],
                    "raw": "*not*"
                },
                {
                    "type": "Str",
                    "value": " case sensitive. E.g. these two links:",
                    "loc": {
                        "start": {
                            "line": 610,
                            "column": 101
                        },
                        "end": {
                            "line": 610,
                            "column": 139
                        }
                    },
                    "range": [
                        18922,
                        18960
                    ],
                    "raw": " case sensitive. E.g. these two links:"
                }
            ],
            "loc": {
                "start": {
                    "line": 610,
                    "column": 0
                },
                "end": {
                    "line": 610,
                    "column": 139
                }
            },
            "range": [
                18821,
                18960
            ],
            "raw": "Link definition names may constist of letters, numbers, spaces, and punctuation -- but they are *not* case sensitive. E.g. these two links:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[link text][a]\n[link text][A]",
            "loc": {
                "start": {
                    "line": 612,
                    "column": 0
                },
                "end": {
                    "line": 613,
                    "column": 15
                }
            },
            "range": [
                18962,
                18993
            ],
            "raw": "\t[link text][a]\n\t[link text][A]"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "are equivalent.",
                    "loc": {
                        "start": {
                            "line": 615,
                            "column": 0
                        },
                        "end": {
                            "line": 615,
                            "column": 15
                        }
                    },
                    "range": [
                        18995,
                        19010
                    ],
                    "raw": "are equivalent."
                }
            ],
            "loc": {
                "start": {
                    "line": 615,
                    "column": 0
                },
                "end": {
                    "line": 615,
                    "column": 15
                }
            },
            "range": [
                18995,
                19010
            ],
            "raw": "are equivalent."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The ",
                    "loc": {
                        "start": {
                            "line": 617,
                            "column": 0
                        },
                        "end": {
                            "line": 617,
                            "column": 4
                        }
                    },
                    "range": [
                        19012,
                        19016
                    ],
                    "raw": "The "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "implicit link name",
                            "loc": {
                                "start": {
                                    "line": 617,
                                    "column": 5
                                },
                                "end": {
                                    "line": 617,
                                    "column": 23
                                }
                            },
                            "range": [
                                19017,
                                19035
                            ],
                            "raw": "implicit link name"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 617,
                            "column": 4
                        },
                        "end": {
                            "line": 617,
                            "column": 24
                        }
                    },
                    "range": [
                        19016,
                        19036
                    ],
                    "raw": "*implicit link name*"
                },
                {
                    "type": "Str",
                    "value": " shortcut allows you to omit the name of the\nlink, in which case the link text itself is used as the name.\nJust use an empty set of square brackets -- e.g., to link the word\n\"Google\" to the google.com web site, you could simply write:",
                    "loc": {
                        "start": {
                            "line": 617,
                            "column": 24
                        },
                        "end": {
                            "line": 620,
                            "column": 60
                        }
                    },
                    "range": [
                        19036,
                        19270
                    ],
                    "raw": " shortcut allows you to omit the name of the\nlink, in which case the link text itself is used as the name.\nJust use an empty set of square brackets -- e.g., to link the word\n\"Google\" to the google.com web site, you could simply write:"
                }
            ],
            "loc": {
                "start": {
                    "line": 617,
                    "column": 0
                },
                "end": {
                    "line": 620,
                    "column": 60
                }
            },
            "range": [
                19012,
                19270
            ],
            "raw": "The *implicit link name* shortcut allows you to omit the name of the\nlink, in which case the link text itself is used as the name.\nJust use an empty set of square brackets -- e.g., to link the word\n\"Google\" to the google.com web site, you could simply write:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[Google][]",
            "loc": {
                "start": {
                    "line": 622,
                    "column": 0
                },
                "end": {
                    "line": 622,
                    "column": 11
                }
            },
            "range": [
                19272,
                19283
            ],
            "raw": "\t[Google][]"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "And then define the link:",
                    "loc": {
                        "start": {
                            "line": 624,
                            "column": 0
                        },
                        "end": {
                            "line": 624,
                            "column": 25
                        }
                    },
                    "range": [
                        19285,
                        19310
                    ],
                    "raw": "And then define the link:"
                }
            ],
            "loc": {
                "start": {
                    "line": 624,
                    "column": 0
                },
                "end": {
                    "line": 624,
                    "column": 25
                }
            },
            "range": [
                19285,
                19310
            ],
            "raw": "And then define the link:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[Google]: http://google.com/",
            "loc": {
                "start": {
                    "line": 626,
                    "column": 0
                },
                "end": {
                    "line": 626,
                    "column": 29
                }
            },
            "range": [
                19312,
                19341
            ],
            "raw": "\t[Google]: http://google.com/"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Because link names may contain spaces, this shortcut even works for\nmultiple words in the link text:",
                    "loc": {
                        "start": {
                            "line": 628,
                            "column": 0
                        },
                        "end": {
                            "line": 629,
                            "column": 32
                        }
                    },
                    "range": [
                        19343,
                        19443
                    ],
                    "raw": "Because link names may contain spaces, this shortcut even works for\nmultiple words in the link text:"
                }
            ],
            "loc": {
                "start": {
                    "line": 628,
                    "column": 0
                },
                "end": {
                    "line": 629,
                    "column": 32
                }
            },
            "range": [
                19343,
                19443
            ],
            "raw": "Because link names may contain spaces, this shortcut even works for\nmultiple words in the link text:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "Visit [Daring Fireball][] for more information.",
            "loc": {
                "start": {
                    "line": 631,
                    "column": 0
                },
                "end": {
                    "line": 631,
                    "column": 48
                }
            },
            "range": [
                19445,
                19493
            ],
            "raw": "\tVisit [Daring Fireball][] for more information."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "And then define the link:",
                    "loc": {
                        "start": {
                            "line": 633,
                            "column": 0
                        },
                        "end": {
                            "line": 633,
                            "column": 25
                        }
                    },
                    "range": [
                        19495,
                        19520
                    ],
                    "raw": "And then define the link:"
                }
            ],
            "loc": {
                "start": {
                    "line": 633,
                    "column": 0
                },
                "end": {
                    "line": 633,
                    "column": 25
                }
            },
            "range": [
                19495,
                19520
            ],
            "raw": "And then define the link:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[Daring Fireball]: http://daringfireball.net/",
            "loc": {
                "start": {
                    "line": 635,
                    "column": 0
                },
                "end": {
                    "line": 635,
                    "column": 46
                }
            },
            "range": [
                19523,
                19569
            ],
            "raw": "\t[Daring Fireball]: http://daringfireball.net/"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Link definitions can be placed anywhere in your Markdown document. I\ntend to put them immediately after each paragraph in which they're\nused, but if you want, you can put them all at the end of your\ndocument, sort of like footnotes.",
                    "loc": {
                        "start": {
                            "line": 637,
                            "column": 0
                        },
                        "end": {
                            "line": 640,
                            "column": 33
                        }
                    },
                    "range": [
                        19571,
                        19803
                    ],
                    "raw": "Link definitions can be placed anywhere in your Markdown document. I\ntend to put them immediately after each paragraph in which they're\nused, but if you want, you can put them all at the end of your\ndocument, sort of like footnotes."
                }
            ],
            "loc": {
                "start": {
                    "line": 637,
                    "column": 0
                },
                "end": {
                    "line": 640,
                    "column": 33
                }
            },
            "range": [
                19571,
                19803
            ],
            "raw": "Link definitions can be placed anywhere in your Markdown document. I\ntend to put them immediately after each paragraph in which they're\nused, but if you want, you can put them all at the end of your\ndocument, sort of like footnotes."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Here's an example of reference links in action:",
                    "loc": {
                        "start": {
                            "line": 642,
                            "column": 0
                        },
                        "end": {
                            "line": 642,
                            "column": 47
                        }
                    },
                    "range": [
                        19805,
                        19852
                    ],
                    "raw": "Here's an example of reference links in action:"
                }
            ],
            "loc": {
                "start": {
                    "line": 642,
                    "column": 0
                },
                "end": {
                    "line": 642,
                    "column": 47
                }
            },
            "range": [
                19805,
                19852
            ],
            "raw": "Here's an example of reference links in action:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "I get 10 times more traffic from [Google] [1] than from\n[Yahoo] [2] or [MSN] [3].\n\n  [1]: http://google.com/        \"Google\"\n  [2]: http://search.yahoo.com/  \"Yahoo Search\"\n  [3]: http://search.msn.com/    \"MSN Search\"",
            "loc": {
                "start": {
                    "line": 644,
                    "column": 0
                },
                "end": {
                    "line": 649,
                    "column": 49
                }
            },
            "range": [
                19854,
                20092
            ],
            "raw": "    I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n      [1]: http://google.com/        \"Google\"\n      [2]: http://search.yahoo.com/  \"Yahoo Search\"\n      [3]: http://search.msn.com/    \"MSN Search\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Using the implicit link name shortcut, you could instead write:",
                    "loc": {
                        "start": {
                            "line": 651,
                            "column": 0
                        },
                        "end": {
                            "line": 651,
                            "column": 63
                        }
                    },
                    "range": [
                        20094,
                        20157
                    ],
                    "raw": "Using the implicit link name shortcut, you could instead write:"
                }
            ],
            "loc": {
                "start": {
                    "line": 651,
                    "column": 0
                },
                "end": {
                    "line": 651,
                    "column": 63
                }
            },
            "range": [
                20094,
                20157
            ],
            "raw": "Using the implicit link name shortcut, you could instead write:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "I get 10 times more traffic from [Google][] than from\n[Yahoo][] or [MSN][].\n\n  [google]: http://google.com/        \"Google\"\n  [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n  [msn]:    http://search.msn.com/    \"MSN Search\"",
            "loc": {
                "start": {
                    "line": 653,
                    "column": 0
                },
                "end": {
                    "line": 658,
                    "column": 54
                }
            },
            "range": [
                20159,
                20406
            ],
            "raw": "    I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n      [google]: http://google.com/        \"Google\"\n      [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n      [msn]:    http://search.msn.com/    \"MSN Search\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Both of the above examples will produce the following HTML output:",
                    "loc": {
                        "start": {
                            "line": 660,
                            "column": 0
                        },
                        "end": {
                            "line": 660,
                            "column": 66
                        }
                    },
                    "range": [
                        20408,
                        20474
                    ],
                    "raw": "Both of the above examples will produce the following HTML output:"
                }
            ],
            "loc": {
                "start": {
                    "line": 660,
                    "column": 0
                },
                "end": {
                    "line": 660,
                    "column": 66
                }
            },
            "range": [
                20408,
                20474
            ],
            "raw": "Both of the above examples will produce the following HTML output:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>I get 10 times more traffic from <a href=\"http://google.com/\"\ntitle=\"Google\">Google</a> than from\n<a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\nor <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>",
            "loc": {
                "start": {
                    "line": 662,
                    "column": 0
                },
                "end": {
                    "line": 665,
                    "column": 71
                }
            },
            "range": [
                20476,
                20726
            ],
            "raw": "    <p>I get 10 times more traffic from <a href=\"http://google.com/\"\n    title=\"Google\">Google</a> than from\n    <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\n    or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "For comparison, here is the same paragraph written using\nMarkdown's inline link style:",
                    "loc": {
                        "start": {
                            "line": 667,
                            "column": 0
                        },
                        "end": {
                            "line": 668,
                            "column": 29
                        }
                    },
                    "range": [
                        20728,
                        20814
                    ],
                    "raw": "For comparison, here is the same paragraph written using\nMarkdown's inline link style:"
                }
            ],
            "loc": {
                "start": {
                    "line": 667,
                    "column": 0
                },
                "end": {
                    "line": 668,
                    "column": 29
                }
            },
            "range": [
                20728,
                20814
            ],
            "raw": "For comparison, here is the same paragraph written using\nMarkdown's inline link style:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "I get 10 times more traffic from [Google](http://google.com/ \"Google\")\nthan from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n[MSN](http://search.msn.com/ \"MSN Search\").",
            "loc": {
                "start": {
                    "line": 670,
                    "column": 0
                },
                "end": {
                    "line": 672,
                    "column": 47
                }
            },
            "range": [
                20816,
                21004
            ],
            "raw": "    I get 10 times more traffic from [Google](http://google.com/ \"Google\")\n    than from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n    [MSN](http://search.msn.com/ \"MSN Search\")."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The point of reference-style links is not that they're easier to\nwrite. The point is that with reference-style links, your document\nsource is vastly more readable. Compare the above examples: using\nreference-style links, the paragraph itself is only 81 characters\nlong; with inline-style links, it's 176 characters; and as raw HTML,\nit's 234 characters. In the raw HTML, there's more markup than there\nis text.",
                    "loc": {
                        "start": {
                            "line": 674,
                            "column": 0
                        },
                        "end": {
                            "line": 680,
                            "column": 8
                        }
                    },
                    "range": [
                        21006,
                        21416
                    ],
                    "raw": "The point of reference-style links is not that they're easier to\nwrite. The point is that with reference-style links, your document\nsource is vastly more readable. Compare the above examples: using\nreference-style links, the paragraph itself is only 81 characters\nlong; with inline-style links, it's 176 characters; and as raw HTML,\nit's 234 characters. In the raw HTML, there's more markup than there\nis text."
                }
            ],
            "loc": {
                "start": {
                    "line": 674,
                    "column": 0
                },
                "end": {
                    "line": 680,
                    "column": 8
                }
            },
            "range": [
                21006,
                21416
            ],
            "raw": "The point of reference-style links is not that they're easier to\nwrite. The point is that with reference-style links, your document\nsource is vastly more readable. Compare the above examples: using\nreference-style links, the paragraph itself is only 81 characters\nlong; with inline-style links, it's 176 characters; and as raw HTML,\nit's 234 characters. In the raw HTML, there's more markup than there\nis text."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "With Markdown's reference-style links, a source document much more\nclosely resembles the final output, as rendered in a browser. By\nallowing you to move the markup-related metadata out of the paragraph,\nyou can add links without interrupting the narrative flow of your\nprose.",
                    "loc": {
                        "start": {
                            "line": 682,
                            "column": 0
                        },
                        "end": {
                            "line": 686,
                            "column": 6
                        }
                    },
                    "range": [
                        21418,
                        21693
                    ],
                    "raw": "With Markdown's reference-style links, a source document much more\nclosely resembles the final output, as rendered in a browser. By\nallowing you to move the markup-related metadata out of the paragraph,\nyou can add links without interrupting the narrative flow of your\nprose."
                }
            ],
            "loc": {
                "start": {
                    "line": 682,
                    "column": 0
                },
                "end": {
                    "line": 686,
                    "column": 6
                }
            },
            "range": [
                21418,
                21693
            ],
            "raw": "With Markdown's reference-style links, a source document much more\nclosely resembles the final output, as rendered in a browser. By\nallowing you to move the markup-related metadata out of the paragraph,\nyou can add links without interrupting the narrative flow of your\nprose."
        },
        {
            "type": "Html",
            "value": "<h3 id=\"em\">Emphasis</h3>",
            "loc": {
                "start": {
                    "line": 689,
                    "column": 0
                },
                "end": {
                    "line": 689,
                    "column": 25
                }
            },
            "range": [
                21696,
                21721
            ],
            "raw": "<h3 id=\"em\">Emphasis</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown treats asterisks (",
                    "loc": {
                        "start": {
                            "line": 691,
                            "column": 0
                        },
                        "end": {
                            "line": 691,
                            "column": 27
                        }
                    },
                    "range": [
                        21723,
                        21750
                    ],
                    "raw": "Markdown treats asterisks ("
                },
                {
                    "type": "Code",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 691,
                            "column": 27
                        },
                        "end": {
                            "line": 691,
                            "column": 30
                        }
                    },
                    "range": [
                        21750,
                        21753
                    ],
                    "raw": "`*`"
                },
                {
                    "type": "Str",
                    "value": ") and underscores (",
                    "loc": {
                        "start": {
                            "line": 691,
                            "column": 30
                        },
                        "end": {
                            "line": 691,
                            "column": 49
                        }
                    },
                    "range": [
                        21753,
                        21772
                    ],
                    "raw": ") and underscores ("
                },
                {
                    "type": "Code",
                    "value": "_",
                    "loc": {
                        "start": {
                            "line": 691,
                            "column": 49
                        },
                        "end": {
                            "line": 691,
                            "column": 52
                        }
                    },
                    "range": [
                        21772,
                        21775
                    ],
                    "raw": "`_`"
                },
                {
                    "type": "Str",
                    "value": ") as indicators of\nemphasis. Text wrapped with one ",
                    "loc": {
                        "start": {
                            "line": 691,
                            "column": 52
                        },
                        "end": {
                            "line": 692,
                            "column": 32
                        }
                    },
                    "range": [
                        21775,
                        21826
                    ],
                    "raw": ") as indicators of\nemphasis. Text wrapped with one "
                },
                {
                    "type": "Code",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 692,
                            "column": 32
                        },
                        "end": {
                            "line": 692,
                            "column": 35
                        }
                    },
                    "range": [
                        21826,
                        21829
                    ],
                    "raw": "`*`"
                },
                {
                    "type": "Str",
                    "value": " or ",
                    "loc": {
                        "start": {
                            "line": 692,
                            "column": 35
                        },
                        "end": {
                            "line": 692,
                            "column": 39
                        }
                    },
                    "range": [
                        21829,
                        21833
                    ],
                    "raw": " or "
                },
                {
                    "type": "Code",
                    "value": "_",
                    "loc": {
                        "start": {
                            "line": 692,
                            "column": 39
                        },
                        "end": {
                            "line": 692,
                            "column": 42
                        }
                    },
                    "range": [
                        21833,
                        21836
                    ],
                    "raw": "`_`"
                },
                {
                    "type": "Str",
                    "value": " will be wrapped with an\nHTML ",
                    "loc": {
                        "start": {
                            "line": 692,
                            "column": 42
                        },
                        "end": {
                            "line": 693,
                            "column": 5
                        }
                    },
                    "range": [
                        21836,
                        21866
                    ],
                    "raw": " will be wrapped with an\nHTML "
                },
                {
                    "type": "Code",
                    "value": "<em>",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 5
                        },
                        "end": {
                            "line": 693,
                            "column": 11
                        }
                    },
                    "range": [
                        21866,
                        21872
                    ],
                    "raw": "`<em>`"
                },
                {
                    "type": "Str",
                    "value": " tag; double ",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 11
                        },
                        "end": {
                            "line": 693,
                            "column": 24
                        }
                    },
                    "range": [
                        21872,
                        21885
                    ],
                    "raw": " tag; double "
                },
                {
                    "type": "Code",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 24
                        },
                        "end": {
                            "line": 693,
                            "column": 27
                        }
                    },
                    "range": [
                        21885,
                        21888
                    ],
                    "raw": "`*`"
                },
                {
                    "type": "Str",
                    "value": "'s or ",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 27
                        },
                        "end": {
                            "line": 693,
                            "column": 33
                        }
                    },
                    "range": [
                        21888,
                        21894
                    ],
                    "raw": "'s or "
                },
                {
                    "type": "Code",
                    "value": "_",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 33
                        },
                        "end": {
                            "line": 693,
                            "column": 36
                        }
                    },
                    "range": [
                        21894,
                        21897
                    ],
                    "raw": "`_`"
                },
                {
                    "type": "Str",
                    "value": "'s will be wrapped with an HTML\n",
                    "loc": {
                        "start": {
                            "line": 693,
                            "column": 36
                        },
                        "end": {
                            "line": 694,
                            "column": 0
                        }
                    },
                    "range": [
                        21897,
                        21929
                    ],
                    "raw": "'s will be wrapped with an HTML\n"
                },
                {
                    "type": "Code",
                    "value": "<strong>",
                    "loc": {
                        "start": {
                            "line": 694,
                            "column": 0
                        },
                        "end": {
                            "line": 694,
                            "column": 10
                        }
                    },
                    "range": [
                        21929,
                        21939
                    ],
                    "raw": "`<strong>`"
                },
                {
                    "type": "Str",
                    "value": " tag. E.g., this input:",
                    "loc": {
                        "start": {
                            "line": 694,
                            "column": 10
                        },
                        "end": {
                            "line": 694,
                            "column": 33
                        }
                    },
                    "range": [
                        21939,
                        21962
                    ],
                    "raw": " tag. E.g., this input:"
                }
            ],
            "loc": {
                "start": {
                    "line": 691,
                    "column": 0
                },
                "end": {
                    "line": 694,
                    "column": 33
                }
            },
            "range": [
                21723,
                21962
            ],
            "raw": "Markdown treats asterisks (`*`) and underscores (`_`) as indicators of\nemphasis. Text wrapped with one `*` or `_` will be wrapped with an\nHTML `<em>` tag; double `*`'s or `_`'s will be wrapped with an HTML\n`<strong>` tag. E.g., this input:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "*single asterisks*\n\n_single underscores_\n\n**double asterisks**\n\n__double underscores__",
            "loc": {
                "start": {
                    "line": 696,
                    "column": 0
                },
                "end": {
                    "line": 702,
                    "column": 26
                }
            },
            "range": [
                21964,
                22066
            ],
            "raw": "    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will produce:",
                    "loc": {
                        "start": {
                            "line": 704,
                            "column": 0
                        },
                        "end": {
                            "line": 704,
                            "column": 13
                        }
                    },
                    "range": [
                        22068,
                        22081
                    ],
                    "raw": "will produce:"
                }
            ],
            "loc": {
                "start": {
                    "line": 704,
                    "column": 0
                },
                "end": {
                    "line": 704,
                    "column": 13
                }
            },
            "range": [
                22068,
                22081
            ],
            "raw": "will produce:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<em>single asterisks</em>\n\n<em>single underscores</em>\n\n<strong>double asterisks</strong>\n\n<strong>double underscores</strong>",
            "loc": {
                "start": {
                    "line": 706,
                    "column": 0
                },
                "end": {
                    "line": 712,
                    "column": 39
                }
            },
            "range": [
                22083,
                22225
            ],
            "raw": "    <em>single asterisks</em>\n\n    <em>single underscores</em>\n\n    <strong>double asterisks</strong>\n\n    <strong>double underscores</strong>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "You can use whichever style you prefer; the lone restriction is that\nthe same character must be used to open and close an emphasis span.",
                    "loc": {
                        "start": {
                            "line": 714,
                            "column": 0
                        },
                        "end": {
                            "line": 715,
                            "column": 67
                        }
                    },
                    "range": [
                        22227,
                        22363
                    ],
                    "raw": "You can use whichever style you prefer; the lone restriction is that\nthe same character must be used to open and close an emphasis span."
                }
            ],
            "loc": {
                "start": {
                    "line": 714,
                    "column": 0
                },
                "end": {
                    "line": 715,
                    "column": 67
                }
            },
            "range": [
                22227,
                22363
            ],
            "raw": "You can use whichever style you prefer; the lone restriction is that\nthe same character must be used to open and close an emphasis span."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Emphasis can be used in the middle of a word:",
                    "loc": {
                        "start": {
                            "line": 717,
                            "column": 0
                        },
                        "end": {
                            "line": 717,
                            "column": 45
                        }
                    },
                    "range": [
                        22365,
                        22410
                    ],
                    "raw": "Emphasis can be used in the middle of a word:"
                }
            ],
            "loc": {
                "start": {
                    "line": 717,
                    "column": 0
                },
                "end": {
                    "line": 717,
                    "column": 45
                }
            },
            "range": [
                22365,
                22410
            ],
            "raw": "Emphasis can be used in the middle of a word:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "un*fucking*believable",
            "loc": {
                "start": {
                    "line": 719,
                    "column": 0
                },
                "end": {
                    "line": 719,
                    "column": 25
                }
            },
            "range": [
                22412,
                22437
            ],
            "raw": "    un*fucking*believable"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "But if you surround an ",
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 0
                        },
                        "end": {
                            "line": 721,
                            "column": 23
                        }
                    },
                    "range": [
                        22439,
                        22462
                    ],
                    "raw": "But if you surround an "
                },
                {
                    "type": "Code",
                    "value": "*",
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 23
                        },
                        "end": {
                            "line": 721,
                            "column": 26
                        }
                    },
                    "range": [
                        22462,
                        22465
                    ],
                    "raw": "`*`"
                },
                {
                    "type": "Str",
                    "value": " or ",
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 26
                        },
                        "end": {
                            "line": 721,
                            "column": 30
                        }
                    },
                    "range": [
                        22465,
                        22469
                    ],
                    "raw": " or "
                },
                {
                    "type": "Code",
                    "value": "_",
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 30
                        },
                        "end": {
                            "line": 721,
                            "column": 33
                        }
                    },
                    "range": [
                        22469,
                        22472
                    ],
                    "raw": "`_`"
                },
                {
                    "type": "Str",
                    "value": " with spaces, it'll be treated as a\nliteral asterisk or underscore.",
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 33
                        },
                        "end": {
                            "line": 722,
                            "column": 31
                        }
                    },
                    "range": [
                        22472,
                        22539
                    ],
                    "raw": " with spaces, it'll be treated as a\nliteral asterisk or underscore."
                }
            ],
            "loc": {
                "start": {
                    "line": 721,
                    "column": 0
                },
                "end": {
                    "line": 722,
                    "column": 31
                }
            },
            "range": [
                22439,
                22539
            ],
            "raw": "But if you surround an `*` or `_` with spaces, it'll be treated as a\nliteral asterisk or underscore."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To produce a literal asterisk or underscore at a position where it\nwould otherwise be used as an emphasis delimiter, you can backslash\nescape it:",
                    "loc": {
                        "start": {
                            "line": 724,
                            "column": 0
                        },
                        "end": {
                            "line": 726,
                            "column": 10
                        }
                    },
                    "range": [
                        22541,
                        22686
                    ],
                    "raw": "To produce a literal asterisk or underscore at a position where it\nwould otherwise be used as an emphasis delimiter, you can backslash\nescape it:"
                }
            ],
            "loc": {
                "start": {
                    "line": 724,
                    "column": 0
                },
                "end": {
                    "line": 726,
                    "column": 10
                }
            },
            "range": [
                22541,
                22686
            ],
            "raw": "To produce a literal asterisk or underscore at a position where it\nwould otherwise be used as an emphasis delimiter, you can backslash\nescape it:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "\\*this text is surrounded by literal asterisks\\*",
            "loc": {
                "start": {
                    "line": 728,
                    "column": 0
                },
                "end": {
                    "line": 728,
                    "column": 52
                }
            },
            "range": [
                22688,
                22740
            ],
            "raw": "    \\*this text is surrounded by literal asterisks\\*"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"code\">Code</h3>",
            "loc": {
                "start": {
                    "line": 732,
                    "column": 0
                },
                "end": {
                    "line": 732,
                    "column": 23
                }
            },
            "range": [
                22744,
                22767
            ],
            "raw": "<h3 id=\"code\">Code</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To indicate a span of code, wrap it with backtick quotes (",
                    "loc": {
                        "start": {
                            "line": 734,
                            "column": 0
                        },
                        "end": {
                            "line": 734,
                            "column": 58
                        }
                    },
                    "range": [
                        22769,
                        22827
                    ],
                    "raw": "To indicate a span of code, wrap it with backtick quotes ("
                },
                {
                    "type": "Code",
                    "value": "`",
                    "loc": {
                        "start": {
                            "line": 734,
                            "column": 58
                        },
                        "end": {
                            "line": 734,
                            "column": 65
                        }
                    },
                    "range": [
                        22827,
                        22834
                    ],
                    "raw": "`` ` ``"
                },
                {
                    "type": "Str",
                    "value": ").\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:",
                    "loc": {
                        "start": {
                            "line": 734,
                            "column": 65
                        },
                        "end": {
                            "line": 736,
                            "column": 30
                        }
                    },
                    "range": [
                        22834,
                        22938
                    ],
                    "raw": ").\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:"
                }
            ],
            "loc": {
                "start": {
                    "line": 734,
                    "column": 0
                },
                "end": {
                    "line": 736,
                    "column": 30
                }
            },
            "range": [
                22769,
                22938
            ],
            "raw": "To indicate a span of code, wrap it with backtick quotes (`` ` ``).\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "Use the `printf()` function.",
            "loc": {
                "start": {
                    "line": 738,
                    "column": 0
                },
                "end": {
                    "line": 738,
                    "column": 32
                }
            },
            "range": [
                22940,
                22972
            ],
            "raw": "    Use the `printf()` function."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will produce:",
                    "loc": {
                        "start": {
                            "line": 740,
                            "column": 0
                        },
                        "end": {
                            "line": 740,
                            "column": 13
                        }
                    },
                    "range": [
                        22974,
                        22987
                    ],
                    "raw": "will produce:"
                }
            ],
            "loc": {
                "start": {
                    "line": 740,
                    "column": 0
                },
                "end": {
                    "line": 740,
                    "column": 13
                }
            },
            "range": [
                22974,
                22987
            ],
            "raw": "will produce:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>Use the <code>printf()</code> function.</p>",
            "loc": {
                "start": {
                    "line": 742,
                    "column": 0
                },
                "end": {
                    "line": 742,
                    "column": 50
                }
            },
            "range": [
                22989,
                23039
            ],
            "raw": "    <p>Use the <code>printf()</code> function.</p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "To include a literal backtick character within a code span, you can use\nmultiple backticks as the opening and closing delimiters:",
                    "loc": {
                        "start": {
                            "line": 744,
                            "column": 0
                        },
                        "end": {
                            "line": 745,
                            "column": 57
                        }
                    },
                    "range": [
                        23041,
                        23170
                    ],
                    "raw": "To include a literal backtick character within a code span, you can use\nmultiple backticks as the opening and closing delimiters:"
                }
            ],
            "loc": {
                "start": {
                    "line": 744,
                    "column": 0
                },
                "end": {
                    "line": 745,
                    "column": 57
                }
            },
            "range": [
                23041,
                23170
            ],
            "raw": "To include a literal backtick character within a code span, you can use\nmultiple backticks as the opening and closing delimiters:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "``There is a literal backtick (`) here.``",
            "loc": {
                "start": {
                    "line": 747,
                    "column": 0
                },
                "end": {
                    "line": 747,
                    "column": 45
                }
            },
            "range": [
                23172,
                23217
            ],
            "raw": "    ``There is a literal backtick (`) here.``"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "which will produce this:",
                    "loc": {
                        "start": {
                            "line": 749,
                            "column": 0
                        },
                        "end": {
                            "line": 749,
                            "column": 24
                        }
                    },
                    "range": [
                        23219,
                        23243
                    ],
                    "raw": "which will produce this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 749,
                    "column": 0
                },
                "end": {
                    "line": 749,
                    "column": 24
                }
            },
            "range": [
                23219,
                23243
            ],
            "raw": "which will produce this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p><code>There is a literal backtick (`) here.</code></p>",
            "loc": {
                "start": {
                    "line": 751,
                    "column": 0
                },
                "end": {
                    "line": 751,
                    "column": 61
                }
            },
            "range": [
                23245,
                23306
            ],
            "raw": "    <p><code>There is a literal backtick (`) here.</code></p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "The backtick delimiters surrounding a code span may include spaces --\none after the opening, one before the closing. This allows you to place\nliteral backtick characters at the beginning or end of a code span:",
                    "loc": {
                        "start": {
                            "line": 753,
                            "column": 0
                        },
                        "end": {
                            "line": 755,
                            "column": 67
                        }
                    },
                    "range": [
                        23308,
                        23517
                    ],
                    "raw": "The backtick delimiters surrounding a code span may include spaces --\none after the opening, one before the closing. This allows you to place\nliteral backtick characters at the beginning or end of a code span:"
                }
            ],
            "loc": {
                "start": {
                    "line": 753,
                    "column": 0
                },
                "end": {
                    "line": 755,
                    "column": 67
                }
            },
            "range": [
                23308,
                23517
            ],
            "raw": "The backtick delimiters surrounding a code span may include spaces --\none after the opening, one before the closing. This allows you to place\nliteral backtick characters at the beginning or end of a code span:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "A single backtick in a code span: `` ` ``\n\nA backtick-delimited string in a code span: `` `foo` ``",
            "loc": {
                "start": {
                    "line": 757,
                    "column": 0
                },
                "end": {
                    "line": 759,
                    "column": 56
                }
            },
            "range": [
                23519,
                23620
            ],
            "raw": "\tA single backtick in a code span: `` ` ``\n\t\n\tA backtick-delimited string in a code span: `` `foo` ``"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "will produce:",
                    "loc": {
                        "start": {
                            "line": 761,
                            "column": 0
                        },
                        "end": {
                            "line": 761,
                            "column": 13
                        }
                    },
                    "range": [
                        23622,
                        23635
                    ],
                    "raw": "will produce:"
                }
            ],
            "loc": {
                "start": {
                    "line": 761,
                    "column": 0
                },
                "end": {
                    "line": 761,
                    "column": 13
                }
            },
            "range": [
                23622,
                23635
            ],
            "raw": "will produce:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>A single backtick in a code span: <code>`</code></p>\n\n<p>A backtick-delimited string in a code span: <code>`foo`</code></p>",
            "loc": {
                "start": {
                    "line": 763,
                    "column": 0
                },
                "end": {
                    "line": 765,
                    "column": 70
                }
            },
            "range": [
                23637,
                23766
            ],
            "raw": "\t<p>A single backtick in a code span: <code>`</code></p>\n\t\n\t<p>A backtick-delimited string in a code span: <code>`foo`</code></p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "With a code span, ampersands and angle brackets are encoded as HTML\nentities automatically, which makes it easy to include example HTML\ntags. Markdown will turn this:",
                    "loc": {
                        "start": {
                            "line": 767,
                            "column": 0
                        },
                        "end": {
                            "line": 769,
                            "column": 30
                        }
                    },
                    "range": [
                        23768,
                        23934
                    ],
                    "raw": "With a code span, ampersands and angle brackets are encoded as HTML\nentities automatically, which makes it easy to include example HTML\ntags. Markdown will turn this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 767,
                    "column": 0
                },
                "end": {
                    "line": 769,
                    "column": 30
                }
            },
            "range": [
                23768,
                23934
            ],
            "raw": "With a code span, ampersands and angle brackets are encoded as HTML\nentities automatically, which makes it easy to include example HTML\ntags. Markdown will turn this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "Please don't use any `<blink>` tags.",
            "loc": {
                "start": {
                    "line": 771,
                    "column": 0
                },
                "end": {
                    "line": 771,
                    "column": 40
                }
            },
            "range": [
                23936,
                23976
            ],
            "raw": "    Please don't use any `<blink>` tags."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "into:",
                    "loc": {
                        "start": {
                            "line": 773,
                            "column": 0
                        },
                        "end": {
                            "line": 773,
                            "column": 5
                        }
                    },
                    "range": [
                        23978,
                        23983
                    ],
                    "raw": "into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 773,
                    "column": 0
                },
                "end": {
                    "line": 773,
                    "column": 5
                }
            },
            "range": [
                23978,
                23983
            ],
            "raw": "into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>",
            "loc": {
                "start": {
                    "line": 775,
                    "column": 0
                },
                "end": {
                    "line": 775,
                    "column": 64
                }
            },
            "range": [
                23985,
                24049
            ],
            "raw": "    <p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "You can write this:",
                    "loc": {
                        "start": {
                            "line": 777,
                            "column": 0
                        },
                        "end": {
                            "line": 777,
                            "column": 19
                        }
                    },
                    "range": [
                        24051,
                        24070
                    ],
                    "raw": "You can write this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 777,
                    "column": 0
                },
                "end": {
                    "line": 777,
                    "column": 19
                }
            },
            "range": [
                24051,
                24070
            ],
            "raw": "You can write this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "`&#8212;` is the decimal-encoded equivalent of `&mdash;`.",
            "loc": {
                "start": {
                    "line": 779,
                    "column": 0
                },
                "end": {
                    "line": 779,
                    "column": 61
                }
            },
            "range": [
                24072,
                24133
            ],
            "raw": "    `&#8212;` is the decimal-encoded equivalent of `&mdash;`."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "to produce:",
                    "loc": {
                        "start": {
                            "line": 781,
                            "column": 0
                        },
                        "end": {
                            "line": 781,
                            "column": 11
                        }
                    },
                    "range": [
                        24135,
                        24146
                    ],
                    "raw": "to produce:"
                }
            ],
            "loc": {
                "start": {
                    "line": 781,
                    "column": 0
                },
                "end": {
                    "line": 781,
                    "column": 11
                }
            },
            "range": [
                24135,
                24146
            ],
            "raw": "to produce:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<p><code>&amp;#8212;</code> is the decimal-encoded\nequivalent of <code>&amp;mdash;</code>.</p>",
            "loc": {
                "start": {
                    "line": 783,
                    "column": 0
                },
                "end": {
                    "line": 784,
                    "column": 47
                }
            },
            "range": [
                24148,
                24250
            ],
            "raw": "    <p><code>&amp;#8212;</code> is the decimal-encoded\n    equivalent of <code>&amp;mdash;</code>.</p>"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"img\">Images</h3>",
            "loc": {
                "start": {
                    "line": 788,
                    "column": 0
                },
                "end": {
                    "line": 788,
                    "column": 24
                }
            },
            "range": [
                24254,
                24278
            ],
            "raw": "<h3 id=\"img\">Images</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Admittedly, it's fairly difficult to devise a \"natural\" syntax for\nplacing images into a plain text document format.",
                    "loc": {
                        "start": {
                            "line": 790,
                            "column": 0
                        },
                        "end": {
                            "line": 791,
                            "column": 49
                        }
                    },
                    "range": [
                        24280,
                        24396
                    ],
                    "raw": "Admittedly, it's fairly difficult to devise a \"natural\" syntax for\nplacing images into a plain text document format."
                }
            ],
            "loc": {
                "start": {
                    "line": 790,
                    "column": 0
                },
                "end": {
                    "line": 791,
                    "column": 49
                }
            },
            "range": [
                24280,
                24396
            ],
            "raw": "Admittedly, it's fairly difficult to devise a \"natural\" syntax for\nplacing images into a plain text document format."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown uses an image syntax that is intended to resemble the syntax\nfor links, allowing for two styles: ",
                    "loc": {
                        "start": {
                            "line": 793,
                            "column": 0
                        },
                        "end": {
                            "line": 794,
                            "column": 36
                        }
                    },
                    "range": [
                        24398,
                        24504
                    ],
                    "raw": "Markdown uses an image syntax that is intended to resemble the syntax\nfor links, allowing for two styles: "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "inline",
                            "loc": {
                                "start": {
                                    "line": 794,
                                    "column": 37
                                },
                                "end": {
                                    "line": 794,
                                    "column": 43
                                }
                            },
                            "range": [
                                24505,
                                24511
                            ],
                            "raw": "inline"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 794,
                            "column": 36
                        },
                        "end": {
                            "line": 794,
                            "column": 44
                        }
                    },
                    "range": [
                        24504,
                        24512
                    ],
                    "raw": "*inline*"
                },
                {
                    "type": "Str",
                    "value": " and ",
                    "loc": {
                        "start": {
                            "line": 794,
                            "column": 44
                        },
                        "end": {
                            "line": 794,
                            "column": 49
                        }
                    },
                    "range": [
                        24512,
                        24517
                    ],
                    "raw": " and "
                },
                {
                    "type": "Emphasis",
                    "children": [
                        {
                            "type": "Str",
                            "value": "reference",
                            "loc": {
                                "start": {
                                    "line": 794,
                                    "column": 50
                                },
                                "end": {
                                    "line": 794,
                                    "column": 59
                                }
                            },
                            "range": [
                                24518,
                                24527
                            ],
                            "raw": "reference"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 794,
                            "column": 49
                        },
                        "end": {
                            "line": 794,
                            "column": 60
                        }
                    },
                    "range": [
                        24517,
                        24528
                    ],
                    "raw": "*reference*"
                },
                {
                    "type": "Str",
                    "value": ".",
                    "loc": {
                        "start": {
                            "line": 794,
                            "column": 60
                        },
                        "end": {
                            "line": 794,
                            "column": 61
                        }
                    },
                    "range": [
                        24528,
                        24529
                    ],
                    "raw": "."
                }
            ],
            "loc": {
                "start": {
                    "line": 793,
                    "column": 0
                },
                "end": {
                    "line": 794,
                    "column": 61
                }
            },
            "range": [
                24398,
                24529
            ],
            "raw": "Markdown uses an image syntax that is intended to resemble the syntax\nfor links, allowing for two styles: *inline* and *reference*."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Inline image syntax looks like this:",
                    "loc": {
                        "start": {
                            "line": 796,
                            "column": 0
                        },
                        "end": {
                            "line": 796,
                            "column": 36
                        }
                    },
                    "range": [
                        24531,
                        24567
                    ],
                    "raw": "Inline image syntax looks like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 796,
                    "column": 0
                },
                "end": {
                    "line": 796,
                    "column": 36
                }
            },
            "range": [
                24531,
                24567
            ],
            "raw": "Inline image syntax looks like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg \"Optional title\")",
            "loc": {
                "start": {
                    "line": 798,
                    "column": 0
                },
                "end": {
                    "line": 800,
                    "column": 50
                }
            },
            "range": [
                24569,
                24654
            ],
            "raw": "    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "That is:",
                    "loc": {
                        "start": {
                            "line": 802,
                            "column": 0
                        },
                        "end": {
                            "line": 802,
                            "column": 8
                        }
                    },
                    "range": [
                        24656,
                        24664
                    ],
                    "raw": "That is:"
                }
            ],
            "loc": {
                "start": {
                    "line": 802,
                    "column": 0
                },
                "end": {
                    "line": 802,
                    "column": 8
                }
            },
            "range": [
                24656,
                24664
            ],
            "raw": "That is:"
        },
        {
            "type": "List",
            "ordered": false,
            "start": null,
            "spread": false,
            "children": [
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "An exclamation mark: ",
                                    "loc": {
                                        "start": {
                                            "line": 804,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 804,
                                            "column": 25
                                        }
                                    },
                                    "range": [
                                        24670,
                                        24691
                                    ],
                                    "raw": "An exclamation mark: "
                                },
                                {
                                    "type": "Code",
                                    "value": "!",
                                    "loc": {
                                        "start": {
                                            "line": 804,
                                            "column": 25
                                        },
                                        "end": {
                                            "line": 804,
                                            "column": 28
                                        }
                                    },
                                    "range": [
                                        24691,
                                        24694
                                    ],
                                    "raw": "`!`"
                                },
                                {
                                    "type": "Str",
                                    "value": ";",
                                    "loc": {
                                        "start": {
                                            "line": 804,
                                            "column": 28
                                        },
                                        "end": {
                                            "line": 804,
                                            "column": 29
                                        }
                                    },
                                    "range": [
                                        24694,
                                        24695
                                    ],
                                    "raw": ";"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 804,
                                    "column": 4
                                },
                                "end": {
                                    "line": 804,
                                    "column": 29
                                }
                            },
                            "range": [
                                24670,
                                24695
                            ],
                            "raw": "An exclamation mark: `!`;"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 804,
                            "column": 0
                        },
                        "end": {
                            "line": 804,
                            "column": 29
                        }
                    },
                    "range": [
                        24666,
                        24695
                    ],
                    "raw": "*   An exclamation mark: `!`;"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "followed by a set of square brackets, containing the ",
                                    "loc": {
                                        "start": {
                                            "line": 805,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 805,
                                            "column": 57
                                        }
                                    },
                                    "range": [
                                        24700,
                                        24753
                                    ],
                                    "raw": "followed by a set of square brackets, containing the "
                                },
                                {
                                    "type": "Code",
                                    "value": "alt",
                                    "loc": {
                                        "start": {
                                            "line": 805,
                                            "column": 57
                                        },
                                        "end": {
                                            "line": 805,
                                            "column": 62
                                        }
                                    },
                                    "range": [
                                        24753,
                                        24758
                                    ],
                                    "raw": "`alt`"
                                },
                                {
                                    "type": "Str",
                                    "value": "\nattribute text for the image;",
                                    "loc": {
                                        "start": {
                                            "line": 805,
                                            "column": 62
                                        },
                                        "end": {
                                            "line": 806,
                                            "column": 33
                                        }
                                    },
                                    "range": [
                                        24758,
                                        24792
                                    ],
                                    "raw": "\n    attribute text for the image;"
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 805,
                                    "column": 4
                                },
                                "end": {
                                    "line": 806,
                                    "column": 33
                                }
                            },
                            "range": [
                                24700,
                                24792
                            ],
                            "raw": "followed by a set of square brackets, containing the `alt`\n    attribute text for the image;"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 805,
                            "column": 0
                        },
                        "end": {
                            "line": 806,
                            "column": 33
                        }
                    },
                    "range": [
                        24696,
                        24792
                    ],
                    "raw": "*   followed by a set of square brackets, containing the `alt`\n    attribute text for the image;"
                },
                {
                    "type": "ListItem",
                    "spread": false,
                    "checked": null,
                    "children": [
                        {
                            "type": "Paragraph",
                            "children": [
                                {
                                    "type": "Str",
                                    "value": "followed by a set of parentheses, containing the URL or path to\nthe image, and an optional ",
                                    "loc": {
                                        "start": {
                                            "line": 807,
                                            "column": 4
                                        },
                                        "end": {
                                            "line": 808,
                                            "column": 31
                                        }
                                    },
                                    "range": [
                                        24797,
                                        24892
                                    ],
                                    "raw": "followed by a set of parentheses, containing the URL or path to\n    the image, and an optional "
                                },
                                {
                                    "type": "Code",
                                    "value": "title",
                                    "loc": {
                                        "start": {
                                            "line": 808,
                                            "column": 31
                                        },
                                        "end": {
                                            "line": 808,
                                            "column": 38
                                        }
                                    },
                                    "range": [
                                        24892,
                                        24899
                                    ],
                                    "raw": "`title`"
                                },
                                {
                                    "type": "Str",
                                    "value": " attribute enclosed in double\nor single quotes.",
                                    "loc": {
                                        "start": {
                                            "line": 808,
                                            "column": 38
                                        },
                                        "end": {
                                            "line": 809,
                                            "column": 21
                                        }
                                    },
                                    "range": [
                                        24899,
                                        24950
                                    ],
                                    "raw": " attribute enclosed in double\n    or single quotes."
                                }
                            ],
                            "loc": {
                                "start": {
                                    "line": 807,
                                    "column": 4
                                },
                                "end": {
                                    "line": 809,
                                    "column": 21
                                }
                            },
                            "range": [
                                24797,
                                24950
                            ],
                            "raw": "followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes."
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 807,
                            "column": 0
                        },
                        "end": {
                            "line": 809,
                            "column": 21
                        }
                    },
                    "range": [
                        24793,
                        24950
                    ],
                    "raw": "*   followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes."
                }
            ],
            "loc": {
                "start": {
                    "line": 804,
                    "column": 0
                },
                "end": {
                    "line": 809,
                    "column": 21
                }
            },
            "range": [
                24666,
                24950
            ],
            "raw": "*   An exclamation mark: `!`;\n*   followed by a set of square brackets, containing the `alt`\n    attribute text for the image;\n*   followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Reference-style image syntax looks like this:",
                    "loc": {
                        "start": {
                            "line": 811,
                            "column": 0
                        },
                        "end": {
                            "line": 811,
                            "column": 45
                        }
                    },
                    "range": [
                        24952,
                        24997
                    ],
                    "raw": "Reference-style image syntax looks like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 811,
                    "column": 0
                },
                "end": {
                    "line": 811,
                    "column": 45
                }
            },
            "range": [
                24952,
                24997
            ],
            "raw": "Reference-style image syntax looks like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "![Alt text][id]",
            "loc": {
                "start": {
                    "line": 813,
                    "column": 0
                },
                "end": {
                    "line": 813,
                    "column": 19
                }
            },
            "range": [
                24999,
                25018
            ],
            "raw": "    ![Alt text][id]"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Where \"id\" is the name of a defined image reference. Image references\nare defined using syntax identical to link references:",
                    "loc": {
                        "start": {
                            "line": 815,
                            "column": 0
                        },
                        "end": {
                            "line": 816,
                            "column": 54
                        }
                    },
                    "range": [
                        25020,
                        25144
                    ],
                    "raw": "Where \"id\" is the name of a defined image reference. Image references\nare defined using syntax identical to link references:"
                }
            ],
            "loc": {
                "start": {
                    "line": 815,
                    "column": 0
                },
                "end": {
                    "line": 816,
                    "column": 54
                }
            },
            "range": [
                25020,
                25144
            ],
            "raw": "Where \"id\" is the name of a defined image reference. Image references\nare defined using syntax identical to link references:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "[id]: url/to/image  \"Optional title attribute\"",
            "loc": {
                "start": {
                    "line": 818,
                    "column": 0
                },
                "end": {
                    "line": 818,
                    "column": 50
                }
            },
            "range": [
                25146,
                25196
            ],
            "raw": "    [id]: url/to/image  \"Optional title attribute\""
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "As of this writing, Markdown has no syntax for specifying the\ndimensions of an image; if this is important to you, you can simply\nuse regular HTML ",
                    "loc": {
                        "start": {
                            "line": 820,
                            "column": 0
                        },
                        "end": {
                            "line": 822,
                            "column": 17
                        }
                    },
                    "range": [
                        25198,
                        25345
                    ],
                    "raw": "As of this writing, Markdown has no syntax for specifying the\ndimensions of an image; if this is important to you, you can simply\nuse regular HTML "
                },
                {
                    "type": "Code",
                    "value": "<img>",
                    "loc": {
                        "start": {
                            "line": 822,
                            "column": 17
                        },
                        "end": {
                            "line": 822,
                            "column": 24
                        }
                    },
                    "range": [
                        25345,
                        25352
                    ],
                    "raw": "`<img>`"
                },
                {
                    "type": "Str",
                    "value": " tags.",
                    "loc": {
                        "start": {
                            "line": 822,
                            "column": 24
                        },
                        "end": {
                            "line": 822,
                            "column": 30
                        }
                    },
                    "range": [
                        25352,
                        25358
                    ],
                    "raw": " tags."
                }
            ],
            "loc": {
                "start": {
                    "line": 820,
                    "column": 0
                },
                "end": {
                    "line": 822,
                    "column": 30
                }
            },
            "range": [
                25198,
                25358
            ],
            "raw": "As of this writing, Markdown has no syntax for specifying the\ndimensions of an image; if this is important to you, you can simply\nuse regular HTML `<img>` tags."
        },
        {
            "type": "HorizontalRule",
            "loc": {
                "start": {
                    "line": 825,
                    "column": 0
                },
                "end": {
                    "line": 825,
                    "column": 5
                }
            },
            "range": [
                25361,
                25366
            ],
            "raw": "* * *"
        },
        {
            "type": "Html",
            "value": "<h2 id=\"misc\">Miscellaneous</h2>",
            "loc": {
                "start": {
                    "line": 828,
                    "column": 0
                },
                "end": {
                    "line": 828,
                    "column": 32
                }
            },
            "range": [
                25369,
                25401
            ],
            "raw": "<h2 id=\"misc\">Miscellaneous</h2>"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"autolink\">Automatic Links</h3>",
            "loc": {
                "start": {
                    "line": 830,
                    "column": 0
                },
                "end": {
                    "line": 830,
                    "column": 38
                }
            },
            "range": [
                25403,
                25441
            ],
            "raw": "<h3 id=\"autolink\">Automatic Links</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:",
                    "loc": {
                        "start": {
                            "line": 832,
                            "column": 0
                        },
                        "end": {
                            "line": 832,
                            "column": 299
                        }
                    },
                    "range": [
                        25443,
                        25742
                    ],
                    "raw": "Markdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 832,
                    "column": 0
                },
                "end": {
                    "line": 832,
                    "column": 299
                }
            },
            "range": [
                25443,
                25742
            ],
            "raw": "Markdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<http://example.com/>",
            "loc": {
                "start": {
                    "line": 834,
                    "column": 0
                },
                "end": {
                    "line": 835,
                    "column": 4
                }
            },
            "range": [
                25744,
                25774
            ],
            "raw": "    <http://example.com/>\n    "
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown will turn this into:",
                    "loc": {
                        "start": {
                            "line": 836,
                            "column": 0
                        },
                        "end": {
                            "line": 836,
                            "column": 29
                        }
                    },
                    "range": [
                        25775,
                        25804
                    ],
                    "raw": "Markdown will turn this into:"
                }
            ],
            "loc": {
                "start": {
                    "line": 836,
                    "column": 0
                },
                "end": {
                    "line": 836,
                    "column": 29
                }
            },
            "range": [
                25775,
                25804
            ],
            "raw": "Markdown will turn this into:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<a href=\"http://example.com/\">http://example.com/</a>",
            "loc": {
                "start": {
                    "line": 838,
                    "column": 0
                },
                "end": {
                    "line": 838,
                    "column": 57
                }
            },
            "range": [
                25806,
                25863
            ],
            "raw": "    <a href=\"http://example.com/\">http://example.com/</a>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Automatic links for email addresses work similarly, except that\nMarkdown will also perform a bit of randomized decimal and hex\nentity-encoding to help obscure your address from address-harvesting\nspambots. For example, Markdown will turn this:",
                    "loc": {
                        "start": {
                            "line": 840,
                            "column": 0
                        },
                        "end": {
                            "line": 843,
                            "column": 47
                        }
                    },
                    "range": [
                        25865,
                        26108
                    ],
                    "raw": "Automatic links for email addresses work similarly, except that\nMarkdown will also perform a bit of randomized decimal and hex\nentity-encoding to help obscure your address from address-harvesting\nspambots. For example, Markdown will turn this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 840,
                    "column": 0
                },
                "end": {
                    "line": 843,
                    "column": 47
                }
            },
            "range": [
                25865,
                26108
            ],
            "raw": "Automatic links for email addresses work similarly, except that\nMarkdown will also perform a bit of randomized decimal and hex\nentity-encoding to help obscure your address from address-harvesting\nspambots. For example, Markdown will turn this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<address@example.com>",
            "loc": {
                "start": {
                    "line": 845,
                    "column": 0
                },
                "end": {
                    "line": 845,
                    "column": 25
                }
            },
            "range": [
                26110,
                26135
            ],
            "raw": "    <address@example.com>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "into something like this:",
                    "loc": {
                        "start": {
                            "line": 847,
                            "column": 0
                        },
                        "end": {
                            "line": 847,
                            "column": 25
                        }
                    },
                    "range": [
                        26137,
                        26162
                    ],
                    "raw": "into something like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 847,
                    "column": 0
                },
                "end": {
                    "line": 847,
                    "column": 25
                }
            },
            "range": [
                26137,
                26162
            ],
            "raw": "into something like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "<a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n&#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>",
            "loc": {
                "start": {
                    "line": 849,
                    "column": 0
                },
                "end": {
                    "line": 852,
                    "column": 50
                }
            },
            "range": [
                26164,
                26444
            ],
            "raw": "    <a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "which will render in a browser as a clickable link to \"",
                    "loc": {
                        "start": {
                            "line": 854,
                            "column": 0
                        },
                        "end": {
                            "line": 854,
                            "column": 55
                        }
                    },
                    "range": [
                        26446,
                        26501
                    ],
                    "raw": "which will render in a browser as a clickable link to \""
                },
                {
                    "type": "Link",
                    "title": null,
                    "url": "mailto:address@example.com",
                    "children": [
                        {
                            "type": "Str",
                            "value": "address@example.com",
                            "loc": {
                                "start": {
                                    "line": 854,
                                    "column": 55
                                },
                                "end": {
                                    "line": 854,
                                    "column": 74
                                }
                            },
                            "range": [
                                26501,
                                26520
                            ],
                            "raw": "address@example.com"
                        }
                    ],
                    "loc": {
                        "start": {
                            "line": 854,
                            "column": 55
                        },
                        "end": {
                            "line": 854,
                            "column": 74
                        }
                    },
                    "range": [
                        26501,
                        26520
                    ],
                    "raw": "address@example.com"
                },
                {
                    "type": "Str",
                    "value": "\".",
                    "loc": {
                        "start": {
                            "line": 854,
                            "column": 74
                        },
                        "end": {
                            "line": 854,
                            "column": 76
                        }
                    },
                    "range": [
                        26520,
                        26522
                    ],
                    "raw": "\"."
                }
            ],
            "loc": {
                "start": {
                    "line": 854,
                    "column": 0
                },
                "end": {
                    "line": 854,
                    "column": 76
                }
            },
            "range": [
                26446,
                26522
            ],
            "raw": "which will render in a browser as a clickable link to \"address@example.com\"."
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "(This sort of entity-encoding trick will indeed fool many, if not\nmost, address-harvesting bots, but it definitely won't fool all of\nthem. It's better than nothing, but an address published in this way\nwill probably eventually start receiving spam.)",
                    "loc": {
                        "start": {
                            "line": 856,
                            "column": 0
                        },
                        "end": {
                            "line": 859,
                            "column": 47
                        }
                    },
                    "range": [
                        26524,
                        26773
                    ],
                    "raw": "(This sort of entity-encoding trick will indeed fool many, if not\nmost, address-harvesting bots, but it definitely won't fool all of\nthem. It's better than nothing, but an address published in this way\nwill probably eventually start receiving spam.)"
                }
            ],
            "loc": {
                "start": {
                    "line": 856,
                    "column": 0
                },
                "end": {
                    "line": 859,
                    "column": 47
                }
            },
            "range": [
                26524,
                26773
            ],
            "raw": "(This sort of entity-encoding trick will indeed fool many, if not\nmost, address-harvesting bots, but it definitely won't fool all of\nthem. It's better than nothing, but an address published in this way\nwill probably eventually start receiving spam.)"
        },
        {
            "type": "Html",
            "value": "<h3 id=\"backslash\">Backslash Escapes</h3>",
            "loc": {
                "start": {
                    "line": 863,
                    "column": 0
                },
                "end": {
                    "line": 863,
                    "column": 41
                }
            },
            "range": [
                26777,
                26818
            ],
            "raw": "<h3 id=\"backslash\">Backslash Escapes</h3>"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown allows you to use backslash escapes to generate literal\ncharacters which would otherwise have special meaning in Markdown's\nformatting syntax. For example, if you wanted to surround a word with\nliteral asterisks (instead of an HTML ",
                    "loc": {
                        "start": {
                            "line": 865,
                            "column": 0
                        },
                        "end": {
                            "line": 868,
                            "column": 38
                        }
                    },
                    "range": [
                        26820,
                        27061
                    ],
                    "raw": "Markdown allows you to use backslash escapes to generate literal\ncharacters which would otherwise have special meaning in Markdown's\nformatting syntax. For example, if you wanted to surround a word with\nliteral asterisks (instead of an HTML "
                },
                {
                    "type": "Code",
                    "value": "<em>",
                    "loc": {
                        "start": {
                            "line": 868,
                            "column": 38
                        },
                        "end": {
                            "line": 868,
                            "column": 44
                        }
                    },
                    "range": [
                        27061,
                        27067
                    ],
                    "raw": "`<em>`"
                },
                {
                    "type": "Str",
                    "value": " tag), you can backslashes\nbefore the asterisks, like this:",
                    "loc": {
                        "start": {
                            "line": 868,
                            "column": 44
                        },
                        "end": {
                            "line": 869,
                            "column": 32
                        }
                    },
                    "range": [
                        27067,
                        27126
                    ],
                    "raw": " tag), you can backslashes\nbefore the asterisks, like this:"
                }
            ],
            "loc": {
                "start": {
                    "line": 865,
                    "column": 0
                },
                "end": {
                    "line": 869,
                    "column": 32
                }
            },
            "range": [
                26820,
                27126
            ],
            "raw": "Markdown allows you to use backslash escapes to generate literal\ncharacters which would otherwise have special meaning in Markdown's\nformatting syntax. For example, if you wanted to surround a word with\nliteral asterisks (instead of an HTML `<em>` tag), you can backslashes\nbefore the asterisks, like this:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "\\*literal asterisks\\*",
            "loc": {
                "start": {
                    "line": 871,
                    "column": 0
                },
                "end": {
                    "line": 871,
                    "column": 25
                }
            },
            "range": [
                27128,
                27153
            ],
            "raw": "    \\*literal asterisks\\*"
        },
        {
            "type": "Paragraph",
            "children": [
                {
                    "type": "Str",
                    "value": "Markdown provides backslash escapes for the following characters:",
                    "loc": {
                        "start": {
                            "line": 873,
                            "column": 0
                        },
                        "end": {
                            "line": 873,
                            "column": 65
                        }
                    },
                    "range": [
                        27155,
                        27220
                    ],
                    "raw": "Markdown provides backslash escapes for the following characters:"
                }
            ],
            "loc": {
                "start": {
                    "line": 873,
                    "column": 0
                },
                "end": {
                    "line": 873,
                    "column": 65
                }
            },
            "range": [
                27155,
                27220
            ],
            "raw": "Markdown provides backslash escapes for the following characters:"
        },
        {
            "type": "CodeBlock",
            "lang": null,
            "meta": null,
            "value": "\\   backslash\n`   backtick\n*   asterisk\n_   underscore\n{}  curly braces\n[]  square brackets\n()  parentheses\n#   hash mark\n+\tplus sign\n-\tminus sign (hyphen)\n.   dot\n!   exclamation mark",
            "loc": {
                "start": {
                    "line": 875,
                    "column": 0
                },
                "end": {
                    "line": 886,
                    "column": 24
                }
            },
            "range": [
                27222,
                27448
            ],
            "raw": "    \\   backslash\n    `   backtick\n    *   asterisk\n    _   underscore\n    {}  curly braces\n    []  square brackets\n    ()  parentheses\n    #   hash mark\n\t+\tplus sign\n\t-\tminus sign (hyphen)\n    .   dot\n    !   exclamation mark"
        }
    ],
    "loc": {
        "start": {
            "line": 1,
            "column": 0
        },
        "end": {
            "line": 888,
            "column": 0
        }
    },
    "range": [
        0,
        27450
    ],
    "raw": "Markdown: Syntax\n================\n\n<ul id=\"ProjectSubmenu\">\n    <li><a href=\"/projects/markdown/\" title=\"Markdown Project Page\">Main</a></li>\n    <li><a href=\"/projects/markdown/basics\" title=\"Markdown Basics\">Basics</a></li>\n    <li><a class=\"selected\" title=\"Markdown Syntax Documentation\">Syntax</a></li>\n    <li><a href=\"/projects/markdown/license\" title=\"Pricing and License Information\">License</a></li>\n    <li><a href=\"/projects/markdown/dingus\" title=\"Online Markdown Web Form\">Dingus</a></li>\n</ul>\n\n\n*   [Overview](#overview)\n    *   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)\n*   [Block Elements](#block)\n    *   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)\n*   [Span Elements](#span)\n    *   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)\n*   [Miscellaneous](#misc)\n    *   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)\n\n\n**Note:** This document is itself written using Markdown; you\ncan [see the source for it by adding '.text' to the URL][src].\n\n  [src]: /projects/markdown/syntax.text\n\n* * *\n\n<h2 id=\"overview\">Overview</h2>\n\n<h3 id=\"philosophy\">Philosophy</h3>\n\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\n\nReadability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it's been marked up with tags or formatting instructions. While\nMarkdown's syntax has been influenced by several existing text-to-HTML\nfilters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4],\n[Grutatext] [5], and [EtText] [6] -- the single biggest source of\ninspiration for Markdown's syntax is the format of plain text email.\n\n  [1]: http://docutils.sourceforge.net/mirror/setext.html\n  [2]: http://www.aaronsw.com/2002/atx/\n  [3]: http://textism.com/tools/textile/\n  [4]: http://docutils.sourceforge.net/rst.html\n  [5]: http://www.triptico.com/software/grutatxt.html\n  [6]: http://ettext.taint.org/doc/\n\nTo this end, Markdown's syntax is comprised entirely of punctuation\ncharacters, which punctuation characters have been carefully chosen so\nas to look like what they mean. E.g., asterisks around a word actually\nlook like \\*emphasis\\*. Markdown lists look like, well, lists. Even\nblockquotes look like quoted passages of text, assuming you've ever\nused email.\n\n\n\n<h3 id=\"html\">Inline HTML</h3>\n\nMarkdown's syntax is intended for one purpose: to be used as a\nformat for *writing* for the web.\n\nMarkdown is not a replacement for HTML, or even close to it. Its\nsyntax is very small, corresponding only to a very small subset of\nHTML tags. The idea is *not* to create a syntax that makes it easier\nto insert HTML tags. In my opinion, HTML tags are already easy to\ninsert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a *publishing* format; Markdown is a *writing*\nformat. Thus, Markdown's formatting syntax only addresses issues that\ncan be conveyed in plain text.\n\nFor any markup that is not covered by Markdown's syntax, you simply\nuse HTML itself. There's no need to preface it or delimit it to\nindicate that you're switching from Markdown to HTML; you just use\nthe tags.\n\nThe only restrictions are that block-level HTML elements -- e.g. `<div>`,\n`<table>`, `<pre>`, `<p>`, etc. -- must be separated from surrounding\ncontent by blank lines, and the start and end tags of the block should\nnot be indented with tabs or spaces. Markdown is smart enough not\nto add extra (unwanted) `<p>` tags around HTML block-level tags.\n\nFor example, to add an HTML table to a Markdown article:\n\n    This is a regular paragraph.\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    This is another regular paragraph.\n\nNote that Markdown formatting syntax is not processed within block-level\nHTML tags. E.g., you can't use Markdown-style `*emphasis*` inside an\nHTML block.\n\nSpan-level HTML tags -- e.g. `<span>`, `<cite>`, or `<del>` -- can be\nused anywhere in a Markdown paragraph, list item, or header. If you\nwant, you can even use HTML tags instead of Markdown formatting; e.g. if\nyou'd prefer to use HTML `<a>` or `<img>` tags instead of Markdown's\nlink or image syntax, go right ahead.\n\nUnlike block-level HTML tags, Markdown syntax *is* processed within\nspan-level tags.\n\n\n<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>\n\nIn HTML, there are two characters that demand special treatment: `<`\nand `&`. Left angle brackets are used to start tags; ampersands are\nused to denote HTML entities. If you want to use them as literal\ncharacters, you must escape them as entities, e.g. `&lt;`, and\n`&amp;`.\n\nAmpersands in particular are bedeviling for web writers. If you want to\nwrite about 'AT&T', you need to write '`AT&amp;T`'. You even need to\nescape ampersands within URLs. Thus, if you want to link to:\n\n    http://images.google.com/images?num=30&q=larry+bird\n\nyou need to encode the URL as:\n\n    http://images.google.com/images?num=30&amp;q=larry+bird\n\nin your anchor tag `href` attribute. Needless to say, this is easy to\nforget, and is probably the single most common source of HTML validation\nerrors in otherwise well-marked-up web sites.\n\nMarkdown allows you to use these characters naturally, taking care of\nall the necessary escaping for you. If you use an ampersand as part of\nan HTML entity, it remains unchanged; otherwise it will be translated\ninto `&amp;`.\n\nSo, if you want to include a copyright symbol in your article, you can write:\n\n    &copy;\n\nand Markdown will leave it alone. But if you write:\n\n    AT&T\n\nMarkdown will translate it to:\n\n    AT&amp;T\n\nSimilarly, because Markdown supports [inline HTML](#html), if you use\nangle brackets as delimiters for HTML tags, Markdown will treat them as\nsuch. But if you write:\n\n    4 < 5\n\nMarkdown will translate it to:\n\n    4 &lt; 5\n\nHowever, inside Markdown code spans and blocks, angle brackets and\nampersands are *always* encoded automatically. This makes it easy to use\nMarkdown to write about HTML code. (As opposed to raw HTML, which is a\nterrible format for writing about HTML syntax, because every single `<`\nand `&` in your example code needs to be escaped.)\n\n\n* * *\n\n\n<h2 id=\"block\">Block Elements</h2>\n\n<h3 id=\"p\">Paragraphs and Line Breaks</h3>\n\nA paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be intended with spaces or tabs.\n\nThe implication of the \"one or more consecutive lines of text\" rule is\nthat Markdown supports \"hard-wrapped\" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType's \"Convert Line Breaks\" option) which translate every line break\ncharacter in a paragraph into a `<br />` tag.\n\nWhen you *do* want to insert a `<br />` break tag using Markdown, you\nend a line with two or more spaces, then type return.\n\nYes, this takes a tad more effort to create a `<br />`, but a simplistic\n\"every line break is a `<br />`\" rule wouldn't work for Markdown.\nMarkdown's email-style [blockquoting][bq] and multi-paragraph [list items][l]\nwork best -- and look better -- when you format them with hard breaks.\n\n  [bq]: #blockquote\n  [l]:  #list\n\n\n\n<h3 id=\"header\">Headers</h3>\n\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\n\nSetext-style headers are \"underlined\" using equal signs (for first-level\nheaders) and dashes (for second-level headers). For example:\n\n    This is an H1\n    =============\n\n    This is an H2\n    -------------\n\nAny number of underlining `=`'s or `-`'s will work.\n\nAtx-style headers use 1-6 hash characters at the start of the line,\ncorresponding to header levels 1-6. For example:\n\n    # This is an H1\n\n    ## This is an H2\n\n    ###### This is an H6\n\nOptionally, you may \"close\" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don't even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.) :\n\n    # This is an H1 #\n\n    ## This is an H2 ##\n\n    ### This is an H3 ######\n\n\n<h3 id=\"blockquote\">Blockquotes</h3>\n\nMarkdown uses email-style `>` characters for blockquoting. If you're\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a `>` before every line:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n    > \n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing.\n\nMarkdown allows you to be lazy and only put the `>` before the first\nline of a hard-wrapped paragraph:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    id sem consectetuer libero luctus adipiscing.\n\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of `>`:\n\n    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level.\n\nBlockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:\n\n\t> ## This is a header.\n\t> \n\t> 1.   This is the first list item.\n\t> 2.   This is the second list item.\n\t> \n\t> Here's some example code:\n\t> \n\t>     return shell_exec(\"echo $input | $markdown_script\");\n\nAny decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu.\n\n\n<h3 id=\"list\">Lists</h3>\n\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\n\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\n-- a/packages/markdown-to-asts list markers:\n\n    *   Red\n    *   Green\n    *   Blue\n\nis equivalent to:\n\n    +   Red\n    +   Green\n    +   Blue\n\nand:\n\n    -   Red\n    -   Green\n    -   Blue\n\nOrdered lists use numbers followed by periods:\n\n    1.  Bird\n    2.  McHale\n    3.  Parish\n\nIt's important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:\n\n    <ol>\n    <li>Bird</li>\n    <li>McHale</li>\n    <li>Parish</li>\n    </ol>\n\nIf you instead wrote the list in Markdown like this:\n\n    1.  Bird\n    1.  McHale\n    1.  Parish\n\nor even:\n\n    3. Bird\n    1. McHale\n    8. Parish\n\nyou'd get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don't have to.\n\nIf you do use lazy list numbering, however, you should still start the\nlist with the number 1. At some point in the future, Markdown may support\nstarting ordered lists at an arbitrary number.\n\nList markers typically start at the left margin, but may be indented by\nup to three spaces. List markers must be followed by one or more spaces\nor a tab.\n\nTo make lists look nice, you can wrap items with hanging indents:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n        Suspendisse id sem consectetuer libero luctus adipiscing.\n\nBut if you want to be lazy, you don't have to:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIf list items are separated by blank lines, Markdown will wrap the\nitems in `<p>` tags in the HTML output. For example, this input:\n\n    *   Bird\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>\n\nBut this:\n\n    *   Bird\n\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>\n\nList items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be intended by either 4 spaces\nor one tab:\n\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIt looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:\n\n    *   This is a list item with two paragraphs.\n\n        This is the second paragraph in the list item. You're\n    only required to indent the first line. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit.\n\n    *   Another item in the same list.\n\nTo put a blockquote within a list item, the blockquote's `>`\ndelimiters need to be indented:\n\n    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item.\n\nTo put a code block within a list item, the code block needs\nto be indented *twice* -- 8 spaces or two tabs:\n\n    *   A list item with a code block:\n\n            <code goes here>\n\n\nIt's worth noting that it's possible to trigger an ordered list by\naccident, by writing something like this:\n\n    1986. What a great season.\n\nIn other words, a *number-period-space* sequence at the beginning of a\nline. To avoid this, you can backslash-escape the period:\n\n    1986\\. What a great season.\n\n\n\n<h3 id=\"precode\">Code Blocks</h3>\n\nPre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both `<pre>` and `<code>` tags.\n\nTo produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab. For example, given this input:\n\n    This is a normal paragraph:\n\n        This is a code block.\n\nMarkdown will generate:\n\n    <p>This is a normal paragraph:</p>\n\n    <pre><code>This is a code block.\n    </code></pre>\n\nOne level of indentation -- 4 spaces or 1 tab -- is removed from each\nline of the code block. For example, this:\n\n    Here is an example of AppleScript:\n\n        tell application \"Foo\"\n            beep\n        end tell\n\nwill turn into:\n\n    <p>Here is an example of AppleScript:</p>\n\n    <pre><code>tell application \"Foo\"\n        beep\n    end tell\n    </code></pre>\n\nA code block continues until it reaches a line that is not indented\n(or the end of the article).\n\nWithin a code block, ampersands (`&`) and angle brackets (`<` and `>`)\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:\n\n        <div class=\"footer\">\n            &copy; 2004 Foo Corporation\n        </div>\n\nwill turn into:\n\n    <pre><code>&lt;div class=\"footer\"&gt;\n        &amp;copy; 2004 Foo Corporation\n    &lt;/div&gt;\n    </code></pre>\n\nRegular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit's also easy to use Markdown to write about Markdown's own syntax.\n\n\n\n<h3 id=\"hr\">Horizontal Rules</h3>\n\nYou can produce a horizontal rule tag (`<hr>`) by placing three or\nmore hyphens, asterisks, or underscores on a line by themselves. If you\nwish, you may use spaces between the hyphens or asterisks. Each of the\nfollowing lines will produce a horizontal rule:\n\n    * * *\n\n    ***\n\n    *****\n\t\n    - - -\n\n    ---------------------------------------\n\n\t_ _ _\n\n\n* * *\n\n<h2 id=\"span\">Span Elements</h2>\n\n<h3 id=\"link\">Links</h3>\n\nMarkdown supports two style of links: *inline* and *reference*.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately\nafter the link text's closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an *optional*\ntitle for the link, surrounded in quotes. For example:\n\n    This is [an example](http://example.com/ \"Title\") inline link.\n\n    [This link](http://example.net/) has no title attribute.\n\nWill produce:\n\n    <p>This is <a href=\"http://example.com/\" title=\"Title\">\n    an example</a> inline link.</p>\n\n    <p><a href=\"http://example.net/\">This link</a> has no\n    title attribute.</p>\n\nIf you're referring to a local resource on the same server, you can\nuse relative paths:\n\n    See my [About](/about/) page for details.\n\nReference-style links use a second set of square brackets, inside\nwhich you place a label of your choosing to identify the link:\n\n    This is [an example][id] reference-style link.\n\nYou can optionally use a space to separate the sets of brackets:\n\n    This is [an example] [id] reference-style link.\n\nThen, anywhere in the document, you define your link label like this,\non a line by itself:\n\n    [id]: http://example.com/  \"Optional Title Here\"\n\nThat is:\n\n*   Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);\n*   followed by a colon;\n*   followed by one or more spaces (or tabs);\n*   followed by the URL for the link;\n*   optionally followed by a title attribute for the link, enclosed\n    in double or single quotes.\n\nThe link URL may, optionally, be surrounded by angle brackets:\n\n    [id]: <http://example.com/>  \"Optional Title Here\"\n\nYou can put the title attribute on the next line and use extra spaces\nor tabs for padding, which tends to look better with longer URLs:\n\n    [id]: http://example.com/longish/path/to/resource/here\n        \"Optional Title Here\"\n\nLink definitions are only used for creating links during Markdown\nprocessing, and are stripped from your document in the HTML output.\n\nLink definition names may constist of letters, numbers, spaces, and punctuation -- but they are *not* case sensitive. E.g. these two links:\n\n\t[link text][a]\n\t[link text][A]\n\nare equivalent.\n\nThe *implicit link name* shortcut allows you to omit the name of the\nlink, in which case the link text itself is used as the name.\nJust use an empty set of square brackets -- e.g., to link the word\n\"Google\" to the google.com web site, you could simply write:\n\n\t[Google][]\n\nAnd then define the link:\n\n\t[Google]: http://google.com/\n\nBecause link names may contain spaces, this shortcut even works for\nmultiple words in the link text:\n\n\tVisit [Daring Fireball][] for more information.\n\nAnd then define the link:\n\t\n\t[Daring Fireball]: http://daringfireball.net/\n\nLink definitions can be placed anywhere in your Markdown document. I\ntend to put them immediately after each paragraph in which they're\nused, but if you want, you can put them all at the end of your\ndocument, sort of like footnotes.\n\nHere's an example of reference links in action:\n\n    I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n      [1]: http://google.com/        \"Google\"\n      [2]: http://search.yahoo.com/  \"Yahoo Search\"\n      [3]: http://search.msn.com/    \"MSN Search\"\n\nUsing the implicit link name shortcut, you could instead write:\n\n    I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n      [google]: http://google.com/        \"Google\"\n      [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n      [msn]:    http://search.msn.com/    \"MSN Search\"\n\nBoth of the above examples will produce the following HTML output:\n\n    <p>I get 10 times more traffic from <a href=\"http://google.com/\"\n    title=\"Google\">Google</a> than from\n    <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\n    or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>\n\nFor comparison, here is the same paragraph written using\nMarkdown's inline link style:\n\n    I get 10 times more traffic from [Google](http://google.com/ \"Google\")\n    than from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n    [MSN](http://search.msn.com/ \"MSN Search\").\n\nThe point of reference-style links is not that they're easier to\nwrite. The point is that with reference-style links, your document\nsource is vastly more readable. Compare the above examples: using\nreference-style links, the paragraph itself is only 81 characters\nlong; with inline-style links, it's 176 characters; and as raw HTML,\nit's 234 characters. In the raw HTML, there's more markup than there\nis text.\n\nWith Markdown's reference-style links, a source document much more\nclosely resembles the final output, as rendered in a browser. By\nallowing you to move the markup-related metadata out of the paragraph,\nyou can add links without interrupting the narrative flow of your\nprose.\n\n\n<h3 id=\"em\">Emphasis</h3>\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of\nemphasis. Text wrapped with one `*` or `_` will be wrapped with an\nHTML `<em>` tag; double `*`'s or `_`'s will be wrapped with an HTML\n`<strong>` tag. E.g., this input:\n\n    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__\n\nwill produce:\n\n    <em>single asterisks</em>\n\n    <em>single underscores</em>\n\n    <strong>double asterisks</strong>\n\n    <strong>double underscores</strong>\n\nYou can use whichever style you prefer; the lone restriction is that\nthe same character must be used to open and close an emphasis span.\n\nEmphasis can be used in the middle of a word:\n\n    un*fucking*believable\n\nBut if you surround an `*` or `_` with spaces, it'll be treated as a\nliteral asterisk or underscore.\n\nTo produce a literal asterisk or underscore at a position where it\nwould otherwise be used as an emphasis delimiter, you can backslash\nescape it:\n\n    \\*this text is surrounded by literal asterisks\\*\n\n\n\n<h3 id=\"code\">Code</h3>\n\nTo indicate a span of code, wrap it with backtick quotes (`` ` ``).\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:\n\n    Use the `printf()` function.\n\nwill produce:\n\n    <p>Use the <code>printf()</code> function.</p>\n\nTo include a literal backtick character within a code span, you can use\nmultiple backticks as the opening and closing delimiters:\n\n    ``There is a literal backtick (`) here.``\n\nwhich will produce this:\n\n    <p><code>There is a literal backtick (`) here.</code></p>\n\nThe backtick delimiters surrounding a code span may include spaces --\none after the opening, one before the closing. This allows you to place\nliteral backtick characters at the beginning or end of a code span:\n\n\tA single backtick in a code span: `` ` ``\n\t\n\tA backtick-delimited string in a code span: `` `foo` ``\n\nwill produce:\n\n\t<p>A single backtick in a code span: <code>`</code></p>\n\t\n\t<p>A backtick-delimited string in a code span: <code>`foo`</code></p>\n\nWith a code span, ampersands and angle brackets are encoded as HTML\nentities automatically, which makes it easy to include example HTML\ntags. Markdown will turn this:\n\n    Please don't use any `<blink>` tags.\n\ninto:\n\n    <p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>\n\nYou can write this:\n\n    `&#8212;` is the decimal-encoded equivalent of `&mdash;`.\n\nto produce:\n\n    <p><code>&amp;#8212;</code> is the decimal-encoded\n    equivalent of <code>&amp;mdash;</code>.</p>\n\n\n\n<h3 id=\"img\">Images</h3>\n\nAdmittedly, it's fairly difficult to devise a \"natural\" syntax for\nplacing images into a plain text document format.\n\nMarkdown uses an image syntax that is intended to resemble the syntax\nfor links, allowing for two styles: *inline* and *reference*.\n\nInline image syntax looks like this:\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\nThat is:\n\n*   An exclamation mark: `!`;\n*   followed by a set of square brackets, containing the `alt`\n    attribute text for the image;\n*   followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes.\n\nReference-style image syntax looks like this:\n\n    ![Alt text][id]\n\nWhere \"id\" is the name of a defined image reference. Image references\nare defined using syntax identical to link references:\n\n    [id]: url/to/image  \"Optional title attribute\"\n\nAs of this writing, Markdown has no syntax for specifying the\ndimensions of an image; if this is important to you, you can simply\nuse regular HTML `<img>` tags.\n\n\n* * *\n\n\n<h2 id=\"misc\">Miscellaneous</h2>\n\n<h3 id=\"autolink\">Automatic Links</h3>\n\nMarkdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:\n\n    <http://example.com/>\n    \nMarkdown will turn this into:\n\n    <a href=\"http://example.com/\">http://example.com/</a>\n\nAutomatic links for email addresses work similarly, except that\nMarkdown will also perform a bit of randomized decimal and hex\nentity-encoding to help obscure your address from address-harvesting\nspambots. For example, Markdown will turn this:\n\n    <address@example.com>\n\ninto something like this:\n\n    <a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>\n\nwhich will render in a browser as a clickable link to \"address@example.com\".\n\n(This sort of entity-encoding trick will indeed fool many, if not\nmost, address-harvesting bots, but it definitely won't fool all of\nthem. It's better than nothing, but an address published in this way\nwill probably eventually start receiving spam.)\n\n\n\n<h3 id=\"backslash\">Backslash Escapes</h3>\n\nMarkdown allows you to use backslash escapes to generate literal\ncharacters which would otherwise have special meaning in Markdown's\nformatting syntax. For example, if you wanted to surround a word with\nliteral asterisks (instead of an HTML `<em>` tag), you can backslashes\nbefore the asterisks, like this:\n\n    \\*literal asterisks\\*\n\nMarkdown provides backslash escapes for the following characters:\n\n    \\   backslash\n    `   backtick\n    *   asterisk\n    _   underscore\n    {}  curly braces\n    []  square brackets\n    ()  parentheses\n    #   hash mark\n\t+\tplus sign\n\t-\tminus sign (hyphen)\n    .   dot\n    !   exclamation mark\n\n"
}